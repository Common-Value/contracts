{"id":"1801c92dd16f3f7ea55a035743df5cc4","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"contracts/Campaign.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title Campaign\n */\ncontract Campaign is Initializable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    /** Shares are considered a ratio [0-1] with 18 digits where 1E18 = 1 */\n    uint256 public constant TOTAL_SHARES = 10**18;\n\n    uint256 public CHALLENGE_PERIOD;\n    uint256 public ACTIVATION_PERIOD;\n    uint256 public ACTIVE_DURATION;\n\n    bytes32 public approvedMerkleRoot;\n\n    /** Optimistic flow used to update merkleRoot.\n     * - Oracle propose update and Admin can block\n     * - Admin cannot initiate an update */\n    bytes32 public pendingMerkleRoot;\n    uint256 public activationTime;\n    uint256 public deployTime;\n\n    /** Uri pointing to the campaign's reward ruleset */\n    bytes32 public rewardRulesetUri;\n\n    address public admin;\n    address public oracle;\n\n    /** amount of total assets already claimed per asset address (zero address represents the native token) */\n    mapping(address => uint256) public totalClaimed;\n    /** amount of assets already claimed per claimer address, per asset address (zero address represents the native token) */\n    mapping(address => mapping(address => uint256)) public claimed;\n\n    /** Once locked, the merkleRoot cannot be updated anymore until unlocked */\n    bool public sharesLocked;\n    /** Once cancelled, the assets providers can withdraw */\n    bool public campaignCancelled;\n\n    /** amount of rewards provided per address of provider, per asset address (zero address represents the native token) */\n    mapping(address => mapping(address => uint256)) public providers;\n    /** amount of total rewards provided per asset address (zero address represents the native token) */\n    mapping(address => uint256) public totalProvided;\n\n    event Fund(address indexed provider, uint256 amount, address asset);\n    event SharesMerkleRootUpdate(bytes32 sharesMerkleRoot, bytes32 sharesUri, uint256 activationTime);\n    event Claim(address indexed account, uint256 share, uint256 reward, address assset);\n    event Challenge();\n    event Withdraw(address indexed account, uint256 amount, address asset);\n    event SharesLock(bool locked);\n    event CampaignCancelled();\n\n    error InvalidProof();\n    error ProposeWindowNotActive(uint256 blockTime);\n    error ChallengePeriodActive(uint256 blockTime);\n    error OnlyInChallengePeriod(uint256 blockTime);\n    error NoRewardAvailable();\n    error OnlyAdmin();\n    error WithdrawalNotAllowed();\n    error NoAssetsToWithdraw();\n    error OnlyOracle();\n    error NotIfCampaignLocked();\n    error NotIfCampaignCancelled();\n\n    modifier onlyAdmin() {\n        if (msg.sender != admin) {\n            revert OnlyAdmin();\n        }\n        _;\n    }\n\n    modifier onlyOracle() {\n        if (msg.sender != oracle) {\n            revert OnlyOracle();\n        }\n        _;\n    }\n\n    modifier notLocked() {\n        if (sharesLocked) {\n            revert NotIfCampaignLocked();\n        }\n        _;\n    }\n\n    modifier notCancelled() {\n        if (campaignCancelled) {\n            revert NotIfCampaignCancelled();\n        }\n        _;\n    }\n\n    /***************\n    EXTERNAL FUNCTIONS\n    ***************/\n\n    /**\n     * Campaign initialization, called once at deploy (using the campaign factory).\n     * CHALLENGE_PERIOD > ACTIVE_DURATION is recommended to limite one proposeal per\n     * active window\n     */\n    function initCampaign(\n        bytes32 _rewardRulesetUri,\n        address _admin,\n        address _oracle,\n        uint256 _activationTime,\n        uint256 _CHALLENGE_PERIOD,\n        uint256 _ACTIVATION_PERIOD,\n        uint256 _ACTIVE_DURATION\n    ) external initializer {\n        rewardRulesetUri = _rewardRulesetUri;\n        admin = _admin;\n        oracle = _oracle;\n        activationTime = _activationTime > 0 ? _activationTime : block.timestamp;\n        deployTime = block.timestamp;\n\n        CHALLENGE_PERIOD = _CHALLENGE_PERIOD;\n        ACTIVATION_PERIOD = _ACTIVATION_PERIOD;\n        ACTIVE_DURATION = _ACTIVE_DURATION;\n    }\n\n    /** Fund campaign with native or any ERC20 token.\n     * For native token, asset is the zero address.  */\n    function fund(address asset, uint256 amount) external payable nonReentrant notCancelled {\n        if (asset == address(0)) {\n            _fund(msg.value, asset, msg.sender);\n        } else {\n            _fund(amount, asset, msg.sender);\n        }\n    }\n\n    /** Only the oracle can propose a new merkleRoot. The proposed root becomes active only\n     * after a CHALLENGE_PERIOD */\n    function proposeShares(bytes32 _sharesMerkleRoot, bytes32 _sharesUri) external onlyOracle notLocked notCancelled {\n        checkMerkleRootUpdateAllowed();\n\n        approvedMerkleRoot = pendingMerkleRoot;\n        pendingMerkleRoot = _sharesMerkleRoot;\n        activationTime = block.timestamp + CHALLENGE_PERIOD;\n\n        emit SharesMerkleRootUpdate(_sharesMerkleRoot, _sharesUri, activationTime);\n    }\n\n    /** Claim rewards from one or more assets */\n    function claim(\n        address account,\n        uint256 share,\n        bytes32[] calldata proof,\n        address[] calldata assets,\n        address target\n    ) external nonReentrant notCancelled {\n        verifyShares(account, share, proof);\n\n        for (uint8 ix = 0; ix < assets.length; ix++) {\n            _claim(account, share, assets[ix], msg.sender, target);\n        }\n    }\n\n    /** Admin can cancel the pending merkle root while in challenge period.\n     * Previously approved root will stay active */\n    function challenge() external onlyAdmin {\n        if (!isChallengePeriod()) {\n            revert OnlyInChallengePeriod(block.timestamp);\n        }\n\n        pendingMerkleRoot = bytes32(0);\n        emit Challenge();\n    }\n\n    /** Admin can lock the campaign, meaning disable future merkle root updates */\n    function setSharesLock(bool _lock) external onlyAdmin {\n        sharesLocked = _lock;\n        emit SharesLock(_lock);\n    }\n\n    /** Admin can cancel the campaign.\n     * After cancellation, asset providers can withdraw their assets and claims are disabled */\n    function cancelCampaign() external onlyAdmin {\n        campaignCancelled = true;\n        emit CampaignCancelled();\n    }\n\n    /** asset providers can withdraw their proportion of assets only in case the campaign was cancelled by the admin */\n    function withdrawAssets(address account, address asset) external nonReentrant {\n        if (campaignCancelled) {\n            uint256 amount = (balanceOfAsset(asset) * providers[asset][account]) / totalProvided[asset];\n            if (amount == 0) {\n                revert NoAssetsToWithdraw();\n            }\n            providers[asset][account] = 0;\n\n            transferAssetOut(account, amount, asset);\n\n            emit Withdraw(account, amount, asset);\n        } else {\n            revert WithdrawalNotAllowed();\n        }\n    }\n\n    receive() external payable notCancelled {\n        _fund(msg.value, address(0), msg.sender);\n    }\n\n    /***************\n    VIEW FUNCTIONS\n    ***************/\n\n    /** Returns the currrent balance that the campaign holds for an asset.\n     * For the native token, asset is the zero address*/\n    function balanceOfAsset(address asset) public view returns (uint256) {\n        return asset == address(0) ? address(this).balance : IERC20(asset).balanceOf(address(this));\n    }\n\n    /** Validates the shares of an account */\n    function verifyShares(\n        address account,\n        uint256 share,\n        bytes32[] calldata proof\n    ) public view {\n        bytes32 claimingMerkleRoot = getValidRoot();\n\n        bytes32 leaf = keccak256(abi.encodePacked(account, share));\n        if (MerkleProof.verify(proof, claimingMerkleRoot, leaf) == false) {\n            revert InvalidProof();\n        }\n    }\n\n    /** Calculates the amount of available rewards to claim for an account */\n    function rewardsAvailableToClaimer(\n        address account,\n        uint256 share,\n        address asset\n    ) public view returns (uint256 total) {\n        /** Rewards by claimer are a portion of the total assets received. If new assets are received, new rewards will become available */\n        return (totalReceived(asset) * share) / TOTAL_SHARES - claimed[asset][account];\n    }\n\n    /** Returns true if the active root is the pending one */\n    function isPendingActive() public view returns (bool isActive) {\n        return pendingMerkleRoot != bytes32(0) && block.timestamp > activationTime;\n    }\n\n    /** Valid root is either the approved or pending one depending on the activation time */\n    function getValidRoot() public view returns (bytes32 root) {\n        return isPendingActive() ? pendingMerkleRoot : approvedMerkleRoot;\n    }\n\n    /** Total assets received by the contract.\n     * For the native token, asset is the zero address*/\n    function totalReceived(address asset) public view returns (uint256 total) {\n        return balanceOfAsset(asset) + totalClaimed[asset];\n    }\n\n    /** Indicates whether the campaign is currently at a challenge period */\n    function isChallengePeriod() public view returns (bool) {\n        return block.timestamp < activationTime;\n    }\n\n    /** Returns true if propose window for the oracle is active */\n    function isProposeWindowActive() public view returns (bool) {\n        return (uint256(block.timestamp) - uint256(deployTime)) % ACTIVATION_PERIOD < ACTIVE_DURATION;\n    }\n\n    /** Returns true if the oracle can propose a new merkle root */\n    function checkMerkleRootUpdateAllowed() public view {\n        if (isChallengePeriod()) {\n            revert ChallengePeriodActive(block.timestamp);\n        }\n\n        if (!isProposeWindowActive()) {\n            revert ProposeWindowNotActive(block.timestamp);\n        }\n    }\n\n    /** variable getters */\n\n    /***************\n    INTERNAL FUNCTIONS\n    ***************/\n\n    /** Claiming is always enabled (effectively possible only when a non-zero approved merkleRoot is set) */\n    function _claim(\n        address account,\n        uint256 share,\n        address asset,\n        address sender,\n        address target\n    ) internal {\n        uint256 reward = rewardsAvailableToClaimer(account, share, asset);\n\n        claimed[asset][account] += reward;\n        totalClaimed[asset] += reward;\n\n        if (sender == account && target != address(0)) {\n            transferAssetOut(target, reward, asset);\n        } else {\n            transferAssetOut(account, reward, asset);\n        }\n\n        emit Claim(account, share, reward, asset);\n    }\n\n    function _fund(\n        uint256 amount,\n        address asset,\n        address from\n    ) internal {\n        providers[asset][from] += amount;\n        totalProvided[asset] += amount;\n        if (asset != address(0)) {\n            IERC20(asset).safeTransferFrom(from, address(this), amount);\n        }\n        emit Fund(from, amount, address(asset));\n    }\n\n    function transferAssetOut(\n        address to,\n        uint256 amount,\n        address asset\n    ) internal {\n        if (asset == address(0)) {\n            (bool success, ) = to.call{ value: amount }(\"\");\n            require(success, \"ether transfer failed\");\n        } else {\n            IERC20(asset).safeTransfer(to, amount);\n        }\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\n     * consuming from one or the other at each step according to the instructions given by\n     * `proofFlags`.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"contracts/CampaignFactory.sol":{"content":"//// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./Campaign.sol\";\n\ncontract CampaignFactory {\n    Campaign private master;\n\n    event CampaignCreated(address creator, address newCampaign, bytes32 _strategyUri, address _admin, address _oracle, uint256 activationTime, bytes32 salt);\n\n    constructor(address payable _master) {\n        master = Campaign(_master);\n    }\n\n    function campaignAddress(bytes32 salt) public view returns (address) {\n        return Clones.predictDeterministicAddress(address(master), salt);\n    }\n\n    function createCampaign(\n        bytes32 _rewardRulesetUri,\n        address _admin,\n        address _oracle,\n        uint256 _activationTime,\n        uint256 _CHALLENGE_PERIOD,\n        uint256 _ACTIVATION_PERIOD,\n        uint256 _ACTIVE_DURATION,\n        bytes32 salt\n    ) external returns (address payable proxy) {\n        proxy = payable(Clones.cloneDeterministic(address(master), salt));\n        Campaign(proxy).initCampaign(_rewardRulesetUri, _admin, _oracle, _activationTime, _CHALLENGE_PERIOD, _ACTIVATION_PERIOD, _ACTIVE_DURATION);\n\n        emit CampaignCreated(msg.sender, proxy, _rewardRulesetUri, _admin, _oracle, _activationTime, salt);\n\n        return proxy;\n    }\n\n    function createAndPublishCampaign(\n        bytes32 _rewardRulesetUri,\n        bytes32 _sharesUri,\n        bytes32 _strategyUri,\n        address _admin,\n        address _oracle,\n        uint256 _activationTime,\n        uint256 _CHALLENGE_PERIOD,\n        uint256 _ACTIVATION_PERIOD,\n        uint256 _ACTIVE_DURATION,\n        bytes32 salt\n    ) external {\n        address payable proxy = this.createCampaign(\n            _strategyUri,\n            _admin,\n            _oracle,\n            _activationTime,\n            _CHALLENGE_PERIOD,\n            _ACTIVATION_PERIOD,\n            _ACTIVE_DURATION,\n            salt\n        );\n        Campaign(proxy).proposeShares(_rewardRulesetUri, _sharesUri);\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"contracts/test/TestErc20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\ncontract TestErc20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 _supply,\n        address holder,\n        uint8 decimals_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n\n        _mint(holder, _supply);\n    }\n\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/Multicall.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\npragma experimental ABIEncoderV2;\n\n/// @title Multicall - Aggregate results from multiple read-only function calls\n/// @author Michael Elliot <mike@makerdao.com>\n/// @author Joshua Levine <joshua@makerdao.com>\n/// @author Nick Johnson <arachnid@notdot.net>\n\ncontract Multicall {\n    struct Call {\n        address target;\n        bytes callData;\n    }\n\n    function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {\n        blockNumber = block.number;\n        returnData = new bytes[](calls.length);\n        for (uint256 i = 0; i < calls.length; i++) {\n            (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);\n            require(success);\n            returnData[i] = ret;\n        }\n    }\n\n    // Helper functions\n    function getEthBalance(address addr) public view returns (uint256 balance) {\n        balance = addr.balance;\n    }\n\n    function getBlockHash(uint256 blockNumber) public view returns (bytes32 blockHash) {\n        blockHash = blockhash(blockNumber);\n    }\n\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\n        blockHash = blockhash(block.number - 1);\n    }\n\n    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {\n        timestamp = block.timestamp;\n    }\n\n    function getCurrentBlockDifficulty() public view returns (uint256 difficulty) {\n        difficulty = block.difficulty;\n    }\n\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\n        gaslimit = block.gaslimit;\n    }\n\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\n        coinbase = block.coinbase;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[79]},"id":80,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"125:629:0","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":79,"linearizedBaseContracts":[79],"name":"Clones","nameLocation":"763:6:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":21,"nodeType":"Block","src":"1048:483:0","statements":[{"AST":{"nodeType":"YulBlock","src":"1110:348:0","statements":[{"nodeType":"YulVariableDeclaration","src":"1124:22:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1141:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1135:5:0"},"nodeType":"YulFunctionCall","src":"1135:11:0"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1128:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1166:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"1171:66:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:0"},"nodeType":"YulFunctionCall","src":"1159:79:0"},"nodeType":"YulExpressionStatement","src":"1159:79:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1262:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"1267:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1258:3:0"},"nodeType":"YulFunctionCall","src":"1258:14:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1278:4:0","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1284:14:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1274:3:0"},"nodeType":"YulFunctionCall","src":"1274:25:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:0"},"nodeType":"YulFunctionCall","src":"1251:49:0"},"nodeType":"YulExpressionStatement","src":"1251:49:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1324:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"1329:4:0","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1320:3:0"},"nodeType":"YulFunctionCall","src":"1320:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"1336:66:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1313:6:0"},"nodeType":"YulFunctionCall","src":"1313:90:0"},"nodeType":"YulExpressionStatement","src":"1313:90:0"},{"nodeType":"YulAssignment","src":"1416:32:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1435:1:0","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"1443:4:0","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1428:6:0"},"nodeType":"YulFunctionCall","src":"1428:20:0"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1416:8:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":5,"isOffset":false,"isSlot":false,"src":"1284:14:0","valueSize":1},{"declaration":8,"isOffset":false,"isSlot":false,"src":"1416:8:0","valueSize":1}],"id":10,"nodeType":"InlineAssembly","src":"1101:357:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1475:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":15,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1495:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":14,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1487:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","typeDescriptions":{}}},"id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1487:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1475:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1499:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":11,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1467:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1467:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":20,"nodeType":"ExpressionStatement","src":"1467:57:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"776:192:0","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":22,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"982:5:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"implementation","nameLocation":"996:14:0","nodeType":"VariableDeclaration","scope":22,"src":"988:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"987:24:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"instance","nameLocation":"1038:8:0","nodeType":"VariableDeclaration","scope":22,"src":"1030:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1029:18:0"},"scope":79,"src":"973:558:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2008:491:0","statements":[{"AST":{"nodeType":"YulBlock","src":"2070:355:0","statements":[{"nodeType":"YulVariableDeclaration","src":"2084:22:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2101:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2095:5:0"},"nodeType":"YulFunctionCall","src":"2095:11:0"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2088:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2126:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"2131:66:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2119:6:0"},"nodeType":"YulFunctionCall","src":"2119:79:0"},"nodeType":"YulExpressionStatement","src":"2119:79:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2222:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"2227:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:0"},"nodeType":"YulFunctionCall","src":"2218:14:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2238:4:0","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2244:14:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2234:3:0"},"nodeType":"YulFunctionCall","src":"2234:25:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2211:6:0"},"nodeType":"YulFunctionCall","src":"2211:49:0"},"nodeType":"YulExpressionStatement","src":"2211:49:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2284:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"2289:4:0","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2280:3:0"},"nodeType":"YulFunctionCall","src":"2280:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"2296:66:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:0"},"nodeType":"YulFunctionCall","src":"2273:90:0"},"nodeType":"YulExpressionStatement","src":"2273:90:0"},{"nodeType":"YulAssignment","src":"2376:39:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2396:1:0","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2399:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"2404:4:0","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2410:4:0"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2388:7:0"},"nodeType":"YulFunctionCall","src":"2388:27:0"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2376:8:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":25,"isOffset":false,"isSlot":false,"src":"2244:14:0","valueSize":1},{"declaration":30,"isOffset":false,"isSlot":false,"src":"2376:8:0","valueSize":1},{"declaration":27,"isOffset":false,"isSlot":false,"src":"2410:4:0","valueSize":1}],"id":32,"nodeType":"InlineAssembly","src":"2061:364:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":34,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2442:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2462:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":36,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2454:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","typeDescriptions":{}}},"id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2454:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2442:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2466:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":33,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2434:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2434:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"2434:58:0"}]},"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1537:364:0","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"1915:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"implementation","nameLocation":"1942:14:0","nodeType":"VariableDeclaration","scope":44,"src":"1934:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"salt","nameLocation":"1966:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1958:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1958:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1933:38:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"instance","nameLocation":"1998:8:0","nodeType":"VariableDeclaration","scope":44,"src":"1990:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1989:18:0"},"scope":79,"src":"1906:593:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"2774:582:0","statements":[{"AST":{"nodeType":"YulBlock","src":"2836:514:0","statements":[{"nodeType":"YulVariableDeclaration","src":"2850:22:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2861:5:0"},"nodeType":"YulFunctionCall","src":"2861:11:0"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2854:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2892:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"2897:66:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2885:6:0"},"nodeType":"YulFunctionCall","src":"2885:79:0"},"nodeType":"YulExpressionStatement","src":"2885:79:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2988:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"2993:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2984:3:0"},"nodeType":"YulFunctionCall","src":"2984:14:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3004:4:0","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"3010:14:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3000:3:0"},"nodeType":"YulFunctionCall","src":"3000:25:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2977:6:0"},"nodeType":"YulFunctionCall","src":"2977:49:0"},"nodeType":"YulExpressionStatement","src":"2977:49:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3050:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:4:0","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:0"},"nodeType":"YulFunctionCall","src":"3046:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"3062:66:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3039:6:0"},"nodeType":"YulFunctionCall","src":"3039:90:0"},"nodeType":"YulExpressionStatement","src":"3039:90:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3153:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"3158:4:0","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3149:3:0"},"nodeType":"YulFunctionCall","src":"3149:14:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:4:0","type":"","value":"0x60"},{"name":"deployer","nodeType":"YulIdentifier","src":"3175:8:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3165:3:0"},"nodeType":"YulFunctionCall","src":"3165:19:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3142:6:0"},"nodeType":"YulFunctionCall","src":"3142:43:0"},"nodeType":"YulExpressionStatement","src":"3142:43:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3209:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"3214:4:0","type":"","value":"0x4c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:0"},"nodeType":"YulFunctionCall","src":"3205:14:0"},{"name":"salt","nodeType":"YulIdentifier","src":"3221:4:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3198:6:0"},"nodeType":"YulFunctionCall","src":"3198:28:0"},"nodeType":"YulExpressionStatement","src":"3198:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3250:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"3255:4:0","type":"","value":"0x6c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3246:3:0"},"nodeType":"YulFunctionCall","src":"3246:14:0"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3272:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"3277:4:0","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3262:9:0"},"nodeType":"YulFunctionCall","src":"3262:20:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3239:6:0"},"nodeType":"YulFunctionCall","src":"3239:44:0"},"nodeType":"YulExpressionStatement","src":"3239:44:0"},{"nodeType":"YulAssignment","src":"3296:44:0","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3323:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:0","type":"","value":"0x37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3319:3:0"},"nodeType":"YulFunctionCall","src":"3319:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"3335:4:0","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3309:9:0"},"nodeType":"YulFunctionCall","src":"3309:31:0"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3296:9:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":51,"isOffset":false,"isSlot":false,"src":"3175:8:0","valueSize":1},{"declaration":47,"isOffset":false,"isSlot":false,"src":"3010:14:0","valueSize":1},{"declaration":54,"isOffset":false,"isSlot":false,"src":"3296:9:0","valueSize":1},{"declaration":49,"isOffset":false,"isSlot":false,"src":"3221:4:0","valueSize":1}],"id":56,"nodeType":"InlineAssembly","src":"2827:523:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2505:99:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":58,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"2618:27:0","nodeType":"FunctionDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"implementation","nameLocation":"2663:14:0","nodeType":"VariableDeclaration","scope":58,"src":"2655:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"salt","nameLocation":"2695:4:0","nodeType":"VariableDeclaration","scope":58,"src":"2687:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2687:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"deployer","nameLocation":"2717:8:0","nodeType":"VariableDeclaration","scope":58,"src":"2709:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2709:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2645:86:0"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"predicted","nameLocation":"2763:9:0","nodeType":"VariableDeclaration","scope":58,"src":"2755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"2755:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2754:19:0"},"scope":79,"src":"2609:747:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":77,"nodeType":"Block","src":"3611:88:0","statements":[{"expression":{"arguments":[{"id":69,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"3656:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":70,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3672:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":73,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3686:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$79","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$79","typeString":"library Clones"}],"id":72,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3678:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"3678:7:0","typeDescriptions":{}}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3678:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":68,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[58,78],"referencedDeclaration":58,"src":"3628:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3628:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":67,"id":76,"nodeType":"Return","src":"3621:71:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"3362:99:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":78,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3475:27:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"implementation","nameLocation":"3511:14:0","nodeType":"VariableDeclaration","scope":78,"src":"3503:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"salt","nameLocation":"3535:4:0","nodeType":"VariableDeclaration","scope":78,"src":"3527:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3527:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3502:38:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"predicted","nameLocation":"3596:9:0","nodeType":"VariableDeclaration","scope":78,"src":"3588:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"3588:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3587:19:0"},"scope":79,"src":"3466:233:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":80,"src":"755:2946:0","usedErrors":[]}],"src":"100:3602:0"},"id":0},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[985],"Initializable":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":81,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":82,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":231,"sourceUnit":986,"src":"138:33:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"173:2198:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":230,"linearizedBaseContracts":[230],"name":"Initializable","nameLocation":"2390:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2410:109:1","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":86,"mutability":"mutable","name":"_initialized","nameLocation":"2538:12:1","nodeType":"VariableDeclaration","scope":230,"src":"2524:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":85,"name":"uint8","nodeType":"ElementaryTypeName","src":"2524:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"2557:91:1","text":" @dev Indicates that the contract is in the process of being initialized."},"id":89,"mutability":"mutable","name":"_initializing","nameLocation":"2666:13:1","nodeType":"VariableDeclaration","scope":230,"src":"2653:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":88,"name":"bool","nodeType":"ElementaryTypeName","src":"2653:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2686:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":94,"name":"Initialized","nameLocation":"2787:11:1","nodeType":"EventDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2805:7:1","nodeType":"VariableDeclaration","scope":94,"src":"2799:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":91,"name":"uint8","nodeType":"ElementaryTypeName","src":"2799:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2798:15:1"},"src":"2781:33:1"},{"body":{"id":149,"nodeType":"Block","src":"3090:472:1","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3105:14:1","nodeType":"VariableDeclaration","scope":149,"src":"3100:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":97,"name":"bool","nodeType":"ElementaryTypeName","src":"3100:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":101,"initialValue":{"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3122:14:1","subExpression":{"id":99,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"3123:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3100:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":103,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3168:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":104,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"3186:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3201:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3186:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3168:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3167:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3208:34:1","subExpression":{"arguments":[{"arguments":[{"id":113,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$230","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$230","typeString":"contract Initializable"}],"id":112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:1","typeDescriptions":{}}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":109,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3209:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$985_$","typeString":"type(library Address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":708,"src":"3209:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3209:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":117,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"3246:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3262:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3246:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3208:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3207:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3167:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3278:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3146:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3146:190:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"3146:190:1"},{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"3346:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3346:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":129,"nodeType":"ExpressionStatement","src":"3346:16:1"},{"condition":{"id":130,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3376:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":136,"nodeType":"IfStatement","src":"3372:65:1","trueBody":{"id":135,"nodeType":"Block","src":"3392:45:1","statements":[{"expression":{"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":131,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"3406:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3422:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3406:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":134,"nodeType":"ExpressionStatement","src":"3406:20:1"}]}},{"id":137,"nodeType":"PlaceholderStatement","src":"3446:1:1"},{"condition":{"id":138,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3461:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"3457:99:1","trueBody":{"id":147,"nodeType":"Block","src":"3477:79:1","statements":[{"expression":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":139,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"3491:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3507:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3491:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":142,"nodeType":"ExpressionStatement","src":"3491:21:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3543:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":143,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3531:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"EmitStatement","src":"3526:19:1"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"2820:242:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":150,"name":"initializer","nameLocation":"3076:11:1","nodeType":"ModifierDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"3087:2:1"},"src":"3067:495:1","virtual":false,"visibility":"internal"},{"body":{"id":182,"nodeType":"Block","src":"4377:255:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4395:14:1","subExpression":{"id":156,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"4396:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"4413:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":159,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4428:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4413:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4395:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4437:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4387:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4387:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"4387:99:1"},{"expression":{"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":165,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"4496:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":166,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4511:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4496:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":168,"nodeType":"ExpressionStatement","src":"4496:22:1"},{"expression":{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":169,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"4528:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4544:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4528:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":172,"nodeType":"ExpressionStatement","src":"4528:20:1"},{"id":173,"nodeType":"PlaceholderStatement","src":"4558:1:1"},{"expression":{"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":174,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"4569:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4585:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4569:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":177,"nodeType":"ExpressionStatement","src":"4569:21:1"},{"eventCall":{"arguments":[{"id":179,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4617:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":178,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4605:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4605:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"EmitStatement","src":"4600:25:1"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"3568:766:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":183,"name":"reinitializer","nameLocation":"4348:13:1","nodeType":"ModifierDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"version","nameLocation":"4368:7:1","nodeType":"VariableDeclaration","scope":183,"src":"4362:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":152,"name":"uint8","nodeType":"ElementaryTypeName","src":"4362:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4361:15:1"},"src":"4339:293:1","virtual":false,"visibility":"internal"},{"body":{"id":192,"nodeType":"Block","src":"4870:97:1","statements":[{"expression":{"arguments":[{"id":187,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"4888:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4903:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4880:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4880:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":190,"nodeType":"ExpressionStatement","src":"4880:69:1"},{"id":191,"nodeType":"PlaceholderStatement","src":"4959:1:1"}]},"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"4638:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":193,"name":"onlyInitializing","nameLocation":"4851:16:1","nodeType":"ModifierDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"4867:2:1"},"src":"4842:125:1","virtual":false,"visibility":"internal"},{"body":{"id":228,"nodeType":"Block","src":"5415:230:1","statements":[{"expression":{"arguments":[{"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5433:14:1","subExpression":{"id":198,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"5434:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5449:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5425:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5425:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"5425:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":203,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"5505:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5525:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":205,"name":"uint8","nodeType":"ElementaryTypeName","src":"5525:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":204,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5520:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5520:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5505:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"5501:138:1","trueBody":{"id":226,"nodeType":"Block","src":"5537:102:1","statements":[{"expression":{"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":210,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"5551:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5571:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":212,"name":"uint8","nodeType":"ElementaryTypeName","src":"5571:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":211,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5566:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5566:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5566:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5551:30:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":217,"nodeType":"ExpressionStatement","src":"5551:30:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":220,"name":"uint8","nodeType":"ElementaryTypeName","src":"5617:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":219,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5612:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5612:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":218,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"5600:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5600:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"EmitStatement","src":"5595:33:1"}]}}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"4973:388:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":229,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5375:20:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"5395:2:1"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5415:0:1"},"scope":230,"src":"5366:279:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":231,"src":"2372:3275:1","usedErrors":[]}],"src":"113:5535:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[270]},"id":271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"122:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":270,"linearizedBaseContracts":[270],"name":"ReentrancyGuard","nameLocation":"891:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":236,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:2","nodeType":"VariableDeclaration","scope":270,"src":"1661:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":239,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:2","nodeType":"VariableDeclaration","scope":270,"src":"1708:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":241,"mutability":"mutable","name":"_status","nameLocation":"1768:7:2","nodeType":"VariableDeclaration","scope":270,"src":"1752:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":248,"nodeType":"Block","src":"1796:39:2","statements":[{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":244,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"1806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":245,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1816:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":247,"nodeType":"ExpressionStatement","src":"1806:22:2"}]},"id":249,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1793:2:2"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[],"src":"1796:0:2"},"scope":270,"src":"1782:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":268,"nodeType":"Block","src":"2236:421:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":253,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"2325:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":254,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"2336:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"2317:63:2"},{"expression":{"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":259,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"2455:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":260,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"2465:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":262,"nodeType":"ExpressionStatement","src":"2455:18:2"},{"id":263,"nodeType":"PlaceholderStatement","src":"2484:1:2"},{"expression":{"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":264,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"2628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":265,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2638:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":267,"nodeType":"ExpressionStatement","src":"2628:22:2"}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"1841:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":269,"name":"nonReentrant","nameLocation":"2221:12:2","nodeType":"ModifierDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"2233:2:2"},"src":"2212:445:2","virtual":false,"visibility":"internal"}],"scope":271,"src":"873:1786:2","usedErrors":[]}],"src":"97:2563:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[348]},"id":349,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":272,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":348,"linearizedBaseContracts":[348],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":282,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":282,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":282,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":282,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":291,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":291,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":291,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":291,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":348,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":305,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":305,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":348,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":315,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":315,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":315,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":312,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":348,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":325,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":325,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":325,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":348,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":335,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":335,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":335,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":335,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":332,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":348,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":347,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":347,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":347,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":347,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":347,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":344,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":348,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":349,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[348],"IERC20Metadata":[373]},"id":374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":350,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":374,"sourceUnit":349,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":353,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"305:6:4"},"id":354,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":373,"linearizedBaseContracts":[373,348],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":360,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":357,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":373,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":363,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":373,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":372,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":369,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":373,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":374,"src":"277:405:4","usedErrors":[]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[409]},"id":410,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":375,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"139:480:5","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":409,"linearizedBaseContracts":[409],"name":"IERC20Permit","nameLocation":"630:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"649:792:5","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":394,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:5","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"owner","nameLocation":"1479:5:5","nodeType":"VariableDeclaration","scope":394,"src":"1471:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"spender","nameLocation":"1502:7:5","nodeType":"VariableDeclaration","scope":394,"src":"1494:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"value","nameLocation":"1527:5:5","nodeType":"VariableDeclaration","scope":394,"src":"1519:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:5","nodeType":"VariableDeclaration","scope":394,"src":"1542:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"v","nameLocation":"1574:1:5","nodeType":"VariableDeclaration","scope":394,"src":"1568:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":386,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"r","nameLocation":"1593:1:5","nodeType":"VariableDeclaration","scope":394,"src":"1585:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"s","nameLocation":"1612:1:5","nodeType":"VariableDeclaration","scope":394,"src":"1604:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:5"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"1628:0:5"},"scope":409,"src":"1446:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"1635:294:5","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":402,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:5","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"owner","nameLocation":"1958:5:5","nodeType":"VariableDeclaration","scope":402,"src":"1950:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:5"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"1988:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:5"},"scope":409,"src":"1934:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"2003:128:5","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:5","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"2214:2:5"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"2240:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:5"},"scope":409,"src":"2189:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":410,"src":"620:1631:5","usedErrors":[]}],"src":"114:2138:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[985],"IERC20":[348],"IERC20Permit":[409],"SafeERC20":[690]},"id":691,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":411,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":691,"sourceUnit":349,"src":"140:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":691,"sourceUnit":410,"src":"164:46:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":691,"sourceUnit":986,"src":"211:36:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"249:457:6","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":690,"linearizedBaseContracts":[690],"name":"SafeERC20","nameLocation":"715:9:6","nodeType":"ContractDefinition","nodes":[{"id":418,"libraryName":{"id":416,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":985,"src":"737:7:6"},"nodeType":"UsingForDirective","src":"731:26:6","typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":440,"nodeType":"Block","src":"865:103:6","statements":[{"expression":{"arguments":[{"id":429,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"895:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"925:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":315,"src":"925:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"950:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"954:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":430,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":428,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"875:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$348_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"ExpressionStatement","src":"875:86:6"}]},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:6","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"token","nameLocation":"801:5:6","nodeType":"VariableDeclaration","scope":441,"src":"794:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},"typeName":{"id":420,"nodeType":"UserDefinedTypeName","pathNode":{"id":419,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"794:6:6"},"referencedDeclaration":348,"src":"794:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"to","nameLocation":"824:2:6","nodeType":"VariableDeclaration","scope":441,"src":"816:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"value","nameLocation":"844:5:6","nodeType":"VariableDeclaration","scope":441,"src":"836:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:6"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"865:0:6"},"scope":690,"src":"763:205:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":466,"nodeType":"Block","src":"1102:113:6","statements":[{"expression":{"arguments":[{"id":454,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"1132:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":457,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"1162:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":347,"src":"1162:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1191:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1197:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1201:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":455,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":453,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"1112:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$348_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"1112:96:6"}]},"id":467,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:6","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"token","nameLocation":"1016:5:6","nodeType":"VariableDeclaration","scope":467,"src":"1009:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},"typeName":{"id":443,"nodeType":"UserDefinedTypeName","pathNode":{"id":442,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"1009:6:6"},"referencedDeclaration":348,"src":"1009:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"from","nameLocation":"1039:4:6","nodeType":"VariableDeclaration","scope":467,"src":"1031:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"to","nameLocation":"1061:2:6","nodeType":"VariableDeclaration","scope":467,"src":"1053:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"value","nameLocation":"1081:5:6","nodeType":"VariableDeclaration","scope":467,"src":"1073:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:6"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"1102:0:6"},"scope":690,"src":"974:241:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":510,"nodeType":"Block","src":"1581:497:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"1830:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":487,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$690","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$690","typeString":"library SafeERC20"}],"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:6","typeDescriptions":{}}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":489,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"1877:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":483,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"1846:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":325,"src":"1846:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"1808:163:6"},{"expression":{"arguments":[{"id":499,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"2001:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"2031:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":335,"src":"2031:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":505,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2055:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2064:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":500,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":498,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"1981:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$348_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":509,"nodeType":"ExpressionStatement","src":"1981:90:6"}]},"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"1221:249:6","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":511,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:6","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"token","nameLocation":"1512:5:6","nodeType":"VariableDeclaration","scope":511,"src":"1505:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},"typeName":{"id":470,"nodeType":"UserDefinedTypeName","pathNode":{"id":469,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"1505:6:6"},"referencedDeclaration":348,"src":"1505:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"spender","nameLocation":"1535:7:6","nodeType":"VariableDeclaration","scope":511,"src":"1527:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"value","nameLocation":"1560:5:6","nodeType":"VariableDeclaration","scope":511,"src":"1552:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:6"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"1581:0:6"},"scope":690,"src":"1475:603:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"2200:194:6","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:6","nodeType":"VariableDeclaration","scope":546,"src":"2210:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":533,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":527,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$690","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$690","typeString":"library SafeERC20"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:6","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2264:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":523,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2233:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":325,"src":"2233:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2275:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:6"},{"expression":{"arguments":[{"id":535,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2310:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":538,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2340:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":335,"src":"2340:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":541,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2364:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":542,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"2373:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":536,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"2290:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$348_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":545,"nodeType":"ExpressionStatement","src":"2290:97:6"}]},"id":547,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:6","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"token","nameLocation":"2131:5:6","nodeType":"VariableDeclaration","scope":547,"src":"2124:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},"typeName":{"id":513,"nodeType":"UserDefinedTypeName","pathNode":{"id":512,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2124:6:6"},"referencedDeclaration":348,"src":"2124:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"spender","nameLocation":"2154:7:6","nodeType":"VariableDeclaration","scope":547,"src":"2146:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"value","nameLocation":"2179:5:6","nodeType":"VariableDeclaration","scope":547,"src":"2171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:6"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"2200:0:6"},"scope":690,"src":"2084:310:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"2516:370:6","statements":[{"id":593,"nodeType":"UncheckedBlock","src":"2526:354:6","statements":[{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:6","nodeType":"VariableDeclaration","scope":593,"src":"2550:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":567,"initialValue":{"arguments":[{"arguments":[{"id":563,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$690","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$690","typeString":"library SafeERC20"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:6","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2604:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":559,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2573:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":325,"src":"2573:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2634:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"2650:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"ExpressionStatement","src":"2626:75:6"},{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:6","nodeType":"VariableDeclaration","scope":593,"src":"2715:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":577,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2738:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"2753:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:6"},{"expression":{"arguments":[{"id":582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2792:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":585,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2822:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":335,"src":"2822:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":588,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2846:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2855:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":583,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":581,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"2772:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$348_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"ExpressionStatement","src":"2772:97:6"}]}]},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:6","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"token","nameLocation":"2447:5:6","nodeType":"VariableDeclaration","scope":595,"src":"2440:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},"typeName":{"id":549,"nodeType":"UserDefinedTypeName","pathNode":{"id":548,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2440:6:6"},"referencedDeclaration":348,"src":"2440:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"spender","nameLocation":"2470:7:6","nodeType":"VariableDeclaration","scope":595,"src":"2462:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"value","nameLocation":"2495:5:6","nodeType":"VariableDeclaration","scope":595,"src":"2487:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:6"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"2516:0:6"},"scope":690,"src":"2400:486:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":650,"nodeType":"Block","src":"3107:257:6","statements":[{"assignments":[616],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:6","nodeType":"VariableDeclaration","scope":650,"src":"3117:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":621,"initialValue":{"arguments":[{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3152:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":617,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3139:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$409","typeString":"contract IERC20Permit"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":402,"src":"3139:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:6"},{"expression":{"arguments":[{"id":625,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3181:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"3188:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3197:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":628,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3204:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":629,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"3214:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":630,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"3217:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":631,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3220:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":622,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3168:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$409","typeString":"contract IERC20Permit"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":394,"src":"3168:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"ExpressionStatement","src":"3168:54:6"},{"assignments":[635],"declarations":[{"constant":false,"id":635,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:6","nodeType":"VariableDeclaration","scope":650,"src":"3232:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":640,"initialValue":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3266:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":636,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3253:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$409","typeString":"contract IERC20Permit"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":402,"src":"3253:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"3290:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":643,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3304:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"3282:75:6"}]},"id":651,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:6","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"token","nameLocation":"2934:5:6","nodeType":"VariableDeclaration","scope":651,"src":"2921:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$409","typeString":"contract IERC20Permit"},"typeName":{"id":597,"nodeType":"UserDefinedTypeName","pathNode":{"id":596,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":409,"src":"2921:12:6"},"referencedDeclaration":409,"src":"2921:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$409","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"owner","nameLocation":"2957:5:6","nodeType":"VariableDeclaration","scope":651,"src":"2949:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"spender","nameLocation":"2980:7:6","nodeType":"VariableDeclaration","scope":651,"src":"2972:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"3005:5:6","nodeType":"VariableDeclaration","scope":651,"src":"2997:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:6","nodeType":"VariableDeclaration","scope":651,"src":"3020:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"v","nameLocation":"3052:1:6","nodeType":"VariableDeclaration","scope":651,"src":"3046:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":607,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"r","nameLocation":"3071:1:6","nodeType":"VariableDeclaration","scope":651,"src":"3063:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"s","nameLocation":"3090:1:6","nodeType":"VariableDeclaration","scope":651,"src":"3082:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:6"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"3107:0:6"},"scope":690,"src":"2892:472:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"3817:636:6","statements":[{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:6","nodeType":"VariableDeclaration","scope":688,"src":"4166:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":670,"initialValue":{"arguments":[{"id":667,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"4220:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":664,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4200:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:6","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":779,"src":"4192:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":671,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"4275:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":687,"nodeType":"IfStatement","src":"4271:176:6","trueBody":{"id":686,"nodeType":"Block","src":"4298:149:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":678,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"4370:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":679,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:6","typeDescriptions":{}}}],"id":681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":676,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"ExpressionStatement","src":"4351:85:6"}]}}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"3370:372:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":689,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:6","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"token","nameLocation":"3783:5:6","nodeType":"VariableDeclaration","scope":689,"src":"3776:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"},"typeName":{"id":654,"nodeType":"UserDefinedTypeName","pathNode":{"id":653,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"3776:6:6"},"referencedDeclaration":348,"src":"3776:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"data","nameLocation":"3803:4:6","nodeType":"VariableDeclaration","scope":689,"src":"3790:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":656,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:6"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"3817:0:6"},"scope":690,"src":"3747:706:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":691,"src":"707:3748:6","usedErrors":[]}],"src":"115:4341:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[985]},"id":986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":692,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"126:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":985,"linearizedBaseContracts":[985],"name":"Address","nameLocation":"202:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":707,"nodeType":"Block","src":"1241:254:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":701,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1465:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":700,"id":706,"nodeType":"Return","src":"1458:30:7"}]},"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"216:954:7","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":708,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:7","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"account","nameLocation":"1203:7:7","nodeType":"VariableDeclaration","scope":708,"src":"1195:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:7"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"1235:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:7"},"scope":985,"src":"1175:320:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":741,"nodeType":"Block","src":"2483:241:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":719,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$985","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$985","typeString":"library Address"}],"id":718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:7","typeDescriptions":{}}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":722,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"2526:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"2493:73:7"},{"assignments":[728,null],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"success","nameLocation":"2583:7:7","nodeType":"VariableDeclaration","scope":741,"src":"2578:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":727,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":735,"initialValue":{"arguments":[{"hexValue":"","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":729,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"2596:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":731,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"2618:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:7"},{"expression":{"arguments":[{"id":737,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2647:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":736,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"2639:78:7"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1501:906:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:7","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:7","nodeType":"VariableDeclaration","scope":742,"src":"2431:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"amount","nameLocation":"2466:6:7","nodeType":"VariableDeclaration","scope":742,"src":"2458:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:7"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"2483:0:7"},"scope":985,"src":"2412:312:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":758,"nodeType":"Block","src":"3555:84:7","statements":[{"expression":{"arguments":[{"id":753,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3585:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"3593:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":752,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[759,779],"referencedDeclaration":779,"src":"3572:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":751,"id":757,"nodeType":"Return","src":"3565:67:7"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"2730:731:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:7","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"target","nameLocation":"3496:6:7","nodeType":"VariableDeclaration","scope":759,"src":"3488:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"data","nameLocation":"3517:4:7","nodeType":"VariableDeclaration","scope":759,"src":"3504:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":746,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:7"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"3541:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:7"},"scope":985,"src":"3466:173:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"4008:76:7","statements":[{"expression":{"arguments":[{"id":772,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4047:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4055:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":775,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4064:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":771,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,849],"referencedDeclaration":849,"src":"4025:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":770,"id":777,"nodeType":"Return","src":"4018:59:7"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"3645:211:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:7","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"target","nameLocation":"3900:6:7","nodeType":"VariableDeclaration","scope":779,"src":"3892:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"data","nameLocation":"3929:4:7","nodeType":"VariableDeclaration","scope":779,"src":"3916:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:7","nodeType":"VariableDeclaration","scope":779,"src":"3943:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":765,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:7"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"3994:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":768,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:7"},"scope":985,"src":"3861:223:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":798,"nodeType":"Block","src":"4589:111:7","statements":[{"expression":{"arguments":[{"id":792,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"4628:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4636:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4642:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":791,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,849],"referencedDeclaration":849,"src":"4606:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":790,"id":797,"nodeType":"Return","src":"4599:94:7"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"4090:351:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":799,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:7","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"target","nameLocation":"4494:6:7","nodeType":"VariableDeclaration","scope":799,"src":"4486:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"data","nameLocation":"4523:4:7","nodeType":"VariableDeclaration","scope":799,"src":"4510:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"value","nameLocation":"4545:5:7","nodeType":"VariableDeclaration","scope":799,"src":"4537:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:7"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"4575:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:7"},"scope":985,"src":"4446:254:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"5127:320:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":816,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$985","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$985","typeString":"library Address"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:7","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"5137:81:7"},{"expression":{"arguments":[{"arguments":[{"id":826,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5247:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":825,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5236:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"5228:60:7"},{"assignments":[832,834],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"success","nameLocation":"5305:7:7","nodeType":"VariableDeclaration","scope":848,"src":"5300:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":831,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:7","nodeType":"VariableDeclaration","scope":848,"src":"5314:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":833,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":841,"initialValue":{"arguments":[{"id":839,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5367:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":835,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5341:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5360:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:7"},{"expression":{"arguments":[{"id":843,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5406:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":844,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5415:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":845,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"5427:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":842,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5389:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":812,"id":847,"nodeType":"Return","src":"5382:58:7"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"4706:237:7","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:7","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"target","nameLocation":"4996:6:7","nodeType":"VariableDeclaration","scope":849,"src":"4988:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"data","nameLocation":"5025:4:7","nodeType":"VariableDeclaration","scope":849,"src":"5012:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":803,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"value","nameLocation":"5047:5:7","nodeType":"VariableDeclaration","scope":849,"src":"5039:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:7","nodeType":"VariableDeclaration","scope":849,"src":"5062:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":807,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:7"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"5113:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:7"},"scope":985,"src":"4948:499:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":865,"nodeType":"Block","src":"5724:97:7","statements":[{"expression":{"arguments":[{"id":860,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"5760:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5768:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":859,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[866,901],"referencedDeclaration":901,"src":"5741:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":858,"id":864,"nodeType":"Return","src":"5734:80:7"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"5453:166:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:7","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"target","nameLocation":"5660:6:7","nodeType":"VariableDeclaration","scope":866,"src":"5652:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"data","nameLocation":"5681:4:7","nodeType":"VariableDeclaration","scope":866,"src":"5668:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:7"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"5710:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":856,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:7"},"scope":985,"src":"5624:197:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":900,"nodeType":"Block","src":"6163:228:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":880,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"6192:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":879,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"6181:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"6173:67:7"},{"assignments":[886,888],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"success","nameLocation":"6257:7:7","nodeType":"VariableDeclaration","scope":900,"src":"6252:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":885,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:7","nodeType":"VariableDeclaration","scope":900,"src":"6266:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":887,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":893,"initialValue":{"arguments":[{"id":891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6311:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"6293:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:7"},{"expression":{"arguments":[{"id":895,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6350:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":896,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6359:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":897,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6371:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":894,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6333:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":877,"id":899,"nodeType":"Return","src":"6326:58:7"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"5827:173:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:7","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"target","nameLocation":"6050:6:7","nodeType":"VariableDeclaration","scope":901,"src":"6042:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"data","nameLocation":"6079:4:7","nodeType":"VariableDeclaration","scope":901,"src":"6066:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:7","nodeType":"VariableDeclaration","scope":901,"src":"6093:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":872,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:7"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"6149:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:7"},"scope":985,"src":"6005:386:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":917,"nodeType":"Block","src":"6667:101:7","statements":[{"expression":{"arguments":[{"id":912,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"6705:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6713:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":911,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[918,953],"referencedDeclaration":953,"src":"6684:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":910,"id":916,"nodeType":"Return","src":"6677:84:7"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"6397:168:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":918,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:7","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"target","nameLocation":"6608:6:7","nodeType":"VariableDeclaration","scope":918,"src":"6600:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"data","nameLocation":"6629:4:7","nodeType":"VariableDeclaration","scope":918,"src":"6616:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":905,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:7"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":918,"src":"6653:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:7"},"scope":985,"src":"6570:198:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"7109:232:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":932,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"7138:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":931,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7127:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"ExpressionStatement","src":"7119:69:7"},{"assignments":[938,940],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"success","nameLocation":"7205:7:7","nodeType":"VariableDeclaration","scope":952,"src":"7200:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":937,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:7","nodeType":"VariableDeclaration","scope":952,"src":"7214:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":939,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":945,"initialValue":{"arguments":[{"id":943,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"7261:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":941,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"7241:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:7"},{"expression":{"arguments":[{"id":947,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"7300:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":948,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"7309:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":949,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"7321:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":946,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7283:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":929,"id":951,"nodeType":"Return","src":"7276:58:7"}]},"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"6774:175:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:7","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"target","nameLocation":"7001:6:7","nodeType":"VariableDeclaration","scope":953,"src":"6993:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"data","nameLocation":"7030:4:7","nodeType":"VariableDeclaration","scope":953,"src":"7017:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":922,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:7","nodeType":"VariableDeclaration","scope":953,"src":"7044:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:7"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"7095:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":927,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:7"},"scope":985,"src":"6954:387:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":983,"nodeType":"Block","src":"7721:582:7","statements":[{"condition":{"id":965,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7735:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":981,"nodeType":"Block","src":"7792:505:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":969,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"7876:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":979,"nodeType":"Block","src":"8234:53:7","statements":[{"expression":{"arguments":[{"id":976,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"8259:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":975,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"8252:20:7"}]},"id":980,"nodeType":"IfStatement","src":"7872:415:7","trueBody":{"id":974,"nodeType":"Block","src":"7899:329:7","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:7","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:7"},"nodeType":"YulFunctionCall","src":"8114:17:7"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:7","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:7"},"nodeType":"YulFunctionCall","src":"8159:19:7"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:7"},"nodeType":"YulFunctionCall","src":"8152:44:7"},"nodeType":"YulExpressionStatement","src":"8152:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":958,"isOffset":false,"isSlot":false,"src":"8120:10:7","valueSize":1},{"declaration":958,"isOffset":false,"isSlot":false,"src":"8167:10:7","valueSize":1}],"id":973,"nodeType":"InlineAssembly","src":"8060:154:7"}]}}]},"id":982,"nodeType":"IfStatement","src":"7731:566:7","trueBody":{"id":968,"nodeType":"Block","src":"7744:42:7","statements":[{"expression":{"id":966,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"7765:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":964,"id":967,"nodeType":"Return","src":"7758:17:7"}]}}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"7347:209:7","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:7","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"success","nameLocation":"7601:7:7","nodeType":"VariableDeclaration","scope":984,"src":"7596:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":955,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:7","nodeType":"VariableDeclaration","scope":984,"src":"7618:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":957,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:7","nodeType":"VariableDeclaration","scope":984,"src":"7651:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":959,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:7"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"7707:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":962,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:7"},"scope":985,"src":"7561:742:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":986,"src":"194:8111:7","usedErrors":[]}],"src":"101:8205:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1007]},"id":1008,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":987,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1007,"linearizedBaseContracts":[1007],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":996,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":993,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":992,"id":995,"nodeType":"Return","src":"712:17:8"}]},"id":997,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":997,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":1007,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":1002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1001,"id":1004,"nodeType":"Return","src":"819:15:8"}]},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":999,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":1007,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1008,"src":"608:235:8","usedErrors":[]}],"src":"86:758:8"},"id":8},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1509]},"id":1510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1009,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"143:655:9","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."},"fullyImplemented":true,"id":1509,"linearizedBaseContracts":[1509],"name":"MerkleProof","nameLocation":"807:11:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1030,"nodeType":"Block","src":"1280:57:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1024,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1310:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1025,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1317:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1023,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"1297:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1297:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1027,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"1326:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1297:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1022,"id":1029,"nodeType":"Return","src":"1290:40:9"}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"825:323:9","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1162:6:9","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"proof","nameLocation":"1195:5:9","nodeType":"VariableDeclaration","scope":1031,"src":"1178:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1178:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1013,"nodeType":"ArrayTypeName","src":"1178:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"root","nameLocation":"1218:4:9","nodeType":"VariableDeclaration","scope":1031,"src":"1210:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"leaf","nameLocation":"1240:4:9","nodeType":"VariableDeclaration","scope":1031,"src":"1232:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1232:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1168:82:9"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"1274:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1020,"name":"bool","nodeType":"ElementaryTypeName","src":"1274:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1273:6:9"},"scope":1509,"src":"1153:184:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"1575:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1045,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"1613:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1046,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1620:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1044,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"1592:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1592:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1048,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1629:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1592:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1043,"id":1050,"nodeType":"Return","src":"1585:48:9"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"1343:90:9","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1447:14:9","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"proof","nameLocation":"1490:5:9","nodeType":"VariableDeclaration","scope":1052,"src":"1471:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1471:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1034,"nodeType":"ArrayTypeName","src":"1471:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"root","nameLocation":"1513:4:9","nodeType":"VariableDeclaration","scope":1052,"src":"1505:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1505:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"leaf","nameLocation":"1535:4:9","nodeType":"VariableDeclaration","scope":1052,"src":"1527:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1527:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:84:9"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"1569:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1041,"name":"bool","nodeType":"ElementaryTypeName","src":"1569:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1568:6:9"},"scope":1509,"src":"1438:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1091,"nodeType":"Block","src":"2083:198:9","statements":[{"assignments":[1064],"declarations":[{"constant":false,"id":1064,"mutability":"mutable","name":"computedHash","nameLocation":"2101:12:9","nodeType":"VariableDeclaration","scope":1091,"src":"2093:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2093:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1066,"initialValue":{"id":1065,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2116:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2093:27:9"},{"body":{"id":1087,"nodeType":"Block","src":"2173:73:9","statements":[{"expression":{"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1078,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"2187:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1080,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"2212:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1081,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2226:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1083,"indexExpression":{"id":1082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2232:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2226:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1079,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2202:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2202:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2187:48:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1086,"nodeType":"ExpressionStatement","src":"2187:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2150:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1072,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2154:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2154:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2150:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1088,"initializationExpression":{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"i","nameLocation":"2143:1:9","nodeType":"VariableDeclaration","scope":1088,"src":"2135:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1070,"initialValue":{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2135:13:9"},"loopExpression":{"expression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2168:3:9","subExpression":{"id":1075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2168:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1077,"nodeType":"ExpressionStatement","src":"2168:3:9"},"nodeType":"ForStatement","src":"2130:116:9"},{"expression":{"id":1089,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"2262:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1062,"id":1090,"nodeType":"Return","src":"2255:19:9"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"1646:340:9","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2000:12:9","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"proof","nameLocation":"2030:5:9","nodeType":"VariableDeclaration","scope":1092,"src":"2013:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1055,"nodeType":"ArrayTypeName","src":"2013:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"leaf","nameLocation":"2045:4:9","nodeType":"VariableDeclaration","scope":1092,"src":"2037:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2037:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2012:38:9"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1092,"src":"2074:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2073:9:9"},"scope":1509,"src":"1991:290:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"2490:198:9","statements":[{"assignments":[1104],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"computedHash","nameLocation":"2508:12:9","nodeType":"VariableDeclaration","scope":1131,"src":"2500:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2500:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1106,"initialValue":{"id":1105,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2523:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2500:27:9"},{"body":{"id":1127,"nodeType":"Block","src":"2580:73:9","statements":[{"expression":{"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1118,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2594:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1120,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2619:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1121,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2633:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1123,"indexExpression":{"id":1122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2639:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2633:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1119,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2609:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2609:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2594:48:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1126,"nodeType":"ExpressionStatement","src":"2594:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2557:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1112,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2561:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2561:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2557:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1128,"initializationExpression":{"assignments":[1108],"declarations":[{"constant":false,"id":1108,"mutability":"mutable","name":"i","nameLocation":"2550:1:9","nodeType":"VariableDeclaration","scope":1128,"src":"2542:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1110,"initialValue":{"hexValue":"30","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2554:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2542:13:9"},"loopExpression":{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2575:3:9","subExpression":{"id":1115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2575:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1117,"nodeType":"ExpressionStatement","src":"2575:3:9"},"nodeType":"ForStatement","src":"2537:116:9"},{"expression":{"id":1129,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2669:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1102,"id":1130,"nodeType":"Return","src":"2662:19:9"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"2287:96:9","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2397:20:9","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"proof","nameLocation":"2437:5:9","nodeType":"VariableDeclaration","scope":1132,"src":"2418:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2418:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1095,"nodeType":"ArrayTypeName","src":"2418:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"leaf","nameLocation":"2452:4:9","nodeType":"VariableDeclaration","scope":1132,"src":"2444:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2444:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2417:40:9"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"2481:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:9:9"},"scope":1509,"src":"2388:300:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1157,"nodeType":"Block","src":"3116:76:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1150,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"3151:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1151,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3158:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1152,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3170:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1149,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"3133:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3133:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1154,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3181:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3133:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1148,"id":1156,"nodeType":"Return","src":"3126:59:9"}]},"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"2694:235:9","text":" @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n _Available since v4.7._"},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2943:16:9","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"proof","nameLocation":"2986:5:9","nodeType":"VariableDeclaration","scope":1158,"src":"2969:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2969:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1135,"nodeType":"ArrayTypeName","src":"2969:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"proofFlags","nameLocation":"3015:10:9","nodeType":"VariableDeclaration","scope":1158,"src":"3001:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1137,"name":"bool","nodeType":"ElementaryTypeName","src":"3001:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"nodeType":"ArrayTypeName","src":"3001:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"root","nameLocation":"3043:4:9","nodeType":"VariableDeclaration","scope":1158,"src":"3035:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3035:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"leaves","nameLocation":"3074:6:9","nodeType":"VariableDeclaration","scope":1158,"src":"3057:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3057:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1143,"nodeType":"ArrayTypeName","src":"3057:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2959:127:9"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"3110:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"3110:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3109:6:9"},"scope":1509,"src":"2934:258:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"3497:84:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1176,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3540:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1177,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3547:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1178,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3559:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1175,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3514:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3514:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1180,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3570:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3514:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1174,"id":1182,"nodeType":"Return","src":"3507:67:9"}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"3198:100:9","text":" @dev Calldata version of {multiProofVerify}\n _Available since v4.7._"},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3312:24:9","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"proof","nameLocation":"3365:5:9","nodeType":"VariableDeclaration","scope":1184,"src":"3346:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1161,"nodeType":"ArrayTypeName","src":"3346:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"proofFlags","nameLocation":"3396:10:9","nodeType":"VariableDeclaration","scope":1184,"src":"3380:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1163,"name":"bool","nodeType":"ElementaryTypeName","src":"3380:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"ArrayTypeName","src":"3380:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"root","nameLocation":"3424:4:9","nodeType":"VariableDeclaration","scope":1184,"src":"3416:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3416:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"leaves","nameLocation":"3455:6:9","nodeType":"VariableDeclaration","scope":1184,"src":"3438:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3438:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1169,"nodeType":"ArrayTypeName","src":"3438:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3336:131:9"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1184,"src":"3491:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"3491:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3490:6:9"},"scope":1509,"src":"3303:278:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1328,"nodeType":"Block","src":"4029:1860:9","statements":[{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"leavesLen","nameLocation":"4420:9:9","nodeType":"VariableDeclaration","scope":1328,"src":"4412:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"expression":{"id":1201,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4432:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4432:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4412:33:9"},{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"totalHashes","nameLocation":"4463:11:9","nodeType":"VariableDeclaration","scope":1328,"src":"4455:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4455:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1208,"initialValue":{"expression":{"id":1206,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4477:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4477:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4455:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4546:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1211,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4558:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4558:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4546:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4573:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4546:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1216,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"4578:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4546:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4591:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4538:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4538:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1220,"nodeType":"ExpressionStatement","src":"4538:87:9"},{"assignments":[1225],"declarations":[{"constant":false,"id":1225,"mutability":"mutable","name":"hashes","nameLocation":"4887:6:9","nodeType":"VariableDeclaration","scope":1328,"src":"4870:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4870:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1224,"nodeType":"ArrayTypeName","src":"4870:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1231,"initialValue":{"arguments":[{"id":1229,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"4910:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4896:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4900:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1227,"nodeType":"ArrayTypeName","src":"4900:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4896:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4870:52:9"},{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"leafPos","nameLocation":"4940:7:9","nodeType":"VariableDeclaration","scope":1328,"src":"4932:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4932:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1235,"initialValue":{"hexValue":"30","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4932:19:9"},{"assignments":[1237],"declarations":[{"constant":false,"id":1237,"mutability":"mutable","name":"hashPos","nameLocation":"4969:7:9","nodeType":"VariableDeclaration","scope":1328,"src":"4961:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1239,"initialValue":{"hexValue":"30","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4979:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4961:19:9"},{"assignments":[1241],"declarations":[{"constant":false,"id":1241,"mutability":"mutable","name":"proofPos","nameLocation":"4998:8:9","nodeType":"VariableDeclaration","scope":1328,"src":"4990:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1243,"initialValue":{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5009:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4990:20:9"},{"body":{"id":1301,"nodeType":"Block","src":"5427:258:9","statements":[{"assignments":[1255],"declarations":[{"constant":false,"id":1255,"mutability":"mutable","name":"a","nameLocation":"5449:1:9","nodeType":"VariableDeclaration","scope":1301,"src":"5441:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5441:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1268,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5453:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1257,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5463:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1263,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5495:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1266,"indexExpression":{"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5502:9:9","subExpression":{"id":1264,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5502:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5495:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5453:59:9","trueExpression":{"baseExpression":{"id":1259,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5475:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1262,"indexExpression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5482:9:9","subExpression":{"id":1260,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5482:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5441:71:9"},{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"b","nameLocation":"5534:1:9","nodeType":"VariableDeclaration","scope":1301,"src":"5526:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5526:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1291,"initialValue":{"condition":{"baseExpression":{"id":1271,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5538:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1273,"indexExpression":{"id":1272,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5549:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5538:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1286,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"5616:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1289,"indexExpression":{"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5622:10:9","subExpression":{"id":1287,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5622:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5616:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5538:95:9","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5554:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1275,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5564:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5554:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1281,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5596:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1284,"indexExpression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5603:9:9","subExpression":{"id":1282,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5603:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5596:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5554:59:9","trueExpression":{"baseExpression":{"id":1277,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5576:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1280,"indexExpression":{"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5583:9:9","subExpression":{"id":1278,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5583:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5576:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5526:107:9"},{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1292,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5647:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1294,"indexExpression":{"id":1293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5654:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5647:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"5669:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1297,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"5672:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1295,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"5659:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5659:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5647:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1300,"nodeType":"ExpressionStatement","src":"5647:27:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5405:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1249,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"5409:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5405:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1302,"initializationExpression":{"assignments":[1245],"declarations":[{"constant":false,"id":1245,"mutability":"mutable","name":"i","nameLocation":"5398:1:9","nodeType":"VariableDeclaration","scope":1302,"src":"5390:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1247,"initialValue":{"hexValue":"30","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5402:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5390:13:9"},"loopExpression":{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5422:3:9","subExpression":{"id":1251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5422:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"5422:3:9"},"nodeType":"ForStatement","src":"5385:300:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"5699:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5713:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5699:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1313,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5781:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5793:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1325,"nodeType":"Block","src":"5843:40:9","statements":[{"expression":{"baseExpression":{"id":1321,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"5864:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1323,"indexExpression":{"hexValue":"30","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5870:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5864:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1198,"id":1324,"nodeType":"Return","src":"5857:15:9"}]},"id":1326,"nodeType":"IfStatement","src":"5777:106:9","trueBody":{"id":1320,"nodeType":"Block","src":"5796:41:9","statements":[{"expression":{"baseExpression":{"id":1316,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5817:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1318,"indexExpression":{"hexValue":"30","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5824:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5817:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1198,"id":1319,"nodeType":"Return","src":"5810:16:9"}]}},"id":1327,"nodeType":"IfStatement","src":"5695:188:9","trueBody":{"id":1312,"nodeType":"Block","src":"5716:55:9","statements":[{"expression":{"baseExpression":{"id":1306,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5737:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1310,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1307,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"5744:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5758:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5744:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5737:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1198,"id":1311,"nodeType":"Return","src":"5730:30:9"}]}}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"3587:262:9","text":" @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\n consuming from one or the other at each step according to the instructions given by\n `proofFlags`.\n _Available since v4.7._"},"id":1329,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"3863:17:9","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"proof","nameLocation":"3907:5:9","nodeType":"VariableDeclaration","scope":1329,"src":"3890:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3890:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1187,"nodeType":"ArrayTypeName","src":"3890:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"proofFlags","nameLocation":"3936:10:9","nodeType":"VariableDeclaration","scope":1329,"src":"3922:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1189,"name":"bool","nodeType":"ElementaryTypeName","src":"3922:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"nodeType":"ArrayTypeName","src":"3922:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"leaves","nameLocation":"3973:6:9","nodeType":"VariableDeclaration","scope":1329,"src":"3956:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3956:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1193,"nodeType":"ArrayTypeName","src":"3956:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3880:105:9"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"merkleRoot","nameLocation":"4017:10:9","nodeType":"VariableDeclaration","scope":1329,"src":"4009:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4009:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4008:20:9"},"scope":1509,"src":"3854:2035:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1473,"nodeType":"Block","src":"6188:1860:9","statements":[{"assignments":[1345],"declarations":[{"constant":false,"id":1345,"mutability":"mutable","name":"leavesLen","nameLocation":"6579:9:9","nodeType":"VariableDeclaration","scope":1473,"src":"6571:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"6571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1348,"initialValue":{"expression":{"id":1346,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"6591:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6591:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6571:33:9"},{"assignments":[1350],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"totalHashes","nameLocation":"6622:11:9","nodeType":"VariableDeclaration","scope":1473,"src":"6614:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"6614:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1353,"initialValue":{"expression":{"id":1351,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"6636:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6636:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6614:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"6705:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1356,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"6717:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6717:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6705:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6732:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6705:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1361,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"6737:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6705:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6750:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6697:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6697:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"6697:87:9"},{"assignments":[1370],"declarations":[{"constant":false,"id":1370,"mutability":"mutable","name":"hashes","nameLocation":"7046:6:9","nodeType":"VariableDeclaration","scope":1473,"src":"7029:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7029:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1369,"nodeType":"ArrayTypeName","src":"7029:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1376,"initialValue":{"arguments":[{"id":1374,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"7069:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7055:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7059:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1372,"nodeType":"ArrayTypeName","src":"7059:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7055:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7029:52:9"},{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"leafPos","nameLocation":"7099:7:9","nodeType":"VariableDeclaration","scope":1473,"src":"7091:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"7091:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1380,"initialValue":{"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7109:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7091:19:9"},{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"hashPos","nameLocation":"7128:7:9","nodeType":"VariableDeclaration","scope":1473,"src":"7120:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"7120:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1384,"initialValue":{"hexValue":"30","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7138:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7120:19:9"},{"assignments":[1386],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"proofPos","nameLocation":"7157:8:9","nodeType":"VariableDeclaration","scope":1473,"src":"7149:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"7149:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"initialValue":{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7168:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7149:20:9"},{"body":{"id":1446,"nodeType":"Block","src":"7586:258:9","statements":[{"assignments":[1400],"declarations":[{"constant":false,"id":1400,"mutability":"mutable","name":"a","nameLocation":"7608:1:9","nodeType":"VariableDeclaration","scope":1446,"src":"7600:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7600:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1413,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"7612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1402,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7622:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7612:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1408,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"7654:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1411,"indexExpression":{"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7661:9:9","subExpression":{"id":1409,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7661:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7654:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7612:59:9","trueExpression":{"baseExpression":{"id":1404,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7634:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1407,"indexExpression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7641:9:9","subExpression":{"id":1405,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"7641:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7634:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7600:71:9"},{"assignments":[1415],"declarations":[{"constant":false,"id":1415,"mutability":"mutable","name":"b","nameLocation":"7693:1:9","nodeType":"VariableDeclaration","scope":1446,"src":"7685:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7685:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1436,"initialValue":{"condition":{"baseExpression":{"id":1416,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"7697:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1418,"indexExpression":{"id":1417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7708:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7697:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1431,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"7775:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1434,"indexExpression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7781:10:9","subExpression":{"id":1432,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7781:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7775:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7697:95:9","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"7713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1420,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7723:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7713:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1426,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"7755:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1429,"indexExpression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7762:9:9","subExpression":{"id":1427,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7755:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7713:59:9","trueExpression":{"baseExpression":{"id":1422,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7735:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1425,"indexExpression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7742:9:9","subExpression":{"id":1423,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"7742:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7735:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7685:107:9"},{"expression":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1437,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"7806:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1439,"indexExpression":{"id":1438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7813:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7806:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"7828:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"7831:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1440,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"7818:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7818:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7806:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1445,"nodeType":"ExpressionStatement","src":"7806:27:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7564:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1394,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"7568:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7564:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1447,"initializationExpression":{"assignments":[1390],"declarations":[{"constant":false,"id":1390,"mutability":"mutable","name":"i","nameLocation":"7557:1:9","nodeType":"VariableDeclaration","scope":1447,"src":"7549:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"7549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1392,"initialValue":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7561:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7549:13:9"},"loopExpression":{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7581:3:9","subExpression":{"id":1396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7581:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1398,"nodeType":"ExpressionStatement","src":"7581:3:9"},"nodeType":"ForStatement","src":"7544:300:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"7858:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7872:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7858:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7940:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7940:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1470,"nodeType":"Block","src":"8002:40:9","statements":[{"expression":{"baseExpression":{"id":1466,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"8023:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1468,"indexExpression":{"hexValue":"30","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8023:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1343,"id":1469,"nodeType":"Return","src":"8016:15:9"}]},"id":1471,"nodeType":"IfStatement","src":"7936:106:9","trueBody":{"id":1465,"nodeType":"Block","src":"7955:41:9","statements":[{"expression":{"baseExpression":{"id":1461,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7976:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1463,"indexExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7983:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7976:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1343,"id":1464,"nodeType":"Return","src":"7969:16:9"}]}},"id":1472,"nodeType":"IfStatement","src":"7854:188:9","trueBody":{"id":1457,"nodeType":"Block","src":"7875:55:9","statements":[{"expression":{"baseExpression":{"id":1451,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"7896:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1455,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"7903:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7917:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7903:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7896:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1343,"id":1456,"nodeType":"Return","src":"7889:30:9"}]}}]},"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"5895:101:9","text":" @dev Calldata version of {processMultiProof}\n _Available since v4.7._"},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6010:25:9","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"proof","nameLocation":"6064:5:9","nodeType":"VariableDeclaration","scope":1474,"src":"6045:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6045:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1332,"nodeType":"ArrayTypeName","src":"6045:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"proofFlags","nameLocation":"6095:10:9","nodeType":"VariableDeclaration","scope":1474,"src":"6079:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1334,"name":"bool","nodeType":"ElementaryTypeName","src":"6079:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"nodeType":"ArrayTypeName","src":"6079:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"leaves","nameLocation":"6132:6:9","nodeType":"VariableDeclaration","scope":1474,"src":"6115:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6115:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1338,"nodeType":"ArrayTypeName","src":"6115:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6035:109:9"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"merkleRoot","nameLocation":"6176:10:9","nodeType":"VariableDeclaration","scope":1474,"src":"6168:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6168:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6167:20:9"},"scope":1509,"src":"6001:2047:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1496,"nodeType":"Block","src":"8126:75:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"8143:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8147:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8143:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8189:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"8192:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1490,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8174:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8143:51:9","trueExpression":{"arguments":[{"id":1487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"8166:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8169:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1486,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8151:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8151:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1482,"id":1495,"nodeType":"Return","src":"8136:58:9"}]},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8063:9:9","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"a","nameLocation":"8081:1:9","nodeType":"VariableDeclaration","scope":1497,"src":"8073:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8073:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"b","nameLocation":"8092:1:9","nodeType":"VariableDeclaration","scope":1497,"src":"8084:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8072:22:9"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"8117:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8117:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8116:9:9"},"scope":1509,"src":"8054:147:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1507,"nodeType":"Block","src":"8290:178:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8352:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8373:4:9","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"8379:1:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8366:6:9"},"nodeType":"YulFunctionCall","src":"8366:15:9"},"nodeType":"YulExpressionStatement","src":"8366:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8401:4:9","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"8407:1:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8394:6:9"},"nodeType":"YulFunctionCall","src":"8394:15:9"},"nodeType":"YulExpressionStatement","src":"8394:15:9"},{"nodeType":"YulAssignment","src":"8422:30:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8441:4:9","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"8447:4:9","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8431:9:9"},"nodeType":"YulFunctionCall","src":"8431:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8422:5:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1499,"isOffset":false,"isSlot":false,"src":"8379:1:9","valueSize":1},{"declaration":1501,"isOffset":false,"isSlot":false,"src":"8407:1:9","valueSize":1},{"declaration":1504,"isOffset":false,"isSlot":false,"src":"8422:5:9","valueSize":1}],"id":1506,"nodeType":"InlineAssembly","src":"8343:119:9"}]},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"8216:14:9","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"a","nameLocation":"8239:1:9","nodeType":"VariableDeclaration","scope":1508,"src":"8231:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8231:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"b","nameLocation":"8250:1:9","nodeType":"VariableDeclaration","scope":1508,"src":"8242:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8242:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8230:22:9"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"value","nameLocation":"8283:5:9","nodeType":"VariableDeclaration","scope":1508,"src":"8275:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8275:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8274:15:9"},"scope":1509,"src":"8207:261:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1510,"src":"799:7671:9","usedErrors":[]}],"src":"118:8353:9"},"id":9},"contracts/Campaign.sol":{"ast":{"absolutePath":"contracts/Campaign.sol","exportedSymbols":{"Address":[985],"Campaign":[2395],"IERC20":[348],"IERC20Permit":[409],"Initializable":[230],"MerkleProof":[1509],"ReentrancyGuard":[270],"SafeERC20":[690]},"id":2396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1511,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":1510,"src":"58:68:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":1513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":231,"src":"127:63:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":691,"src":"191:65:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":349,"src":"257:56:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":271,"src":"314:62:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1518,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":230,"src":"426:13:10"},"id":1519,"nodeType":"InheritanceSpecifier","src":"426:13:10"},{"baseName":{"id":1520,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":270,"src":"441:15:10"},"id":1521,"nodeType":"InheritanceSpecifier","src":"441:15:10"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"378:26:10","text":" @title Campaign"},"fullyImplemented":true,"id":2395,"linearizedBaseContracts":[2395,270,230],"name":"Campaign","nameLocation":"414:8:10","nodeType":"ContractDefinition","nodes":[{"id":1525,"libraryName":{"id":1522,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":690,"src":"469:9:10"},"nodeType":"UsingForDirective","src":"463:27:10","typeName":{"id":1524,"nodeType":"UserDefinedTypeName","pathNode":{"id":1523,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"483:6:10"},"referencedDeclaration":348,"src":"483:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}}},{"constant":true,"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"496:72:10","text":"Shares are considered a ratio [0-1] with 18 digits where 1E18 = 1 "},"functionSelector":"85e3f997","id":1531,"mutability":"constant","name":"TOTAL_SHARES","nameLocation":"597:12:10","nodeType":"VariableDeclaration","scope":2395,"src":"573:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"612:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"616:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"612:6:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"c3a079ed","id":1533,"mutability":"mutable","name":"CHALLENGE_PERIOD","nameLocation":"640:16:10","nodeType":"VariableDeclaration","scope":2395,"src":"625:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3e161940","id":1535,"mutability":"mutable","name":"ACTIVATION_PERIOD","nameLocation":"677:17:10","nodeType":"VariableDeclaration","scope":2395,"src":"662:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"007c4d51","id":1537,"mutability":"mutable","name":"ACTIVE_DURATION","nameLocation":"715:15:10","nodeType":"VariableDeclaration","scope":2395,"src":"700:30:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"700:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a9ec3a1b","id":1539,"mutability":"mutable","name":"approvedMerkleRoot","nameLocation":"752:18:10","nodeType":"VariableDeclaration","scope":2395,"src":"737:33:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"737:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"777:141:10","text":"Optimistic flow used to update merkleRoot.\n - Oracle propose update and Admin can block\n - Admin cannot initiate an update "},"functionSelector":"9637f475","id":1542,"mutability":"mutable","name":"pendingMerkleRoot","nameLocation":"938:17:10","nodeType":"VariableDeclaration","scope":2395,"src":"923:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"923:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"da4493f6","id":1544,"mutability":"mutable","name":"activationTime","nameLocation":"976:14:10","nodeType":"VariableDeclaration","scope":2395,"src":"961:29:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7a40624b","id":1546,"mutability":"mutable","name":"deployTime","nameLocation":"1011:10:10","nodeType":"VariableDeclaration","scope":2395,"src":"996:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1028:52:10","text":"Uri pointing to the campaign's reward ruleset "},"functionSelector":"977aa88b","id":1549,"mutability":"mutable","name":"rewardRulesetUri","nameLocation":"1100:16:10","nodeType":"VariableDeclaration","scope":2395,"src":"1085:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1085:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":1551,"mutability":"mutable","name":"admin","nameLocation":"1138:5:10","nodeType":"VariableDeclaration","scope":2395,"src":"1123:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"7dc0d1d0","id":1553,"mutability":"mutable","name":"oracle","nameLocation":"1164:6:10","nodeType":"VariableDeclaration","scope":2395,"src":"1149:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"1177:106:10","text":"amount of total assets already claimed per asset address (zero address represents the native token) "},"functionSelector":"ef5d9ae8","id":1558,"mutability":"mutable","name":"totalClaimed","nameLocation":"1323:12:10","nodeType":"VariableDeclaration","scope":2395,"src":"1288:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1557,"keyType":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1288:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"1341:121:10","text":"amount of assets already claimed per claimer address, per asset address (zero address represents the native token) "},"functionSelector":"0c9cbf0e","id":1565,"mutability":"mutable","name":"claimed","nameLocation":"1522:7:10","nodeType":"VariableDeclaration","scope":2395,"src":"1467:62:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1564,"keyType":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1467:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1563,"keyType":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1486:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"1536:75:10","text":"Once locked, the merkleRoot cannot be updated anymore until unlocked "},"functionSelector":"7cc0cdf2","id":1568,"mutability":"mutable","name":"sharesLocked","nameLocation":"1628:12:10","nodeType":"VariableDeclaration","scope":2395,"src":"1616:24:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1567,"name":"bool","nodeType":"ElementaryTypeName","src":"1616:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"1646:56:10","text":"Once cancelled, the assets providers can withdraw "},"functionSelector":"63a5b88d","id":1571,"mutability":"mutable","name":"campaignCancelled","nameLocation":"1719:17:10","nodeType":"VariableDeclaration","scope":2395,"src":"1707:29:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1570,"name":"bool","nodeType":"ElementaryTypeName","src":"1707:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1743:119:10","text":"amount of rewards provided per address of provider, per asset address (zero address represents the native token) "},"functionSelector":"40bcf748","id":1578,"mutability":"mutable","name":"providers","nameLocation":"1922:9:10","nodeType":"VariableDeclaration","scope":2395,"src":"1867:64:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1577,"keyType":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1867:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1576,"keyType":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"1894:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1886:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"1937:100:10","text":"amount of total rewards provided per asset address (zero address represents the native token) "},"functionSelector":"27ce11cb","id":1583,"mutability":"mutable","name":"totalProvided","nameLocation":"2077:13:10","nodeType":"VariableDeclaration","scope":2395,"src":"2042:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1582,"keyType":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"2050:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2042:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":1591,"name":"Fund","nameLocation":"2103:4:10","nodeType":"EventDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"2124:8:10","nodeType":"VariableDeclaration","scope":1591,"src":"2108:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2142:6:10","nodeType":"VariableDeclaration","scope":1591,"src":"2134:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1589,"indexed":false,"mutability":"mutable","name":"asset","nameLocation":"2158:5:10","nodeType":"VariableDeclaration","scope":1591,"src":"2150:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"2150:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:57:10"},"src":"2097:68:10"},{"anonymous":false,"id":1599,"name":"SharesMerkleRootUpdate","nameLocation":"2176:22:10","nodeType":"EventDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"indexed":false,"mutability":"mutable","name":"sharesMerkleRoot","nameLocation":"2207:16:10","nodeType":"VariableDeclaration","scope":1599,"src":"2199:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2199:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1595,"indexed":false,"mutability":"mutable","name":"sharesUri","nameLocation":"2233:9:10","nodeType":"VariableDeclaration","scope":1599,"src":"2225:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1597,"indexed":false,"mutability":"mutable","name":"activationTime","nameLocation":"2252:14:10","nodeType":"VariableDeclaration","scope":1599,"src":"2244:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2198:69:10"},"src":"2170:98:10"},{"anonymous":false,"id":1609,"name":"Claim","nameLocation":"2279:5:10","nodeType":"EventDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2301:7:10","nodeType":"VariableDeclaration","scope":1609,"src":"2285:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"2285:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1603,"indexed":false,"mutability":"mutable","name":"share","nameLocation":"2318:5:10","nodeType":"VariableDeclaration","scope":1609,"src":"2310:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1605,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"2333:6:10","nodeType":"VariableDeclaration","scope":1609,"src":"2325:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1607,"indexed":false,"mutability":"mutable","name":"assset","nameLocation":"2349:6:10","nodeType":"VariableDeclaration","scope":1609,"src":"2341:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2284:72:10"},"src":"2273:84:10"},{"anonymous":false,"id":1611,"name":"Challenge","nameLocation":"2368:9:10","nodeType":"EventDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"2377:2:10"},"src":"2362:18:10"},{"anonymous":false,"id":1619,"name":"Withdraw","nameLocation":"2391:8:10","nodeType":"EventDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2416:7:10","nodeType":"VariableDeclaration","scope":1619,"src":"2400:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"2400:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1615,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2433:6:10","nodeType":"VariableDeclaration","scope":1619,"src":"2425:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2425:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1617,"indexed":false,"mutability":"mutable","name":"asset","nameLocation":"2449:5:10","nodeType":"VariableDeclaration","scope":1619,"src":"2441:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2399:56:10"},"src":"2385:71:10"},{"anonymous":false,"id":1623,"name":"SharesLock","nameLocation":"2467:10:10","nodeType":"EventDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"indexed":false,"mutability":"mutable","name":"locked","nameLocation":"2483:6:10","nodeType":"VariableDeclaration","scope":1623,"src":"2478:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1620,"name":"bool","nodeType":"ElementaryTypeName","src":"2478:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2477:13:10"},"src":"2461:30:10"},{"anonymous":false,"id":1625,"name":"CampaignCancelled","nameLocation":"2502:17:10","nodeType":"EventDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[],"src":"2519:2:10"},"src":"2496:26:10"},{"id":1627,"name":"InvalidProof","nameLocation":"2534:12:10","nodeType":"ErrorDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[],"src":"2546:2:10"},"src":"2528:21:10"},{"id":1631,"name":"ProposeWindowNotActive","nameLocation":"2560:22:10","nodeType":"ErrorDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"blockTime","nameLocation":"2591:9:10","nodeType":"VariableDeclaration","scope":1631,"src":"2583:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2583:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2582:19:10"},"src":"2554:48:10"},{"id":1635,"name":"ChallengePeriodActive","nameLocation":"2613:21:10","nodeType":"ErrorDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"blockTime","nameLocation":"2643:9:10","nodeType":"VariableDeclaration","scope":1635,"src":"2635:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2634:19:10"},"src":"2607:47:10"},{"id":1639,"name":"OnlyInChallengePeriod","nameLocation":"2665:21:10","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"blockTime","nameLocation":"2695:9:10","nodeType":"VariableDeclaration","scope":1639,"src":"2687:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2686:19:10"},"src":"2659:47:10"},{"id":1641,"name":"NoRewardAvailable","nameLocation":"2717:17:10","nodeType":"ErrorDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[],"src":"2734:2:10"},"src":"2711:26:10"},{"id":1643,"name":"OnlyAdmin","nameLocation":"2748:9:10","nodeType":"ErrorDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"2757:2:10"},"src":"2742:18:10"},{"id":1645,"name":"WithdrawalNotAllowed","nameLocation":"2771:20:10","nodeType":"ErrorDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"2791:2:10"},"src":"2765:29:10"},{"id":1647,"name":"NoAssetsToWithdraw","nameLocation":"2805:18:10","nodeType":"ErrorDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[],"src":"2823:2:10"},"src":"2799:27:10"},{"id":1649,"name":"OnlyOracle","nameLocation":"2837:10:10","nodeType":"ErrorDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"2847:2:10"},"src":"2831:19:10"},{"id":1651,"name":"NotIfCampaignLocked","nameLocation":"2861:19:10","nodeType":"ErrorDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[],"src":"2880:2:10"},"src":"2855:28:10"},{"id":1653,"name":"NotIfCampaignCancelled","nameLocation":"2894:22:10","nodeType":"ErrorDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[],"src":"2916:2:10"},"src":"2888:31:10"},{"body":{"id":1665,"nodeType":"Block","src":"2946:95:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2960:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2960:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1657,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"2974:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2960:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1663,"nodeType":"IfStatement","src":"2956:68:10","trueBody":{"id":1662,"nodeType":"Block","src":"2981:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1659,"name":"OnlyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"3002:9:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3002:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"RevertStatement","src":"2995:18:10"}]}},{"id":1664,"nodeType":"PlaceholderStatement","src":"3033:1:10"}]},"id":1666,"name":"onlyAdmin","nameLocation":"2934:9:10","nodeType":"ModifierDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[],"src":"2943:2:10"},"src":"2925:116:10","virtual":false,"visibility":"internal"},{"body":{"id":1678,"nodeType":"Block","src":"3069:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3083:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3083:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1670,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"3097:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3083:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1676,"nodeType":"IfStatement","src":"3079:70:10","trueBody":{"id":1675,"nodeType":"Block","src":"3105:44:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1672,"name":"OnlyOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3126:10:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3126:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"RevertStatement","src":"3119:19:10"}]}},{"id":1677,"nodeType":"PlaceholderStatement","src":"3158:1:10"}]},"id":1679,"name":"onlyOracle","nameLocation":"3056:10:10","nodeType":"ModifierDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"3066:2:10"},"src":"3047:119:10","virtual":false,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"3193:98:10","statements":[{"condition":{"id":1681,"name":"sharesLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"3207:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1686,"nodeType":"IfStatement","src":"3203:71:10","trueBody":{"id":1685,"nodeType":"Block","src":"3221:53:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1682,"name":"NotIfCampaignLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"3242:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3242:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"RevertStatement","src":"3235:28:10"}]}},{"id":1687,"nodeType":"PlaceholderStatement","src":"3283:1:10"}]},"id":1689,"name":"notLocked","nameLocation":"3181:9:10","nodeType":"ModifierDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"3190:2:10"},"src":"3172:119:10","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"3321:106:10","statements":[{"condition":{"id":1691,"name":"campaignCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3335:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"3331:79:10","trueBody":{"id":1695,"nodeType":"Block","src":"3354:56:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1692,"name":"NotIfCampaignCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3375:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3375:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"RevertStatement","src":"3368:31:10"}]}},{"id":1697,"nodeType":"PlaceholderStatement","src":"3419:1:10"}]},"id":1699,"name":"notCancelled","nameLocation":"3306:12:10","nodeType":"ModifierDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"3318:2:10"},"src":"3297:130:10","virtual":false,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"3976:362:10","statements":[{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1719,"name":"rewardRulesetUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"3986:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1720,"name":"_rewardRulesetUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"4005:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3986:36:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1722,"nodeType":"ExpressionStatement","src":"3986:36:10"},{"expression":{"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"4032:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1724,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"4040:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4032:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1726,"nodeType":"ExpressionStatement","src":"4032:14:10"},{"expression":{"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1727,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4056:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1728,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4065:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4056:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1730,"nodeType":"ExpressionStatement","src":"4056:16:10"},{"expression":{"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1731,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4082:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"_activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4099:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4117:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4099:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1736,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4139:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4139:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4099:55:10","trueExpression":{"id":1735,"name":"_activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4121:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4082:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1740,"nodeType":"ExpressionStatement","src":"4082:72:10"},{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1741,"name":"deployTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"4164:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1742,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4177:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4177:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4164:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"4164:28:10"},{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1746,"name":"CHALLENGE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4203:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1747,"name":"_CHALLENGE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"4222:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4203:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1749,"nodeType":"ExpressionStatement","src":"4203:36:10"},{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1750,"name":"ACTIVATION_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"4249:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1751,"name":"_ACTIVATION_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"4269:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4249:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1753,"nodeType":"ExpressionStatement","src":"4249:38:10"},{"expression":{"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1754,"name":"ACTIVE_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"4297:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1755,"name":"_ACTIVE_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"4315:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4297:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1757,"nodeType":"ExpressionStatement","src":"4297:34:10"}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"3499:201:10","text":" Campaign initialization, called once at deploy (using the campaign factory).\n CHALLENGE_PERIOD > ACTIVE_DURATION is recommended to limite one proposeal per\n active window"},"functionSelector":"a98acb46","id":1759,"implemented":true,"kind":"function","modifiers":[{"id":1717,"kind":"modifierInvocation","modifierName":{"id":1716,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":150,"src":"3964:11:10"},"nodeType":"ModifierInvocation","src":"3964:11:10"}],"name":"initCampaign","nameLocation":"3714:12:10","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"_rewardRulesetUri","nameLocation":"3744:17:10","nodeType":"VariableDeclaration","scope":1759,"src":"3736:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3736:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"_admin","nameLocation":"3779:6:10","nodeType":"VariableDeclaration","scope":1759,"src":"3771:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"_oracle","nameLocation":"3803:7:10","nodeType":"VariableDeclaration","scope":1759,"src":"3795:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"3795:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"_activationTime","nameLocation":"3828:15:10","nodeType":"VariableDeclaration","scope":1759,"src":"3820:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"3820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"_CHALLENGE_PERIOD","nameLocation":"3861:17:10","nodeType":"VariableDeclaration","scope":1759,"src":"3853:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3853:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"_ACTIVATION_PERIOD","nameLocation":"3896:18:10","nodeType":"VariableDeclaration","scope":1759,"src":"3888:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3888:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"_ACTIVE_DURATION","nameLocation":"3932:16:10","nodeType":"VariableDeclaration","scope":1759,"src":"3924:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3726:228:10"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"3976:0:10"},"scope":2395,"src":"3705:633:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1795,"nodeType":"Block","src":"4542:164:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4556:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4573:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4565:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"4565:7:10","typeDescriptions":{}}},"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4565:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4556:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1793,"nodeType":"Block","src":"4643:57:10","statements":[{"expression":{"arguments":[{"id":1787,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"4663:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1788,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4671:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4678:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4678:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"_fund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"4657:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4657:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"ExpressionStatement","src":"4657:32:10"}]},"id":1794,"nodeType":"IfStatement","src":"4552:148:10","trueBody":{"id":1785,"nodeType":"Block","src":"4577:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":1778,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4597:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4597:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1780,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4608:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4615:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4615:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1777,"name":"_fund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"4591:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4591:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"ExpressionStatement","src":"4591:35:10"}]}}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"4344:105:10","text":"Fund campaign with native or any ERC20 token.\n For native token, asset is the zero address.  "},"functionSelector":"7b1837de","id":1796,"implemented":true,"kind":"function","modifiers":[{"id":1767,"kind":"modifierInvocation","modifierName":{"id":1766,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":269,"src":"4516:12:10"},"nodeType":"ModifierInvocation","src":"4516:12:10"},{"id":1769,"kind":"modifierInvocation","modifierName":{"id":1768,"name":"notCancelled","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"4529:12:10"},"nodeType":"ModifierInvocation","src":"4529:12:10"}],"name":"fund","nameLocation":"4463:4:10","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"asset","nameLocation":"4476:5:10","nodeType":"VariableDeclaration","scope":1796,"src":"4468:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"4468:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"amount","nameLocation":"4491:6:10","nodeType":"VariableDeclaration","scope":1796,"src":"4483:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4467:31:10"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"4542:0:10"},"scope":2395,"src":"4454:252:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1834,"nodeType":"Block","src":"4952:289:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1810,"name":"checkMerkleRootUpdateAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4962:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4962:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"4962:30:10"},{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1813,"name":"approvedMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"5003:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1814,"name":"pendingMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"5024:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5003:38:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1816,"nodeType":"ExpressionStatement","src":"5003:38:10"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"pendingMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"5051:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1818,"name":"_sharesMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"5071:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5051:37:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1820,"nodeType":"ExpressionStatement","src":"5051:37:10"},{"expression":{"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1821,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5098:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1822,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5115:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5115:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1824,"name":"CHALLENGE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"5133:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5115:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5098:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1827,"nodeType":"ExpressionStatement","src":"5098:51:10"},{"eventCall":{"arguments":[{"id":1829,"name":"_sharesMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"5188:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1830,"name":"_sharesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"5207:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1831,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5219:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1828,"name":"SharesMerkleRootUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5165:22:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,uint256)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5165:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1833,"nodeType":"EmitStatement","src":"5160:74:10"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"4712:122:10","text":"Only the oracle can propose a new merkleRoot. The proposed root becomes active only\n after a CHALLENGE_PERIOD "},"functionSelector":"17b9d05e","id":1835,"implemented":true,"kind":"function","modifiers":[{"id":1804,"kind":"modifierInvocation","modifierName":{"id":1803,"name":"onlyOracle","nodeType":"IdentifierPath","referencedDeclaration":1679,"src":"4918:10:10"},"nodeType":"ModifierInvocation","src":"4918:10:10"},{"id":1806,"kind":"modifierInvocation","modifierName":{"id":1805,"name":"notLocked","nodeType":"IdentifierPath","referencedDeclaration":1689,"src":"4929:9:10"},"nodeType":"ModifierInvocation","src":"4929:9:10"},{"id":1808,"kind":"modifierInvocation","modifierName":{"id":1807,"name":"notCancelled","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"4939:12:10"},"nodeType":"ModifierInvocation","src":"4939:12:10"}],"name":"proposeShares","nameLocation":"4848:13:10","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"_sharesMerkleRoot","nameLocation":"4870:17:10","nodeType":"VariableDeclaration","scope":1835,"src":"4862:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4862:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"_sharesUri","nameLocation":"4897:10:10","nodeType":"VariableDeclaration","scope":1835,"src":"4889:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4889:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4861:47:10"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"4952:0:10"},"scope":2395,"src":"4839:402:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1885,"nodeType":"Block","src":"5493:186:10","statements":[{"expression":{"arguments":[{"id":1856,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5516:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5525:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1858,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5532:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":1855,"name":"verifyShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"5503:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$__$","typeString":"function (address,uint256,bytes32[] calldata) view"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5503:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"5503:35:10"},{"body":{"id":1883,"nodeType":"Block","src":"5594:79:10","statements":[{"expression":{"arguments":[{"id":1873,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5615:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1874,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5624:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1875,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"5631:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1877,"indexExpression":{"id":1876,"name":"ix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5638:2:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5631:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5643:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5643:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1880,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"5655:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1872,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5608:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,uint256,address,address,address)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5608:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1882,"nodeType":"ExpressionStatement","src":"5608:54:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"ix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5568:2:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1866,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"5573:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5573:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5568:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1884,"initializationExpression":{"assignments":[1862],"declarations":[{"constant":false,"id":1862,"mutability":"mutable","name":"ix","nameLocation":"5560:2:10","nodeType":"VariableDeclaration","scope":1884,"src":"5554:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1861,"name":"uint8","nodeType":"ElementaryTypeName","src":"5554:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1864,"initialValue":{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5554:12:10"},"loopExpression":{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5588:4:10","subExpression":{"id":1869,"name":"ix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5588:2:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1871,"nodeType":"ExpressionStatement","src":"5588:4:10"},"nodeType":"ForStatement","src":"5549:124:10"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"5247:44:10","text":"Claim rewards from one or more assets "},"functionSelector":"8abb5d22","id":1886,"implemented":true,"kind":"function","modifiers":[{"id":1851,"kind":"modifierInvocation","modifierName":{"id":1850,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":269,"src":"5467:12:10"},"nodeType":"ModifierInvocation","src":"5467:12:10"},{"id":1853,"kind":"modifierInvocation","modifierName":{"id":1852,"name":"notCancelled","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"5480:12:10"},"nodeType":"ModifierInvocation","src":"5480:12:10"}],"name":"claim","nameLocation":"5305:5:10","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"account","nameLocation":"5328:7:10","nodeType":"VariableDeclaration","scope":1886,"src":"5320:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"5320:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"share","nameLocation":"5353:5:10","nodeType":"VariableDeclaration","scope":1886,"src":"5345:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"proof","nameLocation":"5387:5:10","nodeType":"VariableDeclaration","scope":1886,"src":"5368:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5368:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1842,"nodeType":"ArrayTypeName","src":"5368:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"assets","nameLocation":"5421:6:10","nodeType":"VariableDeclaration","scope":1886,"src":"5402:25:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"5402:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"nodeType":"ArrayTypeName","src":"5402:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"target","nameLocation":"5445:6:10","nodeType":"VariableDeclaration","scope":1886,"src":"5437:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"5437:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5310:147:10"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"5493:0:10"},"scope":2395,"src":"5296:383:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1912,"nodeType":"Block","src":"5853:179:10","statements":[{"condition":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5867:20:10","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1892,"name":"isChallengePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5868:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5868:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1901,"nodeType":"IfStatement","src":"5863:96:10","trueBody":{"id":1900,"nodeType":"Block","src":"5889:70:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":1896,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5932:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5932:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1895,"name":"OnlyInChallengePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"5910:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5910:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"RevertStatement","src":"5903:45:10"}]}},{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1902,"name":"pendingMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"5969:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5989:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5989:7:10","typeDescriptions":{}}},"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5989:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5969:30:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1908,"nodeType":"ExpressionStatement","src":"5969:30:10"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1909,"name":"Challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"6014:9:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6014:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"EmitStatement","src":"6009:16:10"}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"5685:123:10","text":"Admin can cancel the pending merkle root while in challenge period.\n Previously approved root will stay active "},"functionSelector":"d2ef7398","id":1913,"implemented":true,"kind":"function","modifiers":[{"id":1890,"kind":"modifierInvocation","modifierName":{"id":1889,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"5843:9:10"},"nodeType":"ModifierInvocation","src":"5843:9:10"}],"name":"challenge","nameLocation":"5822:9:10","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"5831:2:10"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"5853:0:10"},"scope":2395,"src":"5813:219:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1929,"nodeType":"Block","src":"6175:69:10","statements":[{"expression":{"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1921,"name":"sharesLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"6185:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1922,"name":"_lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6200:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1924,"nodeType":"ExpressionStatement","src":"6185:20:10"},{"eventCall":{"arguments":[{"id":1926,"name":"_lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6231:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1925,"name":"SharesLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6220:10:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6220:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"EmitStatement","src":"6215:22:10"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"6038:78:10","text":"Admin can lock the campaign, meaning disable future merkle root updates "},"functionSelector":"531e050d","id":1930,"implemented":true,"kind":"function","modifiers":[{"id":1919,"kind":"modifierInvocation","modifierName":{"id":1918,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"6165:9:10"},"nodeType":"ModifierInvocation","src":"6165:9:10"}],"name":"setSharesLock","nameLocation":"6130:13:10","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"_lock","nameLocation":"6149:5:10","nodeType":"VariableDeclaration","scope":1930,"src":"6144:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1915,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6143:12:10"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"6175:0:10"},"scope":2395,"src":"6121:123:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1943,"nodeType":"Block","src":"6430:75:10","statements":[{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1936,"name":"campaignCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"6440:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6460:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6440:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"ExpressionStatement","src":"6440:24:10"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1940,"name":"CampaignCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6479:17:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6479:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1942,"nodeType":"EmitStatement","src":"6474:24:10"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"6250:130:10","text":"Admin can cancel the campaign.\n After cancellation, asset providers can withdraw their assets and claims are disabled "},"functionSelector":"980e7844","id":1944,"implemented":true,"kind":"function","modifiers":[{"id":1934,"kind":"modifierInvocation","modifierName":{"id":1933,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"6420:9:10"},"nodeType":"ModifierInvocation","src":"6420:9:10"}],"name":"cancelCampaign","nameLocation":"6394:14:10","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"6408:2:10"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"6430:0:10"},"scope":2395,"src":"6385:120:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2006,"nodeType":"Block","src":"6709:455:10","statements":[{"condition":{"id":1954,"name":"campaignCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"6723:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"7104:54:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"WithdrawalNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"7125:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7125:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"7118:29:10"}]},"id":2005,"nodeType":"IfStatement","src":"6719:439:10","trueBody":{"id":2000,"nodeType":"Block","src":"6742:356:10","statements":[{"assignments":[1956],"declarations":[{"constant":false,"id":1956,"mutability":"mutable","name":"amount","nameLocation":"6764:6:10","nodeType":"VariableDeclaration","scope":2000,"src":"6756:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6756:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1971,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1958,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6789:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1957,"name":"balanceOfAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"6774:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6774:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"baseExpression":{"id":1960,"name":"providers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"6798:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1962,"indexExpression":{"id":1961,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6808:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6798:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1964,"indexExpression":{"id":1963,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"6815:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6798:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6774:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6773:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"baseExpression":{"id":1967,"name":"totalProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"6827:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1969,"indexExpression":{"id":1968,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6841:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6827:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6773:74:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6756:91:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"6865:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6875:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6865:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1979,"nodeType":"IfStatement","src":"6861:77:10","trueBody":{"id":1978,"nodeType":"Block","src":"6878:60:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1975,"name":"NoAssetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6903:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"RevertStatement","src":"6896:27:10"}]}},{"expression":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1980,"name":"providers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"6951:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1983,"indexExpression":{"id":1981,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6961:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6951:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1984,"indexExpression":{"id":1982,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"6968:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6951:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6979:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6951:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1987,"nodeType":"ExpressionStatement","src":"6951:29:10"},{"expression":{"arguments":[{"id":1989,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"7012:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1990,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7021:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1991,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7029:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1988,"name":"transferAssetOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6995:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1993,"nodeType":"ExpressionStatement","src":"6995:40:10"},{"eventCall":{"arguments":[{"id":1995,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"7064:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1996,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7073:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1997,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7081:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1994,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"7055:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7055:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1999,"nodeType":"EmitStatement","src":"7050:37:10"}]}}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"6511:115:10","text":"asset providers can withdraw their proportion of assets only in case the campaign was cancelled by the admin "},"functionSelector":"c24e4778","id":2007,"implemented":true,"kind":"function","modifiers":[{"id":1952,"kind":"modifierInvocation","modifierName":{"id":1951,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":269,"src":"6696:12:10"},"nodeType":"ModifierInvocation","src":"6696:12:10"}],"name":"withdrawAssets","nameLocation":"6640:14:10","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"account","nameLocation":"6663:7:10","nodeType":"VariableDeclaration","scope":2007,"src":"6655:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"6655:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"asset","nameLocation":"6680:5:10","nodeType":"VariableDeclaration","scope":2007,"src":"6672:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"6672:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6654:32:10"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[],"src":"6709:0:10"},"scope":2395,"src":"6631:533:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2023,"nodeType":"Block","src":"7210:57:10","statements":[{"expression":{"arguments":[{"expression":{"id":2013,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7226:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7226:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7245:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7237:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"7237:7:10","typeDescriptions":{}}},"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7237:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7249:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7249:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2012,"name":"_fund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"7220:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7220:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2022,"nodeType":"ExpressionStatement","src":"7220:40:10"}]},"id":2024,"implemented":true,"kind":"receive","modifiers":[{"id":2010,"kind":"modifierInvocation","modifierName":{"id":2009,"name":"notCancelled","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"7197:12:10"},"nodeType":"ModifierInvocation","src":"7197:12:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[],"src":"7177:2:10"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[],"src":"7210:0:10"},"scope":2395,"src":"7170:97:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2054,"nodeType":"Block","src":"7536:108:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2032,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7553:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7570:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7562:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"7562:7:10","typeDescriptions":{}}},"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7562:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7553:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2049,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7631:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"7623:7:10","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7623:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2044,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7606:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2043,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"7599:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$348_$","typeString":"type(contract IERC20)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7599:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"7599:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7599:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7553:84:10","trueExpression":{"expression":{"arguments":[{"id":2040,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7583:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7575:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"7575:7:10","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7575:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"7575:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2031,"id":2053,"nodeType":"Return","src":"7546:91:10"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"7335:127:10","text":"Returns the currrent balance that the campaign holds for an asset.\n For the native token, asset is the zero address"},"functionSelector":"c1d89941","id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfAsset","nameLocation":"7476:14:10","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"asset","nameLocation":"7499:5:10","nodeType":"VariableDeclaration","scope":2055,"src":"7491:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"7491:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7490:15:10"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"7527:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"7527:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7526:9:10"},"scope":2395,"src":"7467:177:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2094,"nodeType":"Block","src":"7818:250:10","statements":[{"assignments":[2067],"declarations":[{"constant":false,"id":2067,"mutability":"mutable","name":"claimingMerkleRoot","nameLocation":"7836:18:10","nodeType":"VariableDeclaration","scope":2094,"src":"7828:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2070,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2068,"name":"getValidRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"7857:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7857:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7828:43:10"},{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"leaf","nameLocation":"7890:4:10","nodeType":"VariableDeclaration","scope":2094,"src":"7882:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7882:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2080,"initialValue":{"arguments":[{"arguments":[{"id":2076,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"7924:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2077,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"7933:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2074,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7907:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7907:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7907:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2073,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7897:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7897:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7882:58:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2083,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"7973:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":2084,"name":"claimingMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"7980:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2085,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"8000:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2081,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"7954:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1509_$","typeString":"type(library MerkleProof)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":1031,"src":"7954:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7954:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8009:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7954:60:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2093,"nodeType":"IfStatement","src":"7950:112:10","trueBody":{"id":2092,"nodeType":"Block","src":"8016:46:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2089,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"8037:12:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8037:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"RevertStatement","src":"8030:21:10"}]}}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"7650:41:10","text":"Validates the shares of an account "},"functionSelector":"162dfe00","id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"verifyShares","nameLocation":"7705:12:10","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"account","nameLocation":"7735:7:10","nodeType":"VariableDeclaration","scope":2095,"src":"7727:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"share","nameLocation":"7760:5:10","nodeType":"VariableDeclaration","scope":2095,"src":"7752:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"7752:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2063,"mutability":"mutable","name":"proof","nameLocation":"7794:5:10","nodeType":"VariableDeclaration","scope":2095,"src":"7775:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7775:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2062,"nodeType":"ArrayTypeName","src":"7775:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7717:88:10"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"7818:0:10"},"scope":2395,"src":"7696:372:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2122,"nodeType":"Block","src":"8300:235:10","statements":[{"documentation":"Rewards by claimer are a portion of the total assets received. If new assets are received, new rewards will become available ","expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2108,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"8472:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2107,"name":"totalReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"8458:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8458:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2110,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"8481:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8458:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8457:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2113,"name":"TOTAL_SHARES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8490:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8457:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"baseExpression":{"id":2115,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"8505:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2117,"indexExpression":{"id":2116,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"8513:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8505:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2119,"indexExpression":{"id":2118,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"8520:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8505:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8457:71:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2106,"id":2121,"nodeType":"Return","src":"8450:78:10"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"8074:73:10","text":"Calculates the amount of available rewards to claim for an account "},"functionSelector":"be8b7686","id":2123,"implemented":true,"kind":"function","modifiers":[],"name":"rewardsAvailableToClaimer","nameLocation":"8161:25:10","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"account","nameLocation":"8204:7:10","nodeType":"VariableDeclaration","scope":2123,"src":"8196:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"8196:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"share","nameLocation":"8229:5:10","nodeType":"VariableDeclaration","scope":2123,"src":"8221:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"8221:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"asset","nameLocation":"8252:5:10","nodeType":"VariableDeclaration","scope":2123,"src":"8244:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2101,"name":"address","nodeType":"ElementaryTypeName","src":"8244:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8186:77:10"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"total","nameLocation":"8293:5:10","nodeType":"VariableDeclaration","scope":2123,"src":"8285:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8284:15:10"},"scope":2395,"src":"8152:383:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2141,"nodeType":"Block","src":"8666:91:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"pendingMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"8683:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8712:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8704:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8704:7:10","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8704:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8683:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2135,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8718:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8718:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2137,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8736:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8718:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8683:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2128,"id":2140,"nodeType":"Return","src":"8676:74:10"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"8541:57:10","text":"Returns true if the active root is the pending one "},"functionSelector":"7c99ca6d","id":2142,"implemented":true,"kind":"function","modifiers":[],"name":"isPendingActive","nameLocation":"8612:15:10","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[],"src":"8627:2:10"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"isActive","nameLocation":"8656:8:10","nodeType":"VariableDeclaration","scope":2142,"src":"8651:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2126,"name":"bool","nodeType":"ElementaryTypeName","src":"8651:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8650:15:10"},"scope":2395,"src":"8603:154:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2154,"nodeType":"Block","src":"8915:82:10","statements":[{"expression":{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2148,"name":"isPendingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"8932:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8932:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2151,"name":"approvedMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8972:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8932:58:10","trueExpression":{"id":2150,"name":"pendingMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"8952:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2147,"id":2153,"nodeType":"Return","src":"8925:65:10"}]},"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"8763:88:10","text":"Valid root is either the approved or pending one depending on the activation time "},"functionSelector":"75e07c2d","id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"getValidRoot","nameLocation":"8865:12:10","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[],"src":"8877:2:10"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"root","nameLocation":"8909:4:10","nodeType":"VariableDeclaration","scope":2155,"src":"8901:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8901:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8900:14:10"},"scope":2395,"src":"8856:141:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2171,"nodeType":"Block","src":"9181:67:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2164,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9213:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2163,"name":"balanceOfAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"9198:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9198:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":2166,"name":"totalClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"9222:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2168,"indexExpression":{"id":2167,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9235:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9222:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9198:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2162,"id":2170,"nodeType":"Return","src":"9191:50:10"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"9003:99:10","text":"Total assets received by the contract.\n For the native token, asset is the zero address"},"functionSelector":"4df9cfb3","id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"totalReceived","nameLocation":"9116:13:10","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"asset","nameLocation":"9138:5:10","nodeType":"VariableDeclaration","scope":2172,"src":"9130:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"9130:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9129:15:10"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"total","nameLocation":"9174:5:10","nodeType":"VariableDeclaration","scope":2172,"src":"9166:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"9166:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9165:15:10"},"scope":2395,"src":"9107:141:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2183,"nodeType":"Block","src":"9387:56:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2178,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9404:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9404:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2180,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"9422:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9404:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2177,"id":2182,"nodeType":"Return","src":"9397:39:10"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"9254:72:10","text":"Indicates whether the campaign is currently at a challenge period "},"functionSelector":"6c4fbc4a","id":2184,"implemented":true,"kind":"function","modifiers":[],"name":"isChallengePeriod","nameLocation":"9340:17:10","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[],"src":"9357:2:10"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2184,"src":"9381:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2175,"name":"bool","nodeType":"ElementaryTypeName","src":"9381:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9380:6:10"},"scope":2395,"src":"9331:112:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2206,"nodeType":"Block","src":"9576:110:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2192,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9602:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9602:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9594:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:10","typeDescriptions":{}}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9594:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2197,"name":"deployTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"9629:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9621:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"9621:7:10","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9621:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9594:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9593:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2201,"name":"ACTIVATION_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"9644:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9593:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2203,"name":"ACTIVE_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"9664:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9593:86:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2189,"id":2205,"nodeType":"Return","src":"9586:93:10"}]},"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"9449:62:10","text":"Returns true if propose window for the oracle is active "},"functionSelector":"44949728","id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"isProposeWindowActive","nameLocation":"9525:21:10","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"9546:2:10"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"9570:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2187,"name":"bool","nodeType":"ElementaryTypeName","src":"9570:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9569:6:10"},"scope":2395,"src":"9516:170:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2230,"nodeType":"Block","src":"9812:222:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2211,"name":"isChallengePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9826:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9826:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2219,"nodeType":"IfStatement","src":"9822:95:10","trueBody":{"id":2218,"nodeType":"Block","src":"9847:70:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":2214,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9890:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9890:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"ChallengePeriodActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9868:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9868:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2217,"nodeType":"RevertStatement","src":"9861:45:10"}]}},{"condition":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9931:24:10","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2220,"name":"isProposeWindowActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9932:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9932:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2229,"nodeType":"IfStatement","src":"9927:101:10","trueBody":{"id":2228,"nodeType":"Block","src":"9957:71:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":2224,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10001:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10001:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2223,"name":"ProposeWindowNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"9978:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9978:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2227,"nodeType":"RevertStatement","src":"9971:46:10"}]}}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"9692:63:10","text":"Returns true if the oracle can propose a new merkle root "},"functionSelector":"7cbb7d5e","id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"checkMerkleRootUpdateAllowed","nameLocation":"9769:28:10","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[],"src":"9797:2:10"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"9812:0:10"},"scope":2395,"src":"9760:274:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2299,"nodeType":"Block","src":"10394:409:10","statements":[{"assignments":[2246],"declarations":[{"constant":false,"id":2246,"mutability":"mutable","name":"reward","nameLocation":"10412:6:10","nodeType":"VariableDeclaration","scope":2299,"src":"10404:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"10404:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2252,"initialValue":{"arguments":[{"id":2248,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10447:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2249,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"10456:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2250,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10463:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2247,"name":"rewardsAvailableToClaimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"10421:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) view returns (uint256)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10421:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10404:65:10"},{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2253,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"10480:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2256,"indexExpression":{"id":2254,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10488:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10480:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2257,"indexExpression":{"id":2255,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10495:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10480:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2258,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"10507:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10480:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"10480:33:10"},{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2261,"name":"totalClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"10523:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2263,"indexExpression":{"id":2262,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10536:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10523:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2264,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"10546:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10523:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2266,"nodeType":"ExpressionStatement","src":"10523:29:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"10567:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10577:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10567:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"10588:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10606:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10598:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"10598:7:10","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10598:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10588:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10567:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2290,"nodeType":"Block","src":"10680:65:10","statements":[{"expression":{"arguments":[{"id":2285,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10711:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2286,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"10720:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2287,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10728:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2284,"name":"transferAssetOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"10694:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10694:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2289,"nodeType":"ExpressionStatement","src":"10694:40:10"}]},"id":2291,"nodeType":"IfStatement","src":"10563:182:10","trueBody":{"id":2283,"nodeType":"Block","src":"10610:64:10","statements":[{"expression":{"arguments":[{"id":2278,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"10641:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2279,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"10649:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2280,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10657:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2277,"name":"transferAssetOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"10624:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10624:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2282,"nodeType":"ExpressionStatement","src":"10624:39:10"}]}},{"eventCall":{"arguments":[{"id":2293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10766:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2294,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"10775:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2295,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"10782:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2296,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10790:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2292,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10760:5:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,address)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10760:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2298,"nodeType":"EmitStatement","src":"10755:41:10"}]},"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"10135:104:10","text":"Claiming is always enabled (effectively possible only when a non-zero approved merkleRoot is set) "},"id":2300,"implemented":true,"kind":"function","modifiers":[],"name":"_claim","nameLocation":"10253:6:10","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"account","nameLocation":"10277:7:10","nodeType":"VariableDeclaration","scope":2300,"src":"10269:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"10269:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"share","nameLocation":"10302:5:10","nodeType":"VariableDeclaration","scope":2300,"src":"10294:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"10294:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"asset","nameLocation":"10325:5:10","nodeType":"VariableDeclaration","scope":2300,"src":"10317:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"10317:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"sender","nameLocation":"10348:6:10","nodeType":"VariableDeclaration","scope":2300,"src":"10340:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"10340:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"target","nameLocation":"10372:6:10","nodeType":"VariableDeclaration","scope":2300,"src":"10364:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"10364:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10259:125:10"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"10394:0:10"},"scope":2395,"src":"10244:559:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2352,"nodeType":"Block","src":"10908:256:10","statements":[{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2309,"name":"providers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"10918:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2312,"indexExpression":{"id":2310,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10928:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10918:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2313,"indexExpression":{"id":2311,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"10935:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10918:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"10944:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10918:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2316,"nodeType":"ExpressionStatement","src":"10918:32:10"},{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2317,"name":"totalProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"10960:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2319,"indexExpression":{"id":2318,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10974:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10960:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2320,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"10984:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10960:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"nodeType":"ExpressionStatement","src":"10960:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"11004:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11021:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11013:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"11013:7:10","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11013:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11004:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2342,"nodeType":"IfStatement","src":"11000:109:10","trueBody":{"id":2341,"nodeType":"Block","src":"11025:84:10","statements":[{"expression":{"arguments":[{"id":2333,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"11070:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2336,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11084:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}],"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11076:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"11076:7:10","typeDescriptions":{}}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11076:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2338,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"11091:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2330,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"11046:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2329,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"11039:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$348_$","typeString":"type(contract IERC20)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11039:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":467,"src":"11039:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$348_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$348_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11039:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"11039:59:10"}]}},{"eventCall":{"arguments":[{"id":2344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"11128:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2345,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"11134:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2348,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"11150:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11142:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"11142:7:10","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11142:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2343,"name":"Fund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"11123:4:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11123:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2351,"nodeType":"EmitStatement","src":"11118:39:10"}]},"id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"_fund","nameLocation":"10818:5:10","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"amount","nameLocation":"10841:6:10","nodeType":"VariableDeclaration","scope":2353,"src":"10833:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"10833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"asset","nameLocation":"10865:5:10","nodeType":"VariableDeclaration","scope":2353,"src":"10857:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"10857:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"from","nameLocation":"10888:4:10","nodeType":"VariableDeclaration","scope":2353,"src":"10880:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"10880:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10823:75:10"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"10908:0:10"},"scope":2395,"src":"10809:355:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2393,"nodeType":"Block","src":"11278:237:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"11292:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11301:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"11301:7:10","typeDescriptions":{}}},"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11301:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11292:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2391,"nodeType":"Block","src":"11446:63:10","statements":[{"expression":{"arguments":[{"id":2387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"11487:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2388,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"11491:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2384,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"11467:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2383,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"11460:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$348_$","typeString":"type(contract IERC20)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11460:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$348","typeString":"contract IERC20"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":441,"src":"11460:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$348_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$348_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11460:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"ExpressionStatement","src":"11460:38:10"}]},"id":2392,"nodeType":"IfStatement","src":"11288:221:10","trueBody":{"id":2382,"nodeType":"Block","src":"11313:127:10","statements":[{"assignments":[2369,null],"declarations":[{"constant":false,"id":2369,"mutability":"mutable","name":"success","nameLocation":"11333:7:10","nodeType":"VariableDeclaration","scope":2382,"src":"11328:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"11328:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2376,"initialValue":{"arguments":[{"hexValue":"","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11371:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2370,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"11346:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"11346:7:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2372,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"11362:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11346:24:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11327:47:10"},{"expression":{"arguments":[{"id":2378,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"11396:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6574686572207472616e73666572206661696c6564","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11405:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3513d540484388c0a9908c86f697c9fd85f7697545de9ce91edbb77b5dec73bc","typeString":"literal_string \"ether transfer failed\""},"value":"ether transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3513d540484388c0a9908c86f697c9fd85f7697545de9ce91edbb77b5dec73bc","typeString":"literal_string \"ether transfer failed\""}],"id":2377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11388:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11388:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2381,"nodeType":"ExpressionStatement","src":"11388:41:10"}]}}]},"id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"transferAssetOut","nameLocation":"11179:16:10","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"to","nameLocation":"11213:2:10","nodeType":"VariableDeclaration","scope":2394,"src":"11205:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"11205:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"amount","nameLocation":"11233:6:10","nodeType":"VariableDeclaration","scope":2394,"src":"11225:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"11225:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"asset","nameLocation":"11257:5:10","nodeType":"VariableDeclaration","scope":2394,"src":"11249:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"11249:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11195:73:10"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"11278:0:10"},"scope":2395,"src":"11170:345:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2396,"src":"405:11112:10","usedErrors":[1627,1631,1635,1639,1641,1643,1645,1647,1649,1651,1653]}],"src":"33:11485:10"},"id":10},"contracts/CampaignFactory.sol":{"ast":{"absolutePath":"contracts/CampaignFactory.sol","exportedSymbols":{"Address":[985],"Campaign":[2395],"CampaignFactory":[2557],"Clones":[79],"IERC20":[348],"IERC20Permit":[409],"Initializable":[230],"MerkleProof":[1509],"ReentrancyGuard":[270],"SafeERC20":[690]},"id":2558,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2397,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:11"},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":2398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2558,"sourceUnit":80,"src":"60:50:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2558,"sourceUnit":349,"src":"111:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Campaign.sol","file":"./Campaign.sol","id":2400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2558,"sourceUnit":2396,"src":"169:24:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2557,"linearizedBaseContracts":[2557],"name":"CampaignFactory","nameLocation":"204:15:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2403,"mutability":"mutable","name":"master","nameLocation":"243:6:11","nodeType":"VariableDeclaration","scope":2557,"src":"226:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"},"typeName":{"id":2402,"nodeType":"UserDefinedTypeName","pathNode":{"id":2401,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"226:8:11"},"referencedDeclaration":2395,"src":"226:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}},"visibility":"private"},{"anonymous":false,"id":2419,"name":"CampaignCreated","nameLocation":"262:15:11","nodeType":"EventDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"indexed":false,"mutability":"mutable","name":"creator","nameLocation":"286:7:11","nodeType":"VariableDeclaration","scope":2419,"src":"278:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"278:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2407,"indexed":false,"mutability":"mutable","name":"newCampaign","nameLocation":"303:11:11","nodeType":"VariableDeclaration","scope":2419,"src":"295:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2409,"indexed":false,"mutability":"mutable","name":"_strategyUri","nameLocation":"324:12:11","nodeType":"VariableDeclaration","scope":2419,"src":"316:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"316:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2411,"indexed":false,"mutability":"mutable","name":"_admin","nameLocation":"346:6:11","nodeType":"VariableDeclaration","scope":2419,"src":"338:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"338:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"indexed":false,"mutability":"mutable","name":"_oracle","nameLocation":"362:7:11","nodeType":"VariableDeclaration","scope":2419,"src":"354:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"354:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2415,"indexed":false,"mutability":"mutable","name":"activationTime","nameLocation":"379:14:11","nodeType":"VariableDeclaration","scope":2419,"src":"371:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2417,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"403:4:11","nodeType":"VariableDeclaration","scope":2419,"src":"395:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"395:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"277:131:11"},"src":"256:153:11"},{"body":{"id":2430,"nodeType":"Block","src":"452:43:11","statements":[{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2424,"name":"master","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"462:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2426,"name":"_master","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"480:7:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2425,"name":"Campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"471:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Campaign_$2395_$","typeString":"type(contract Campaign)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"471:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}},"src":"462:26:11","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}},"id":2429,"nodeType":"ExpressionStatement","src":"462:26:11"}]},"id":2431,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"_master","nameLocation":"443:7:11","nodeType":"VariableDeclaration","scope":2431,"src":"427:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"427:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"426:25:11"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[],"src":"452:0:11"},"scope":2557,"src":"415:80:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2447,"nodeType":"Block","src":"570:81:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2442,"name":"master","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"630:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"622:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"622:7:11","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"622:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2444,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"639:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2438,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"587:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$79_$","typeString":"type(library Clones)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"predictDeterministicAddress","nodeType":"MemberAccess","referencedDeclaration":78,"src":"587:34:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) view returns (address)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"587:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2437,"id":2446,"nodeType":"Return","src":"580:64:11"}]},"functionSelector":"6e1a1fac","id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"campaignAddress","nameLocation":"510:15:11","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"salt","nameLocation":"534:4:11","nodeType":"VariableDeclaration","scope":2448,"src":"526:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"526:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"525:14:11"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2448,"src":"561:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"560:9:11"},"scope":2557,"src":"501:150:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2509,"nodeType":"Block","src":"972:362:11","statements":[{"expression":{"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"982:5:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":2476,"name":"master","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"1032:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}],"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1024:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:11","typeDescriptions":{}}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1024:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2478,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"1041:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2472,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"998:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$79_$","typeString":"type(library Clones)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cloneDeterministic","nodeType":"MemberAccess","referencedDeclaration":44,"src":"998:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) returns (address)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"990:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"982:65:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2482,"nodeType":"ExpressionStatement","src":"982:65:11"},{"expression":{"arguments":[{"id":2487,"name":"_rewardRulesetUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"1086:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2488,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1105:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2489,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"1113:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2490,"name":"_activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"1122:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2491,"name":"_CHALLENGE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"1139:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2492,"name":"_ACTIVATION_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"1158:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2493,"name":"_ACTIVE_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1178:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2484,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"1066:5:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2483,"name":"Campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1057:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Campaign_$2395_$","typeString":"type(contract Campaign)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1057:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initCampaign","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"1057:28:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256,uint256,uint256,uint256) external"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1057:138:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2495,"nodeType":"ExpressionStatement","src":"1057:138:11"},{"eventCall":{"arguments":[{"expression":{"id":2497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1227:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1227:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2499,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"1239:5:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2500,"name":"_rewardRulesetUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"1246:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2501,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1265:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2502,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"1273:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2503,"name":"_activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"1282:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2504,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"1299:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2496,"name":"CampaignCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"1211:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,address,bytes32,address,address,uint256,bytes32)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1211:93:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"EmitStatement","src":"1206:98:11"},{"expression":{"id":2507,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"1322:5:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":2468,"id":2508,"nodeType":"Return","src":"1315:12:11"}]},"functionSelector":"a8e0bb66","id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"createCampaign","nameLocation":"666:14:11","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"_rewardRulesetUri","nameLocation":"698:17:11","nodeType":"VariableDeclaration","scope":2510,"src":"690:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"_admin","nameLocation":"733:6:11","nodeType":"VariableDeclaration","scope":2510,"src":"725:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"_oracle","nameLocation":"757:7:11","nodeType":"VariableDeclaration","scope":2510,"src":"749:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2453,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"_activationTime","nameLocation":"782:15:11","nodeType":"VariableDeclaration","scope":2510,"src":"774:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"_CHALLENGE_PERIOD","nameLocation":"815:17:11","nodeType":"VariableDeclaration","scope":2510,"src":"807:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"_ACTIVATION_PERIOD","nameLocation":"850:18:11","nodeType":"VariableDeclaration","scope":2510,"src":"842:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"_ACTIVE_DURATION","nameLocation":"886:16:11","nodeType":"VariableDeclaration","scope":2510,"src":"878:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"salt","nameLocation":"920:4:11","nodeType":"VariableDeclaration","scope":2510,"src":"912:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"680:250:11"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"proxy","nameLocation":"965:5:11","nodeType":"VariableDeclaration","scope":2510,"src":"949:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"949:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"948:23:11"},"scope":2557,"src":"657:677:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2555,"nodeType":"Block","src":"1691:347:11","statements":[{"assignments":[2534],"declarations":[{"constant":false,"id":2534,"mutability":"mutable","name":"proxy","nameLocation":"1717:5:11","nodeType":"VariableDeclaration","scope":2555,"src":"1701:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"1701:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":2546,"initialValue":{"arguments":[{"id":2537,"name":"_strategyUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"1758:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2538,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"1784:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2539,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"1804:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2540,"name":"_activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"1825:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2541,"name":"_CHALLENGE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1854:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2542,"name":"_ACTIVATION_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"1885:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2543,"name":"_ACTIVE_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1917:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2544,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"1947:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1725:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_CampaignFactory_$2557","typeString":"contract CampaignFactory"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createCampaign","nodeType":"MemberAccess","referencedDeclaration":2510,"src":"1725:19:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_address_payable_$","typeString":"function (bytes32,address,address,uint256,uint256,uint256,uint256,bytes32) external returns (address payable)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:236:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"1701:260:11"},{"expression":{"arguments":[{"id":2551,"name":"_rewardRulesetUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2001:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2552,"name":"_sharesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"2020:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":2548,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"1980:5:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2547,"name":"Campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1971:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Campaign_$2395_$","typeString":"type(contract Campaign)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Campaign_$2395","typeString":"contract Campaign"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proposeShares","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"1971:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32) external"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2554,"nodeType":"ExpressionStatement","src":"1971:60:11"}]},"functionSelector":"5357af3b","id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"createAndPublishCampaign","nameLocation":"1349:24:11","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"_rewardRulesetUri","nameLocation":"1391:17:11","nodeType":"VariableDeclaration","scope":2556,"src":"1383:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1383:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"_sharesUri","nameLocation":"1426:10:11","nodeType":"VariableDeclaration","scope":2556,"src":"1418:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1418:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"_strategyUri","nameLocation":"1454:12:11","nodeType":"VariableDeclaration","scope":2556,"src":"1446:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1446:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"_admin","nameLocation":"1484:6:11","nodeType":"VariableDeclaration","scope":2556,"src":"1476:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"1476:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"_oracle","nameLocation":"1508:7:11","nodeType":"VariableDeclaration","scope":2556,"src":"1500:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"_activationTime","nameLocation":"1533:15:11","nodeType":"VariableDeclaration","scope":2556,"src":"1525:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"_CHALLENGE_PERIOD","nameLocation":"1566:17:11","nodeType":"VariableDeclaration","scope":2556,"src":"1558:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1558:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2526,"mutability":"mutable","name":"_ACTIVATION_PERIOD","nameLocation":"1601:18:11","nodeType":"VariableDeclaration","scope":2556,"src":"1593:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"_ACTIVE_DURATION","nameLocation":"1637:16:11","nodeType":"VariableDeclaration","scope":2556,"src":"1629:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"salt","nameLocation":"1671:4:11","nodeType":"VariableDeclaration","scope":2556,"src":"1663:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1663:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1373:308:11"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[],"src":"1691:0:11"},"scope":2557,"src":"1340:698:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2558,"src":"195:1845:11","usedErrors":[]}],"src":"35:2006:11"},"id":11},"contracts/Multicall.sol":{"ast":{"absolutePath":"contracts/Multicall.sol","exportedSymbols":{"Multicall":[2718]},"id":2719,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2559,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:12"},{"id":2560,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"58:33:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"93:222:12","text":"@title Multicall - Aggregate results from multiple read-only function calls\n @author Michael Elliot <mike@makerdao.com>\n @author Joshua Levine <joshua@makerdao.com>\n @author Nick Johnson <arachnid@notdot.net>"},"fullyImplemented":true,"id":2718,"linearizedBaseContracts":[2718],"name":"Multicall","nameLocation":"325:9:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Multicall.Call","id":2566,"members":[{"constant":false,"id":2563,"mutability":"mutable","name":"target","nameLocation":"371:6:12","nodeType":"VariableDeclaration","scope":2566,"src":"363:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2562,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"callData","nameLocation":"393:8:12","nodeType":"VariableDeclaration","scope":2566,"src":"387:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2564,"name":"bytes","nodeType":"ElementaryTypeName","src":"387:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"348:4:12","nodeType":"StructDefinition","scope":2718,"src":"341:67:12","visibility":"public"},{"body":{"id":2630,"nodeType":"Block","src":"518:305:12","statements":[{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2578,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"528:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2579,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"542:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"542:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"528:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ExpressionStatement","src":"528:26:12"},{"expression":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2583,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"564:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2587,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"589:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"589:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"577:11:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2584,"name":"bytes","nodeType":"ElementaryTypeName","src":"581:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2585,"nodeType":"ArrayTypeName","src":"581:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"577:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"564:38:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2591,"nodeType":"ExpressionStatement","src":"564:38:12"},{"body":{"id":2628,"nodeType":"Block","src":"655:162:12","statements":[{"assignments":[2604,2606],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"success","nameLocation":"675:7:12","nodeType":"VariableDeclaration","scope":2628,"src":"670:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2603,"name":"bool","nodeType":"ElementaryTypeName","src":"670:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"ret","nameLocation":"697:3:12","nodeType":"VariableDeclaration","scope":2628,"src":"684:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2605,"name":"bytes","nodeType":"ElementaryTypeName","src":"684:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2617,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":2612,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"725:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2614,"indexExpression":{"id":2613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"731:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"725:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2566_memory_ptr","typeString":"struct Multicall.Call memory"}},"id":2615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"725:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"baseExpression":{"id":2607,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"704:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2609,"indexExpression":{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"710:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"704:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2566_memory_ptr","typeString":"struct Multicall.Call memory"}},"id":2610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"target","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"704:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"704:20:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"704:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"669:74:12"},{"expression":{"arguments":[{"id":2619,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"765:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"757:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2621,"nodeType":"ExpressionStatement","src":"757:16:12"},{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2622,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"787:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2624,"indexExpression":{"id":2623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"798:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"787:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2625,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"803:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"787:19:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2627,"nodeType":"ExpressionStatement","src":"787:19:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"632:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2597,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"636:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"636:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"632:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2629,"initializationExpression":{"assignments":[2593],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"i","nameLocation":"625:1:12","nodeType":"VariableDeclaration","scope":2629,"src":"617:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2595,"initialValue":{"hexValue":"30","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"629:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"617:13:12"},"loopExpression":{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"650:3:12","subExpression":{"id":2600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"650:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2602,"nodeType":"ExpressionStatement","src":"650:3:12"},"nodeType":"ForStatement","src":"612:205:12"}]},"functionSelector":"252dba42","id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"aggregate","nameLocation":"423:9:12","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"calls","nameLocation":"447:5:12","nodeType":"VariableDeclaration","scope":2631,"src":"433:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call[]"},"typeName":{"baseType":{"id":2568,"nodeType":"UserDefinedTypeName","pathNode":{"id":2567,"name":"Call","nodeType":"IdentifierPath","referencedDeclaration":2566,"src":"433:4:12"},"referencedDeclaration":2566,"src":"433:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2566_storage_ptr","typeString":"struct Multicall.Call"}},"id":2569,"nodeType":"ArrayTypeName","src":"433:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2566_storage_$dyn_storage_ptr","typeString":"struct Multicall.Call[]"}},"visibility":"internal"}],"src":"432:21:12"},"returnParameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"blockNumber","nameLocation":"478:11:12","nodeType":"VariableDeclaration","scope":2631,"src":"470:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"returnData","nameLocation":"506:10:12","nodeType":"VariableDeclaration","scope":2631,"src":"491:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2574,"name":"bytes","nodeType":"ElementaryTypeName","src":"491:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2575,"nodeType":"ArrayTypeName","src":"491:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"469:48:12"},"scope":2718,"src":"414:409:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2643,"nodeType":"Block","src":"928:39:12","statements":[{"expression":{"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2638,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"938:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2639,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"948:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"948:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"938:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2642,"nodeType":"ExpressionStatement","src":"938:22:12"}]},"functionSelector":"4d2301cc","id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"getEthBalance","nameLocation":"862:13:12","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"addr","nameLocation":"884:4:12","nodeType":"VariableDeclaration","scope":2644,"src":"876:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"875:14:12"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"balance","nameLocation":"919:7:12","nodeType":"VariableDeclaration","scope":2644,"src":"911:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"910:17:12"},"scope":2718,"src":"853:114:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2657,"nodeType":"Block","src":"1056:51:12","statements":[{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2651,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"1066:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2653,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"1088:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2652,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"1078:9:12","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1078:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1066:34:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2656,"nodeType":"ExpressionStatement","src":"1066:34:12"}]},"functionSelector":"ee82ac5e","id":2658,"implemented":true,"kind":"function","modifiers":[],"name":"getBlockHash","nameLocation":"982:12:12","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"blockNumber","nameLocation":"1003:11:12","nodeType":"VariableDeclaration","scope":2658,"src":"995:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"995:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"994:21:12"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"blockHash","nameLocation":"1045:9:12","nodeType":"VariableDeclaration","scope":2658,"src":"1037:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1037:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1036:19:12"},"scope":2718,"src":"973:134:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2672,"nodeType":"Block","src":"1181:56:12","statements":[{"expression":{"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2663,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"1191:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2665,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1213:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"1213:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1228:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1213:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2664,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"1203:9:12","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1203:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1191:39:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2671,"nodeType":"ExpressionStatement","src":"1191:39:12"}]},"functionSelector":"27e86d6e","id":2673,"implemented":true,"kind":"function","modifiers":[],"name":"getLastBlockHash","nameLocation":"1122:16:12","nodeType":"FunctionDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[],"src":"1138:2:12"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"blockHash","nameLocation":"1170:9:12","nodeType":"VariableDeclaration","scope":2673,"src":"1162:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1162:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1161:19:12"},"scope":2718,"src":"1113:124:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2683,"nodeType":"Block","src":"1319:44:12","statements":[{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2678,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"1329:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2679,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1341:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1341:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2682,"nodeType":"ExpressionStatement","src":"1329:27:12"}]},"functionSelector":"0f28c97d","id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockTimestamp","nameLocation":"1252:24:12","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[],"src":"1276:2:12"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"timestamp","nameLocation":"1308:9:12","nodeType":"VariableDeclaration","scope":2684,"src":"1300:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1299:19:12"},"scope":2718,"src":"1243:120:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2694,"nodeType":"Block","src":"1447:46:12","statements":[{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2689,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"1457:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2690,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1470:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"difficulty","nodeType":"MemberAccess","src":"1470:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1457:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2693,"nodeType":"ExpressionStatement","src":"1457:29:12"}]},"functionSelector":"72425d9d","id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockDifficulty","nameLocation":"1378:25:12","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[],"src":"1403:2:12"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"difficulty","nameLocation":"1435:10:12","nodeType":"VariableDeclaration","scope":2695,"src":"1427:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1426:20:12"},"scope":2718,"src":"1369:124:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2705,"nodeType":"Block","src":"1573:42:12","statements":[{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"gaslimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"1583:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2701,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1594:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"gaslimit","nodeType":"MemberAccess","src":"1594:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1583:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"1583:25:12"}]},"functionSelector":"86d516e8","id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockGasLimit","nameLocation":"1508:23:12","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[],"src":"1531:2:12"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"gaslimit","nameLocation":"1563:8:12","nodeType":"VariableDeclaration","scope":2706,"src":"1555:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1554:18:12"},"scope":2718,"src":"1499:116:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2716,"nodeType":"Block","src":"1695:42:12","statements":[{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"coinbase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"1705:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2712,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1716:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"coinbase","nodeType":"MemberAccess","src":"1716:14:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1705:25:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2715,"nodeType":"ExpressionStatement","src":"1705:25:12"}]},"functionSelector":"a8b0574e","id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockCoinbase","nameLocation":"1630:23:12","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[],"src":"1653:2:12"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"coinbase","nameLocation":"1685:8:12","nodeType":"VariableDeclaration","scope":2717,"src":"1677:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"1677:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1676:18:12"},"scope":2718,"src":"1621:116:12","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2719,"src":"316:1423:12","usedErrors":[]}],"src":"33:1707:12"},"id":12},"contracts/test/TestErc20.sol":{"ast":{"absolutePath":"contracts/test/TestErc20.sol","exportedSymbols":{"Context":[1007],"IERC20":[348],"IERC20Metadata":[373],"TestErc20":[3301]},"id":3302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2720,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3302,"sourceUnit":349,"src":"58:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":2722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3302,"sourceUnit":374,"src":"115:75:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":2723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3302,"sourceUnit":1008,"src":"191:51:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2724,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"266:7:13"},"id":2725,"nodeType":"InheritanceSpecifier","src":"266:7:13"},{"baseName":{"id":2726,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"275:6:13"},"id":2727,"nodeType":"InheritanceSpecifier","src":"275:6:13"},{"baseName":{"id":2728,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":373,"src":"283:14:13"},"id":2729,"nodeType":"InheritanceSpecifier","src":"283:14:13"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3301,"linearizedBaseContracts":[3301,373,348,1007],"name":"TestErc20","nameLocation":"253:9:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2733,"mutability":"mutable","name":"_balances","nameLocation":"340:9:13","nodeType":"VariableDeclaration","scope":3301,"src":"304:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2732,"keyType":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"312:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"304:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2739,"mutability":"mutable","name":"_allowances","nameLocation":"412:11:13","nodeType":"VariableDeclaration","scope":3301,"src":"356:67:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2738,"keyType":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"364:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"356:47:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2737,"keyType":{"id":2735,"name":"address","nodeType":"ElementaryTypeName","src":"383:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"375:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2741,"mutability":"mutable","name":"_totalSupply","nameLocation":"446:12:13","nodeType":"VariableDeclaration","scope":3301,"src":"430:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2743,"mutability":"mutable","name":"_name","nameLocation":"480:5:13","nodeType":"VariableDeclaration","scope":3301,"src":"465:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2742,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2745,"mutability":"mutable","name":"_symbol","nameLocation":"506:7:13","nodeType":"VariableDeclaration","scope":3301,"src":"491:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2744,"name":"string","nodeType":"ElementaryTypeName","src":"491:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2747,"mutability":"mutable","name":"_decimals","nameLocation":"533:9:13","nodeType":"VariableDeclaration","scope":3301,"src":"519:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2746,"name":"uint8","nodeType":"ElementaryTypeName","src":"519:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":2777,"nodeType":"Block","src":"701:121:13","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2760,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"711:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2761,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"719:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"711:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2763,"nodeType":"ExpressionStatement","src":"711:13:13"},{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2764,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2765,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"744:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"734:17:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2767,"nodeType":"ExpressionStatement","src":"734:17:13"},{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"761:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2769,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"773:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"761:21:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2771,"nodeType":"ExpressionStatement","src":"761:21:13"},{"expression":{"arguments":[{"id":2773,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"799:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2774,"name":"_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"807:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2772,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"793:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"793:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2776,"nodeType":"ExpressionStatement","src":"793:22:13"}]},"id":2778,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"name_","nameLocation":"584:5:13","nodeType":"VariableDeclaration","scope":2778,"src":"570:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2748,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"symbol_","nameLocation":"613:7:13","nodeType":"VariableDeclaration","scope":2778,"src":"599:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2750,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"_supply","nameLocation":"638:7:13","nodeType":"VariableDeclaration","scope":2778,"src":"630:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"holder","nameLocation":"663:6:13","nodeType":"VariableDeclaration","scope":2778,"src":"655:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"decimals_","nameLocation":"685:9:13","nodeType":"VariableDeclaration","scope":2778,"src":"679:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2756,"name":"uint8","nodeType":"ElementaryTypeName","src":"679:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"560:140:13"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[],"src":"701:0:13"},"scope":3301,"src":"549:273:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[360],"body":{"id":2786,"nodeType":"Block","src":"897:29:13","statements":[{"expression":{"id":2784,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"914:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2783,"id":2785,"nodeType":"Return","src":"907:12:13"}]},"functionSelector":"06fdde03","id":2787,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"837:4:13","nodeType":"FunctionDefinition","overrides":{"id":2780,"nodeType":"OverrideSpecifier","overrides":[],"src":"864:8:13"},"parameters":{"id":2779,"nodeType":"ParameterList","parameters":[],"src":"841:2:13"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2787,"src":"882:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2781,"name":"string","nodeType":"ElementaryTypeName","src":"882:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"881:15:13"},"scope":3301,"src":"828:98:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[366],"body":{"id":2795,"nodeType":"Block","src":"1003:31:13","statements":[{"expression":{"id":2793,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"1020:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2792,"id":2794,"nodeType":"Return","src":"1013:14:13"}]},"functionSelector":"95d89b41","id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"941:6:13","nodeType":"FunctionDefinition","overrides":{"id":2789,"nodeType":"OverrideSpecifier","overrides":[],"src":"970:8:13"},"parameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"947:2:13"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2796,"src":"988:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2790,"name":"string","nodeType":"ElementaryTypeName","src":"988:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"987:15:13"},"scope":3301,"src":"932:102:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[372],"body":{"id":2804,"nodeType":"Block","src":"1105:33:13","statements":[{"expression":{"id":2802,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"1122:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2801,"id":2803,"nodeType":"Return","src":"1115:16:13"}]},"functionSelector":"313ce567","id":2805,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"1049:8:13","nodeType":"FunctionDefinition","overrides":{"id":2798,"nodeType":"OverrideSpecifier","overrides":[],"src":"1080:8:13"},"parameters":{"id":2797,"nodeType":"ParameterList","parameters":[],"src":"1057:2:13"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2805,"src":"1098:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2799,"name":"uint8","nodeType":"ElementaryTypeName","src":"1098:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1097:7:13"},"scope":3301,"src":"1040:98:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[297],"body":{"id":2813,"nodeType":"Block","src":"1214:36:13","statements":[{"expression":{"id":2811,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1231:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2810,"id":2812,"nodeType":"Return","src":"1224:19:13"}]},"functionSelector":"18160ddd","id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1153:11:13","nodeType":"FunctionDefinition","overrides":{"id":2807,"nodeType":"OverrideSpecifier","overrides":[],"src":"1187:8:13"},"parameters":{"id":2806,"nodeType":"ParameterList","parameters":[],"src":"1164:2:13"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"1205:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1204:9:13"},"scope":3301,"src":"1144:106:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[305],"body":{"id":2826,"nodeType":"Block","src":"1339:42:13","statements":[{"expression":{"baseExpression":{"id":2822,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1356:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2824,"indexExpression":{"id":2823,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"1366:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1356:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2821,"id":2825,"nodeType":"Return","src":"1349:25:13"}]},"functionSelector":"70a08231","id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1265:9:13","nodeType":"FunctionDefinition","overrides":{"id":2818,"nodeType":"OverrideSpecifier","overrides":[],"src":"1312:8:13"},"parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"account","nameLocation":"1283:7:13","nodeType":"VariableDeclaration","scope":2827,"src":"1275:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1274:17:13"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"1330:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1330:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1329:9:13"},"scope":3301,"src":"1256:125:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[315],"body":{"id":2850,"nodeType":"Block","src":"1472:104:13","statements":[{"assignments":[2838],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"owner","nameLocation":"1490:5:13","nodeType":"VariableDeclaration","scope":2850,"src":"1482:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2841,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2839,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1498:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1498:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1482:28:13"},{"expression":{"arguments":[{"id":2843,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"1530:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"1537:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"1541:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2842,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"1520:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1520:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"ExpressionStatement","src":"1520:28:13"},{"expression":{"hexValue":"74727565","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1565:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2836,"id":2849,"nodeType":"Return","src":"1558:11:13"}]},"functionSelector":"a9059cbb","id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1396:8:13","nodeType":"FunctionDefinition","overrides":{"id":2833,"nodeType":"OverrideSpecifier","overrides":[],"src":"1448:8:13"},"parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"to","nameLocation":"1413:2:13","nodeType":"VariableDeclaration","scope":2851,"src":"1405:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"amount","nameLocation":"1425:6:13","nodeType":"VariableDeclaration","scope":2851,"src":"1417:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1404:28:13"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2851,"src":"1466:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2834,"name":"bool","nodeType":"ElementaryTypeName","src":"1466:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1465:6:13"},"scope":3301,"src":"1387:189:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[325],"body":{"id":2867,"nodeType":"Block","src":"1680:51:13","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2861,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1697:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2863,"indexExpression":{"id":2862,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1697:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2865,"indexExpression":{"id":2864,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"1716:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1697:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2860,"id":2866,"nodeType":"Return","src":"1690:34:13"}]},"functionSelector":"dd62ed3e","id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1591:9:13","nodeType":"FunctionDefinition","overrides":{"id":2857,"nodeType":"OverrideSpecifier","overrides":[],"src":"1653:8:13"},"parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"owner","nameLocation":"1609:5:13","nodeType":"VariableDeclaration","scope":2868,"src":"1601:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"1601:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"spender","nameLocation":"1624:7:13","nodeType":"VariableDeclaration","scope":2868,"src":"1616:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2854,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1600:32:13"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"1671:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1670:9:13"},"scope":3301,"src":"1582:149:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[335],"body":{"id":2891,"nodeType":"Block","src":"1826:108:13","statements":[{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"owner","nameLocation":"1844:5:13","nodeType":"VariableDeclaration","scope":2891,"src":"1836:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"1836:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2882,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2880,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1852:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1852:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1836:28:13"},{"expression":{"arguments":[{"id":2884,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"1883:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2885,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1890:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1899:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2883,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"1874:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1874:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2888,"nodeType":"ExpressionStatement","src":"1874:32:13"},{"expression":{"hexValue":"74727565","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1923:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2877,"id":2890,"nodeType":"Return","src":"1916:11:13"}]},"functionSelector":"095ea7b3","id":2892,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1746:7:13","nodeType":"FunctionDefinition","overrides":{"id":2874,"nodeType":"OverrideSpecifier","overrides":[],"src":"1802:8:13"},"parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"spender","nameLocation":"1762:7:13","nodeType":"VariableDeclaration","scope":2892,"src":"1754:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"amount","nameLocation":"1779:6:13","nodeType":"VariableDeclaration","scope":2892,"src":"1771:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:33:13"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"1820:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2875,"name":"bool","nodeType":"ElementaryTypeName","src":"1820:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1819:6:13"},"scope":3301,"src":"1737:197:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[347],"body":{"id":2923,"nodeType":"Block","src":"2073:153:13","statements":[{"assignments":[2905],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"spender","nameLocation":"2091:7:13","nodeType":"VariableDeclaration","scope":2923,"src":"2083:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2908,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2906,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2101:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2101:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2083:30:13"},{"expression":{"arguments":[{"id":2910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"2139:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2911,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2145:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2912,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2154:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2909,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"2123:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2123:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2914,"nodeType":"ExpressionStatement","src":"2123:38:13"},{"expression":{"arguments":[{"id":2916,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"2181:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2917,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2187:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2191:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2915,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2171:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2171:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2920,"nodeType":"ExpressionStatement","src":"2171:27:13"},{"expression":{"hexValue":"74727565","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2215:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2903,"id":2922,"nodeType":"Return","src":"2208:11:13"}]},"functionSelector":"23b872dd","id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1949:12:13","nodeType":"FunctionDefinition","overrides":{"id":2900,"nodeType":"OverrideSpecifier","overrides":[],"src":"2049:8:13"},"parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"from","nameLocation":"1979:4:13","nodeType":"VariableDeclaration","scope":2924,"src":"1971:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"to","nameLocation":"2001:2:13","nodeType":"VariableDeclaration","scope":2924,"src":"1993:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"amount","nameLocation":"2021:6:13","nodeType":"VariableDeclaration","scope":2924,"src":"2013:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1961:72:13"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"2067:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2901,"name":"bool","nodeType":"ElementaryTypeName","src":"2067:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2066:6:13"},"scope":3301,"src":"1940:286:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2951,"nodeType":"Block","src":"2326:140:13","statements":[{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"owner","nameLocation":"2344:5:13","nodeType":"VariableDeclaration","scope":2951,"src":"2336:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2937,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2935,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2352:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2352:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2336:28:13"},{"expression":{"arguments":[{"id":2939,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2383:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2940,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2390:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2942,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2409:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2943,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2416:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2941,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2399:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2399:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2945,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2427:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2399:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2938,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"2374:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2374:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"ExpressionStatement","src":"2374:64:13"},{"expression":{"hexValue":"74727565","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2455:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2932,"id":2950,"nodeType":"Return","src":"2448:11:13"}]},"functionSelector":"39509351","id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"2241:17:13","nodeType":"FunctionDefinition","parameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"spender","nameLocation":"2267:7:13","nodeType":"VariableDeclaration","scope":2952,"src":"2259:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2925,"name":"address","nodeType":"ElementaryTypeName","src":"2259:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"addedValue","nameLocation":"2284:10:13","nodeType":"VariableDeclaration","scope":2952,"src":"2276:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2276:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2258:37:13"},"returnParameters":{"id":2932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2952,"src":"2320:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2930,"name":"bool","nodeType":"ElementaryTypeName","src":"2320:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2319:6:13"},"scope":3301,"src":"2232:234:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2991,"nodeType":"Block","src":"2571:328:13","statements":[{"assignments":[2962],"declarations":[{"constant":false,"id":2962,"mutability":"mutable","name":"owner","nameLocation":"2589:5:13","nodeType":"VariableDeclaration","scope":2991,"src":"2581:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"2581:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2965,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2963,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2597:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2597:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2581:28:13"},{"assignments":[2967],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"currentAllowance","nameLocation":"2627:16:13","nodeType":"VariableDeclaration","scope":2991,"src":"2619:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2972,"initialValue":{"arguments":[{"id":2969,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"2656:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2970,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2663:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2968,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2646:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2646:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2619:52:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"2689:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2975,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2709:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2689:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2726:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":2973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2681:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2681:85:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2979,"nodeType":"ExpressionStatement","src":"2681:85:13"},{"id":2988,"nodeType":"UncheckedBlock","src":"2776:95:13","statements":[{"expression":{"arguments":[{"id":2981,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"2809:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2982,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2816:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"2825:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2984,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2844:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2825:34:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2980,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"2800:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"ExpressionStatement","src":"2800:60:13"}]},{"expression":{"hexValue":"74727565","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2888:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2960,"id":2990,"nodeType":"Return","src":"2881:11:13"}]},"functionSelector":"a457c2d7","id":2992,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"2481:17:13","nodeType":"FunctionDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"spender","nameLocation":"2507:7:13","nodeType":"VariableDeclaration","scope":2992,"src":"2499:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"subtractedValue","nameLocation":"2524:15:13","nodeType":"VariableDeclaration","scope":2992,"src":"2516:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2516:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2498:42:13"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2992,"src":"2565:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2958,"name":"bool","nodeType":"ElementaryTypeName","src":"2565:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2564:6:13"},"scope":3301,"src":"2472:427:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3067,"nodeType":"Block","src":"3013:543:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"3031:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3047:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3039:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"3039:7:13","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3039:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3031:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3051:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":3001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3023:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3023:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3010,"nodeType":"ExpressionStatement","src":"3023:68:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3109:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3123:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3115:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3013,"name":"address","nodeType":"ElementaryTypeName","src":"3115:7:13","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3115:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3109:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3127:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":3011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3101:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3101:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3020,"nodeType":"ExpressionStatement","src":"3101:64:13"},{"expression":{"arguments":[{"id":3022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"3197:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3023,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3203:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3024,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3207:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3021,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"3176:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3176:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3026,"nodeType":"ExpressionStatement","src":"3176:38:13"},{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"fromBalance","nameLocation":"3233:11:13","nodeType":"VariableDeclaration","scope":3067,"src":"3225:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3032,"initialValue":{"baseExpression":{"id":3029,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"3247:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3031,"indexExpression":{"id":3030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"3257:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3247:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3225:37:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"3280:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3035,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3295:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3280:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3303:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":3033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3272:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3272:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"ExpressionStatement","src":"3272:72:13"},{"id":3048,"nodeType":"UncheckedBlock","src":"3354:73:13","statements":[{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3040,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"3378:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3042,"indexExpression":{"id":3041,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"3388:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3378:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"3396:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3044,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3410:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3396:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3378:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ExpressionStatement","src":"3378:38:13"}]},{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3049,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"3436:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3051,"indexExpression":{"id":3050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3446:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3436:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3052,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3453:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3436:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ExpressionStatement","src":"3436:23:13"},{"eventCall":{"arguments":[{"id":3056,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"3484:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3057,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3490:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3494:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3055,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3475:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3475:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3060,"nodeType":"EmitStatement","src":"3470:31:13"},{"expression":{"arguments":[{"id":3062,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"3532:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3063,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3538:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3064,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3542:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3061,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"3512:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3512:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3066,"nodeType":"ExpressionStatement","src":"3512:37:13"}]},"id":3068,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"2914:9:13","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"from","nameLocation":"2941:4:13","nodeType":"VariableDeclaration","scope":3068,"src":"2933:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"to","nameLocation":"2963:2:13","nodeType":"VariableDeclaration","scope":3068,"src":"2955:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"2955:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"amount","nameLocation":"2983:6:13","nodeType":"VariableDeclaration","scope":3068,"src":"2975:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"2975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2923:72:13"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[],"src":"3013:0:13"},"scope":3301,"src":"2905:651:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3122,"nodeType":"Block","src":"3627:324:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3645:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3664:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3656:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"3656:7:13","typeDescriptions":{}}},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3656:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3668:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":3075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3637:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3637:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3084,"nodeType":"ExpressionStatement","src":"3637:65:13"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3742:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3734:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:13","typeDescriptions":{}}},"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3090,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3746:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3091,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"3755:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3085,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"3713:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3713:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3093,"nodeType":"ExpressionStatement","src":"3713:49:13"},{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"3773:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3095,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"3789:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3773:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"3773:22:13"},{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3098,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"3805:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3100,"indexExpression":{"id":3099,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3815:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3101,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"3827:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3103,"nodeType":"ExpressionStatement","src":"3805:28:13"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3865:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"3857:7:13","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3857:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3109,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3869:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3110,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"3878:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3848:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3848:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3112,"nodeType":"EmitStatement","src":"3843:42:13"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3924:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"3916:7:13","typeDescriptions":{}}},"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3916:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3118,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3928:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3119,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"3937:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3113,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"3896:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3121,"nodeType":"ExpressionStatement","src":"3896:48:13"}]},"id":3123,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"3571:5:13","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"account","nameLocation":"3585:7:13","nodeType":"VariableDeclaration","scope":3123,"src":"3577:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"3577:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"amount","nameLocation":"3602:6:13","nodeType":"VariableDeclaration","scope":3123,"src":"3594:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"3594:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3576:33:13"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[],"src":"3627:0:13"},"scope":3301,"src":"3562:389:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3193,"nodeType":"Block","src":"4022:511:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4040:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4051:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"4051:7:13","typeDescriptions":{}}},"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4051:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4040:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4063:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":3130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4032:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4032:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3139,"nodeType":"ExpressionStatement","src":"4032:67:13"},{"expression":{"arguments":[{"id":3141,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4131:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4148:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4140:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"4140:7:13","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4140:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3146,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4152:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3140,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"4110:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4110:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"ExpressionStatement","src":"4110:49:13"},{"assignments":[3150],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"accountBalance","nameLocation":"4178:14:13","nodeType":"VariableDeclaration","scope":3193,"src":"4170:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"4170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3154,"initialValue":{"baseExpression":{"id":3151,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"4195:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3153,"indexExpression":{"id":3152,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4205:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4195:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4170:43:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"4231:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3157,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4249:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4231:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4257:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":3155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4223:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4223:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3161,"nodeType":"ExpressionStatement","src":"4223:71:13"},{"id":3170,"nodeType":"UncheckedBlock","src":"4304:79:13","statements":[{"expression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3162,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"4328:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3164,"indexExpression":{"id":3163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4338:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4328:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"4349:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3166,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4366:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4349:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4328:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3169,"nodeType":"ExpressionStatement","src":"4328:44:13"}]},{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3171,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"4392:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3172,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4408:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4392:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3174,"nodeType":"ExpressionStatement","src":"4392:22:13"},{"eventCall":{"arguments":[{"id":3176,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4439:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4456:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4448:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:13","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4448:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4460:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3175,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4430:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4430:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"EmitStatement","src":"4425:42:13"},{"expression":{"arguments":[{"id":3185,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4498:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4515:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4507:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"4507:7:13","typeDescriptions":{}}},"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4507:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3190,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4519:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3184,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"4478:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4478:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3192,"nodeType":"ExpressionStatement","src":"4478:48:13"}]},"id":3194,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"3966:5:13","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"account","nameLocation":"3980:7:13","nodeType":"VariableDeclaration","scope":3194,"src":"3972:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3124,"name":"address","nodeType":"ElementaryTypeName","src":"3972:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"amount","nameLocation":"3997:6:13","nodeType":"VariableDeclaration","scope":3194,"src":"3989:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3989:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3971:33:13"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[],"src":"4022:0:13"},"scope":3301,"src":"3957:576:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"4652:257:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4670:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4687:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4679:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"4679:7:13","typeDescriptions":{}}},"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4679:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4670:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4691:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":3203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4662:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4662:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3212,"nodeType":"ExpressionStatement","src":"4662:68:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3214,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"4748:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4759:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"4759:7:13","typeDescriptions":{}}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4759:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4748:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4771:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":3213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4740:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3222,"nodeType":"ExpressionStatement","src":"4740:68:13"},{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3223,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4819:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3226,"indexExpression":{"id":3224,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4831:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4819:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3227,"indexExpression":{"id":3225,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"4838:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4819:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3228,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"4849:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4819:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"4819:36:13"},{"eventCall":{"arguments":[{"id":3232,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4879:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3233,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"4886:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3234,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"4895:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3231,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"4870:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4870:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3236,"nodeType":"EmitStatement","src":"4865:37:13"}]},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"4548:8:13","nodeType":"FunctionDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"owner","nameLocation":"4574:5:13","nodeType":"VariableDeclaration","scope":3238,"src":"4566:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"4566:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"spender","nameLocation":"4597:7:13","nodeType":"VariableDeclaration","scope":3238,"src":"4589:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3197,"name":"address","nodeType":"ElementaryTypeName","src":"4589:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"amount","nameLocation":"4622:6:13","nodeType":"VariableDeclaration","scope":3238,"src":"4614:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4614:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4556:78:13"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[],"src":"4652:0:13"},"scope":3301,"src":"4539:370:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3279,"nodeType":"Block","src":"5035:321:13","statements":[{"assignments":[3248],"declarations":[{"constant":false,"id":3248,"mutability":"mutable","name":"currentAllowance","nameLocation":"5053:16:13","nodeType":"VariableDeclaration","scope":3279,"src":"5045:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3253,"initialValue":{"arguments":[{"id":3250,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"5082:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3251,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5089:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3249,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"5072:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5072:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5045:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3254,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5111:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5136:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"5136:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5131:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5131:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5131:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5111:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3278,"nodeType":"IfStatement","src":"5107:243:13","trueBody":{"id":3277,"nodeType":"Block","src":"5150:200:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3262,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5172:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3263,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5192:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5172:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":3261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5164:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5164:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3267,"nodeType":"ExpressionStatement","src":"5164:68:13"},{"id":3276,"nodeType":"UncheckedBlock","src":"5246:94:13","statements":[{"expression":{"arguments":[{"id":3269,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"5283:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3270,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5290:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5299:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3272,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5318:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5299:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3268,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"5274:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5274:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3275,"nodeType":"ExpressionStatement","src":"5274:51:13"}]}]}}]},"id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"4924:15:13","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"owner","nameLocation":"4957:5:13","nodeType":"VariableDeclaration","scope":3280,"src":"4949:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"4949:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"spender","nameLocation":"4980:7:13","nodeType":"VariableDeclaration","scope":3280,"src":"4972:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"4972:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"amount","nameLocation":"5005:6:13","nodeType":"VariableDeclaration","scope":3280,"src":"4997:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"4997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4939:78:13"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[],"src":"5035:0:13"},"scope":3301,"src":"4915:441:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"5481:2:13","statements":[]},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"5371:20:13","nodeType":"FunctionDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"from","nameLocation":"5409:4:13","nodeType":"VariableDeclaration","scope":3290,"src":"5401:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3281,"name":"address","nodeType":"ElementaryTypeName","src":"5401:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"to","nameLocation":"5431:2:13","nodeType":"VariableDeclaration","scope":3290,"src":"5423:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"5423:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"amount","nameLocation":"5451:6:13","nodeType":"VariableDeclaration","scope":3290,"src":"5443:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5443:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5391:72:13"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[],"src":"5481:0:13"},"scope":3301,"src":"5362:121:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3299,"nodeType":"Block","src":"5607:2:13","statements":[]},"id":3300,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"5498:19:13","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"from","nameLocation":"5535:4:13","nodeType":"VariableDeclaration","scope":3300,"src":"5527:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"5527:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"to","nameLocation":"5557:2:13","nodeType":"VariableDeclaration","scope":3300,"src":"5549:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"5549:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"amount","nameLocation":"5577:6:13","nodeType":"VariableDeclaration","scope":3300,"src":"5569:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5517:72:13"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[],"src":"5607:0:13"},"scope":3301,"src":"5489:120:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3302,"src":"244:5367:13","usedErrors":[]}],"src":"33:5579:13"},"id":13}},"contracts":{"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"devdoc":{"details":"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d3dfa2703d949ebbe95d6f8569f1094c711898b6b292822b6016aaf81e12f764736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD3 0xDF LOG2 PUSH17 0x3D949EBBE95D6F8569F1094C711898B6B2 SWAP3 DUP3 0x2B PUSH1 0x16 0xAA 0xF8 0x1E SLT 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"755:2946:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:2946:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d3dfa2703d949ebbe95d6f8569f1094c711898b6b292822b6016aaf81e12f764736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD3 0xDF LOG2 PUSH17 0x3D949EBBE95D6F8569F1094C711898B6B2 SWAP3 DUP3 0x2B PUSH1 0x16 0xAA 0xF8 0x1E SLT 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"755:2946:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"clone(address)":"infinite","cloneDeterministic(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":86,"contract":"@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":89,"contract":"@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":241,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064da0d4d7cb7d5a849d6f8b4147d95c08e9c043138ecccb08c9e48206a5c478264736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xDA0D4D7CB7 0xD5 0xA8 0x49 0xD6 0xF8 0xB4 EQ PUSH30 0x95C08E9C043138ECCCB08C9E48206A5C478264736F6C6343000806003300 ","sourceMap":"707:3748:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064da0d4d7cb7d5a849d6f8b4147d95c08e9c043138ecccb08c9e48206a5c478264736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xDA0D4D7CB7 0xD5 0xA8 0x49 0xD6 0xF8 0xB4 EQ PUSH30 0x95C08E9C043138ECCCB08C9E48206A5C478264736F6C6343000806003300 ","sourceMap":"707:3748:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a503daeb732dddaf0cbf846dca29bcc9ccf0f0dfdffb7110eb7c8d3c0fc3190964736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SUB 0xDA 0xEB PUSH20 0x2DDDAF0CBF846DCA29BCC9CCF0F0DFDFFB7110EB PUSH29 0x8D3C0FC3190964736F6C63430008060033000000000000000000000000 ","sourceMap":"194:8111:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a503daeb732dddaf0cbf846dca29bcc9ccf0f0dfdffb7110eb7c8d3c0fc3190964736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SUB 0xDA 0xEB PUSH20 0x2DDDAF0CBF846DCA29BCC9CCF0F0DFDFFB7110EB PUSH29 0x8D3C0FC3190964736F6C63430008060033000000000000000000000000 ","sourceMap":"194:8111:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"devdoc":{"details":"These functions deal with verification of Merkle Tree proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000a1c49a51196b71a65c5f15eb797658b926629bdce00e7e9937279f804d4fb664736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP LOG1 0xC4 SWAP11 MLOAD NOT PUSH12 0x71A65C5F15EB797658B92662 SWAP12 0xDC 0xE0 0xE PUSH31 0x9937279F804D4FB664736F6C63430008060033000000000000000000000000 ","sourceMap":"799:7671:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;799:7671:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000a1c49a51196b71a65c5f15eb797658b926629bdce00e7e9937279f804d4fb664736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP LOG1 0xC4 SWAP11 MLOAD NOT PUSH12 0x71A65C5F15EB797658B92662 SWAP12 0xDC 0xE0 0xE PUSH31 0x9937279F804D4FB664736F6C63430008060033000000000000000000000000 ","sourceMap":"799:7671:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_efficientHash(bytes32,bytes32)":"infinite","_hashPair(bytes32,bytes32)":"infinite","multiProofVerify(bytes32[] memory,bool[] memory,bytes32,bytes32[] memory)":"infinite","multiProofVerifyCalldata(bytes32[] calldata,bool[] calldata,bytes32,bytes32[] memory)":"infinite","processMultiProof(bytes32[] memory,bool[] memory,bytes32[] memory)":"infinite","processMultiProofCalldata(bytes32[] calldata,bool[] calldata,bytes32[] memory)":"infinite","processProof(bytes32[] memory,bytes32)":"infinite","processProofCalldata(bytes32[] calldata,bytes32)":"infinite","verify(bytes32[] memory,bytes32,bytes32)":"infinite","verifyCalldata(bytes32[] calldata,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The proofs can be generated using the JavaScript library\\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\\n *\\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the merkle tree could be reinterpreted as a leaf value.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(\\n        bytes32[] memory proof,\\n        bytes32 root,\\n        bytes32 leaf\\n    ) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function verifyCalldata(\\n        bytes32[] calldata proof,\\n        bytes32 root,\\n        bytes32 leaf\\n    ) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\\n     * consuming from one or the other at each step according to the instructions given by\\n     * `proofFlags`.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proof.length - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value for the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            return hashes[totalHashes - 1];\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proof.length - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value for the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            return hashes[totalHashes - 1];\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Campaign.sol":{"Campaign":{"abi":[{"inputs":[{"internalType":"uint256","name":"blockTime","type":"uint256"}],"name":"ChallengePeriodActive","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"NoAssetsToWithdraw","type":"error"},{"inputs":[],"name":"NoRewardAvailable","type":"error"},{"inputs":[],"name":"NotIfCampaignCancelled","type":"error"},{"inputs":[],"name":"NotIfCampaignLocked","type":"error"},{"inputs":[],"name":"OnlyAdmin","type":"error"},{"inputs":[{"internalType":"uint256","name":"blockTime","type":"uint256"}],"name":"OnlyInChallengePeriod","type":"error"},{"inputs":[],"name":"OnlyOracle","type":"error"},{"inputs":[{"internalType":"uint256","name":"blockTime","type":"uint256"}],"name":"ProposeWindowNotActive","type":"error"},{"inputs":[],"name":"WithdrawalNotAllowed","type":"error"},{"anonymous":false,"inputs":[],"name":"CampaignCancelled","type":"event"},{"anonymous":false,"inputs":[],"name":"Challenge","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"share","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"},{"indexed":false,"internalType":"address","name":"assset","type":"address"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"asset","type":"address"}],"name":"Fund","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"locked","type":"bool"}],"name":"SharesLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"sharesMerkleRoot","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"sharesUri","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"activationTime","type":"uint256"}],"name":"SharesMerkleRootUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"asset","type":"address"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ACTIVATION_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ACTIVE_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CHALLENGE_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOTAL_SHARES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activationTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"approvedMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"balanceOfAsset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"campaignCancelled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cancelCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"challenge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkMerkleRootUpdateAllowed","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"address","name":"target","type":"address"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deployTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"fund","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getValidRoot","outputs":[{"internalType":"bytes32","name":"root","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_rewardRulesetUri","type":"bytes32"},{"internalType":"address","name":"_admin","type":"address"},{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"uint256","name":"_activationTime","type":"uint256"},{"internalType":"uint256","name":"_CHALLENGE_PERIOD","type":"uint256"},{"internalType":"uint256","name":"_ACTIVATION_PERIOD","type":"uint256"},{"internalType":"uint256","name":"_ACTIVE_DURATION","type":"uint256"}],"name":"initCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isChallengePeriod","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPendingActive","outputs":[{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isProposeWindowActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_sharesMerkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"_sharesUri","type":"bytes32"}],"name":"proposeShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"providers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardRulesetUri","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"asset","type":"address"}],"name":"rewardsAvailableToClaimer","outputs":[{"internalType":"uint256","name":"total","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_lock","type":"bool"}],"name":"setSharesLock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sharesLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"totalClaimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"totalProvided","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"totalReceived","outputs":[{"internalType":"uint256","name":"total","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"verifyShares","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"withdrawAssets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"title":"Campaign","version":1},"evm":{"bytecode":{"functionDebugData":{"@_249":{"entryPoint":null,"id":249,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600180556119f8806100246000396000f3fe6080604052600436106101fc5760003560e01c80637cc0cdf21161010d578063a9ec3a1b116100a0578063c3a079ed1161006f578063c3a079ed146105c1578063d2ef7398146105d7578063da4493f6146105ec578063ef5d9ae814610602578063f851a4401461062f57600080fd5b8063a9ec3a1b1461054b578063be8b768614610561578063c1d8994114610581578063c24e4778146105a157600080fd5b80639637f475116100dc5780639637f475146104ea578063977aa88b14610500578063980e784414610516578063a98acb461461052b57600080fd5b80637cc0cdf21461045c5780637dc0d1d01461047657806385e3f997146104ae5780638abb5d22146104ca57600080fd5b80634df9cfb31161019057806375e07c2d1161015f57806375e07c2d146103f45780637a40624b146104095780637b1837de1461041f5780637c99ca6d146104325780637cbb7d5e1461044757600080fd5b80634df9cfb31461037e578063531e050d1461039e57806363a5b88d146103be5780636c4fbc4a146103dd57600080fd5b806327ce11cb116101cc57806327ce11cb146102de5780633e1619401461030b57806340bcf74814610321578063449497281461035957600080fd5b80627c4d511461023d5780630c9cbf0e14610266578063162dfe001461029e57806317b9d05e146102be57600080fd5b3661023857600e54610100900460ff161561022a5760405163a99e45dd60e01b815260040160405180910390fd5b6102363460003361064f565b005b600080fd5b34801561024957600080fd5b5061025360045481565b6040519081526020015b60405180910390f35b34801561027257600080fd5b506102536102813660046115a8565b600d60209081526000928352604080842090915290825290205481565b3480156102aa57600080fd5b506102366102b9366004611641565b610726565b3480156102ca57600080fd5b506102366102d93660046117d1565b6107d9565b3480156102ea57600080fd5b506102536102f936600461158d565b60106020526000908152604090205481565b34801561031757600080fd5b5061025360035481565b34801561032d57600080fd5b5061025361033c3660046115a8565b600f60209081526000928352604080842090915290825290205481565b34801561036557600080fd5b5061036e6108b9565b604051901515815260200161025d565b34801561038a57600080fd5b5061025361039936600461158d565b6108df565b3480156103aa57600080fd5b506102366103b9366004611736565b610911565b3480156103ca57600080fd5b50600e5461036e90610100900460ff1681565b3480156103e957600080fd5b50600754421061036e565b34801561040057600080fd5b50610253610983565b34801561041557600080fd5b5061025360085481565b61023661042d3660046115db565b6109a1565b34801561043e57600080fd5b5061036e610a2c565b34801561045357600080fd5b50610236610a44565b34801561046857600080fd5b50600e5461036e9060ff1681565b34801561048257600080fd5b50600b54610496906001600160a01b031681565b6040516001600160a01b03909116815260200161025d565b3480156104ba57600080fd5b50610253670de0b6b3a764000081565b3480156104d657600080fd5b506102366104e536600461169b565b610a92565b3480156104f657600080fd5b5061025360065481565b34801561050c57600080fd5b5061025360095481565b34801561052257600080fd5b50610236610b53565b34801561053757600080fd5b50610236610546366004611770565b610bb8565b34801561055757600080fd5b5061025360055481565b34801561056d57600080fd5b5061025361057c366004611605565b610d20565b34801561058d57600080fd5b5061025361059c36600461158d565b610d83565b3480156105ad57600080fd5b506102366105bc3660046115a8565b610e17565b3480156105cd57600080fd5b5061025360025481565b3480156105e357600080fd5b50610236610f56565b3480156105f857600080fd5b5061025360075481565b34801561060e57600080fd5b5061025361061d36600461158d565b600c6020526000908152604090205481565b34801561063b57600080fd5b50600a54610496906001600160a01b031681565b6001600160a01b038083166000908152600f6020908152604080832093851683529290529081208054859290610686908490611892565b90915550506001600160a01b038216600090815260106020526040812080548592906106b3908490611892565b90915550506001600160a01b038216156106dc576106dc6001600160a01b038316823086610fd5565b604080518481526001600160a01b0384811660208301528316917fa5e8482b3a4fbac393476288e591dd9316d7304a537b26f9b67167f0ce19750f910160405180910390a2505050565b6000610730610983565b6040516bffffffffffffffffffffffff19606088901b166020820152603481018690529091506000906054016040516020818303038152906040528051906020012090506107b48484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508692508591506110469050565b6107d1576040516309bde33960e01b815260040160405180910390fd5b505050505050565b600b546001600160a01b03163314610804576040516380fee10560e01b815260040160405180910390fd5b600e5460ff161561082857604051634c167e3b60e01b815260040160405180910390fd5b600e54610100900460ff16156108515760405163a99e45dd60e01b815260040160405180910390fd5b610859610a44565b600680546005558290556002546108709042611892565b6007819055604080518481526020810184905280820192909252517f93d244ac7b8f4282b061b1dcb3f543f36f06af40a7bfdefe04fc913ef7ea54f99181900360600190a15050565b6000600454600354600854426108cf91906118dd565b6108d9919061195b565b10905090565b6001600160a01b0381166000908152600c602052604081205461090183610d83565b61090b9190611892565b92915050565b600a546001600160a01b0316331461093c57604051634755657960e01b815260040160405180910390fd5b600e805460ff19168215159081179091556040519081527f161c6403efb8e4c55a592ebbe46f13ba803dd00cb970b735606b6518eb5475ff9060200160405180910390a150565b600061098d610a2c565b610998575060055490565b6006545b905090565b600260015414156109cd5760405162461bcd60e51b81526004016109c49061185b565b60405180910390fd5b6002600155600e54610100900460ff16156109fb5760405163a99e45dd60e01b815260040160405180910390fd5b6001600160a01b038216610a1957610a1434833361064f565b610a24565b610a2481833361064f565b505060018055565b6006546000901580159061099c575050600754421190565b600754421015610a695760405163ddc07f7160e01b81524260048201526024016109c4565b610a716108b9565b610a90576040516303ab46c160e11b81524260048201526024016109c4565b565b60026001541415610ab55760405162461bcd60e51b81526004016109c49061185b565b6002600155600e54610100900460ff1615610ae35760405163a99e45dd60e01b815260040160405180910390fd5b610aef87878787610726565b60005b60ff8116831115610b4557610b33888886868560ff16818110610b1757610b1761199b565b9050602002016020810190610b2c919061158d565b338661105c565b80610b3d8161193b565b915050610af2565b505060018055505050505050565b600a546001600160a01b03163314610b7e57604051634755657960e01b815260040160405180910390fd5b600e805461ff0019166101001790556040517f123d4f203b2b83bfe9f45903402bb88193cc56a43371d97ab5a51bd1817d858690600090a1565b600054610100900460ff1615808015610bd85750600054600160ff909116105b80610bf25750303b158015610bf2575060005460ff166001145b610c555760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109c4565b6000805460ff191660011790558015610c78576000805461ff0019166101001790555b6009889055600a80546001600160a01b03808a166001600160a01b031992831617909255600b80549289169290911691909117905584610cb85742610cba565b845b600755426008556002849055600383905560048290558015610d16576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6001600160a01b038082166000908152600d60209081526040808320938716835292905290812054670de0b6b3a764000084610d5b856108df565b610d6591906118be565b610d6f91906118aa565b610d7991906118dd565b90505b9392505050565b60006001600160a01b03821615610e10576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610dd357600080fd5b505afa158015610de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0b91906117f3565b61090b565b4792915050565b60026001541415610e3a5760405162461bcd60e51b81526004016109c49061185b565b6002600155600e54610100900460ff1615610f3d576001600160a01b03808216600090815260106020908152604080832054600f8352818420948716845293909152812054909190610e8b84610d83565b610e9591906118be565b610e9f91906118aa565b905080610ebf57604051635da3252f60e11b815260040160405180910390fd5b6001600160a01b038083166000908152600f60209081526040808320938716835292905290812055610ef283828461116f565b604080518281526001600160a01b0384811660208301528516917f56c54ba9bd38d8fd62012e42c7ee564519b09763c426d331b3661b537ead19b2910160405180910390a250610a24565b60405163209a769d60e11b815260040160405180910390fd5b600a546001600160a01b03163314610f8157604051634755657960e01b815260040160405180910390fd5b6007544210610fa557604051633e71b1bf60e11b81524260048201526024016109c4565b600060068190556040517fa0f4a9a971d0d41496054a6616f175690f8b322091fcd26dc9e81fc96d4124849190a1565b6040516001600160a01b03808516602483015283166044820152606481018290526110409085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611231565b50505050565b6000826110538584611303565b14949350505050565b6000611069868686610d20565b6001600160a01b038086166000908152600d60209081526040808320938b168352929052908120805492935083929091906110a5908490611892565b90915550506001600160a01b0384166000908152600c6020526040812080548392906110d2908490611892565b90915550506001600160a01b038381169087161480156110fa57506001600160a01b03821615155b1561110f5761110a82828661116f565b61111a565b61111a86828661116f565b60408051868152602081018390526001600160a01b03868116828401529151918816917fb6fe5ce185a3773d47e919f57c7edfd102c91cb7833b2be405c4de89d9980fd79181900360600190a2505050505050565b6001600160a01b038116611218576000836001600160a01b03168360405160006040518083038185875af1925050503d80600081146111ca576040519150601f19603f3d011682016040523d82523d6000602084013e6111cf565b606091505b50509050806110405760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016109c4565b61122c6001600160a01b0382168484611350565b505050565b6000611286826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113809092919063ffffffff16565b80519091501561122c57808060200190518101906112a49190611753565b61122c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109c4565b600081815b845181101561134857611334828683815181106113275761132761199b565b602002602001015161138f565b91508061134081611920565b915050611308565b509392505050565b6040516001600160a01b03831660248201526044810182905261122c90849063a9059cbb60e01b90606401611009565b6060610d7984846000856113bb565b60008183106113ab576000828152602084905260409020610d7c565b5060009182526020526040902090565b60608247101561141c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109c4565b6001600160a01b0385163b6114735760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109c4565b600080866001600160a01b0316858760405161148f919061180c565b60006040518083038185875af1925050503d80600081146114cc576040519150601f19603f3d011682016040523d82523d6000602084013e6114d1565b606091505b50915091506114e18282866114ec565b979650505050505050565b606083156114fb575081610d7c565b82511561150b5782518084602001fd5b8160405162461bcd60e51b81526004016109c49190611828565b80356001600160a01b038116811461153c57600080fd5b919050565b60008083601f84011261155357600080fd5b50813567ffffffffffffffff81111561156b57600080fd5b6020830191508360208260051b850101111561158657600080fd5b9250929050565b60006020828403121561159f57600080fd5b610d7c82611525565b600080604083850312156115bb57600080fd5b6115c483611525565b91506115d260208401611525565b90509250929050565b600080604083850312156115ee57600080fd5b6115f783611525565b946020939093013593505050565b60008060006060848603121561161a57600080fd5b61162384611525565b92506020840135915061163860408501611525565b90509250925092565b6000806000806060858703121561165757600080fd5b61166085611525565b935060208501359250604085013567ffffffffffffffff81111561168357600080fd5b61168f87828801611541565b95989497509550505050565b600080600080600080600060a0888a0312156116b657600080fd5b6116bf88611525565b965060208801359550604088013567ffffffffffffffff808211156116e357600080fd5b6116ef8b838c01611541565b909750955060608a013591508082111561170857600080fd5b506117158a828b01611541565b9094509250611728905060808901611525565b905092959891949750929550565b60006020828403121561174857600080fd5b8135610d7c816119b1565b60006020828403121561176557600080fd5b8151610d7c816119b1565b600080600080600080600060e0888a03121561178b57600080fd5b8735965061179b60208901611525565b95506117a960408901611525565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b600080604083850312156117e457600080fd5b50508035926020909101359150565b60006020828403121561180557600080fd5b5051919050565b6000825161181e8184602087016118f4565b9190910192915050565b60208152600082518060208401526118478160408501602087016118f4565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156118a5576118a561196f565b500190565b6000826118b9576118b9611985565b500490565b60008160001904831182151516156118d8576118d861196f565b500290565b6000828210156118ef576118ef61196f565b500390565b60005b8381101561190f5781810151838201526020016118f7565b838111156110405750506000910152565b60006000198214156119345761193461196f565b5060010190565b600060ff821660ff8114156119525761195261196f565b60010192915050565b60008261196a5761196a611985565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80151581146119bf57600080fd5b5056fea26469706673582212203b2b6641de37c1cab3b07367576eea4d8c76af903c16f2f0e7f5ba573ed1d4f164736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH2 0x19F8 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CC0CDF2 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA9EC3A1B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC3A079ED GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC3A079ED EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xD2EF7398 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xDA4493F6 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xEF5D9AE8 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9EC3A1B EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xBE8B7686 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xC1D89941 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xC24E4778 EQ PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9637F475 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9637F475 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x977AA88B EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x980E7844 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xA98ACB46 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CC0CDF2 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x85E3F997 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x8ABB5D22 EQ PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF9CFB3 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x75E07C2D GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x75E07C2D EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x7A40624B EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x7B1837DE EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x7C99CA6D EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x7CBB7D5E EQ PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF9CFB3 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x531E050D EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x63A5B88D EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x6C4FBC4A EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27CE11CB GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x27CE11CB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x3E161940 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x40BCF748 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x44949728 EQ PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x7C4D51 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC9CBF0E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x162DFE00 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x17B9D05E EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x238 JUMPI PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x236 CALLVALUE PUSH1 0x0 CALLER PUSH2 0x64F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x36E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0x36E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x983 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0xA2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0xA44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x36E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x496 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0xB53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x1770 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0xD20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x496 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x686 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x6DC JUMPI PUSH2 0x6DC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP3 ADDRESS DUP7 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 AND SWAP2 PUSH32 0xA5E8482B3A4FBAC393476288E591DD9316D7304A537B26F9B67167F0CE19750F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x7B4 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP3 POP DUP6 SWAP2 POP PUSH2 0x1046 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH4 0x80FEE105 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C167E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x859 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x5 SSTORE DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x870 SWAP1 TIMESTAMP PUSH2 0x1892 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x93D244AC7B8F4282B061B1DCB3F543F36F06AF40A7BFDEFE04FC913EF7EA54F9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST LT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x901 DUP4 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x161C6403EFB8E4C55A592EBBE46F13BA803DD00CB970B735606B6518EB5475FF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x998 JUMPI POP PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA19 JUMPI PUSH2 0xA14 CALLVALUE DUP4 CALLER PUSH2 0x64F JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xA24 DUP2 DUP4 CALLER PUSH2 0x64F JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x99C JUMPI POP POP PUSH1 0x7 SLOAD TIMESTAMP GT SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDDC07F71 PUSH1 0xE0 SHL DUP2 MSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0xA71 PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB46C1 PUSH1 0xE1 SHL DUP2 MSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEF DUP8 DUP8 DUP8 DUP8 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 AND DUP4 GT ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB33 DUP9 DUP9 DUP7 DUP7 DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0xB17 JUMPI PUSH2 0xB17 PUSH2 0x199B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST CALLER DUP7 PUSH2 0x105C JUMP JUMPDEST DUP1 PUSH2 0xB3D DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x123D4F203B2B83BFE9F45903402BB88193CC56A43371D97AB5A51BD1817D8586 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xBD8 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xBF2 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x9 DUP9 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xB DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 PUSH2 0xCB8 JUMPI TIMESTAMP PUSH2 0xCBA JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x7 SSTORE TIMESTAMP PUSH1 0x8 SSTORE PUSH1 0x2 DUP5 SWAP1 SSTORE PUSH1 0x3 DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0xD5B DUP6 PUSH2 0x8DF JUMP JUMPDEST PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE0B SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST SELFBALANCE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF3D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xF DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE SWAP4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xE8B DUP5 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5DA3252F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE PUSH2 0xEF2 DUP4 DUP3 DUP5 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND SWAP2 PUSH32 0x56C54BA9BD38D8FD62012E42C7EE564519B09763C426D331B3661B537EAD19B2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x209A769D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E71B1BF PUSH1 0xE1 SHL DUP2 MSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA0F4A9A971D0D41496054A6616F175690F8B322091FCD26DC9E81FC96D412484 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1040 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1231 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1053 DUP6 DUP5 PUSH2 0x1303 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1069 DUP7 DUP7 DUP7 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP12 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x10A5 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x10D2 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 DUP8 AND EQ DUP1 ISZERO PUSH2 0x10FA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x110F JUMPI PUSH2 0x110A DUP3 DUP3 DUP7 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST PUSH2 0x111A DUP7 DUP3 DUP7 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 DUP5 ADD MSTORE SWAP2 MLOAD SWAP2 DUP9 AND SWAP2 PUSH32 0xB6FE5CE185A3773D47E919F57C7EDFD102C91CB7833B2BE405C4DE89D9980FD7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1218 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x195D1A195C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0x122C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 DUP5 PUSH2 0x1350 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1286 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1380 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x122C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1334 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1327 JUMPI PUSH2 0x1327 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x138F JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1340 DUP2 PUSH2 0x1920 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1308 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x122C SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD79 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x13AB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD7C JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x141C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14E1 DUP3 DUP3 DUP7 PUSH2 0x14EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x14FB JUMPI POP DUP2 PUSH2 0xD7C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x150B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP3 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C4 DUP4 PUSH2 0x1525 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D2 PUSH1 0x20 DUP5 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F7 DUP4 PUSH2 0x1525 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1623 DUP5 PUSH2 0x1525 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1638 PUSH1 0x40 DUP6 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1660 DUP6 PUSH2 0x1525 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168F DUP8 DUP3 DUP9 ADD PUSH2 0x1541 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BF DUP9 PUSH2 0x1525 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16EF DUP12 DUP4 DUP13 ADD PUSH2 0x1541 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1715 DUP11 DUP3 DUP12 ADD PUSH2 0x1541 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1728 SWAP1 POP PUSH1 0x80 DUP10 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD7C DUP2 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD7C DUP2 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x178B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH2 0x179B PUSH1 0x20 DUP10 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP6 POP PUSH2 0x17A9 PUSH1 0x40 DUP10 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP6 SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SWAP6 POP PUSH1 0xC0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x181E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x18F4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1847 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A5 PUSH2 0x196F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18B9 JUMPI PUSH2 0x18B9 PUSH2 0x1985 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18D8 JUMPI PUSH2 0x18D8 PUSH2 0x196F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EF PUSH2 0x196F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18F7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1040 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1934 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1952 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x196A JUMPI PUSH2 0x196A PUSH2 0x1985 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x2B PUSH7 0x41DE37C1CAB3B0 PUSH20 0x67576EEA4D8C76AF903C16F2F0E7F5BA573ED1D4 CALL PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"405:11112:10:-:0;;;;;;;;;;;;-1:-1:-1;1701:1:2;1806:22;;405:11112:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ACTIVATION_PERIOD_1535":{"entryPoint":null,"id":1535,"parameterSlots":0,"returnSlots":0},"@ACTIVE_DURATION_1537":{"entryPoint":null,"id":1537,"parameterSlots":0,"returnSlots":0},"@CHALLENGE_PERIOD_1533":{"entryPoint":null,"id":1533,"parameterSlots":0,"returnSlots":0},"@TOTAL_SHARES_1531":{"entryPoint":null,"id":1531,"parameterSlots":0,"returnSlots":0},"@_2024":{"entryPoint":null,"id":2024,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_689":{"entryPoint":4657,"id":689,"parameterSlots":2,"returnSlots":0},"@_claim_2300":{"entryPoint":4188,"id":2300,"parameterSlots":5,"returnSlots":0},"@_efficientHash_1508":{"entryPoint":null,"id":1508,"parameterSlots":2,"returnSlots":1},"@_fund_2353":{"entryPoint":1615,"id":2353,"parameterSlots":3,"returnSlots":0},"@_hashPair_1497":{"entryPoint":5007,"id":1497,"parameterSlots":2,"returnSlots":1},"@activationTime_1544":{"entryPoint":null,"id":1544,"parameterSlots":0,"returnSlots":0},"@admin_1551":{"entryPoint":null,"id":1551,"parameterSlots":0,"returnSlots":0},"@approvedMerkleRoot_1539":{"entryPoint":null,"id":1539,"parameterSlots":0,"returnSlots":0},"@balanceOfAsset_2055":{"entryPoint":3459,"id":2055,"parameterSlots":1,"returnSlots":1},"@campaignCancelled_1571":{"entryPoint":null,"id":1571,"parameterSlots":0,"returnSlots":0},"@cancelCampaign_1944":{"entryPoint":2899,"id":1944,"parameterSlots":0,"returnSlots":0},"@challenge_1913":{"entryPoint":3926,"id":1913,"parameterSlots":0,"returnSlots":0},"@checkMerkleRootUpdateAllowed_2231":{"entryPoint":2628,"id":2231,"parameterSlots":0,"returnSlots":0},"@claim_1886":{"entryPoint":2706,"id":1886,"parameterSlots":7,"returnSlots":0},"@claimed_1565":{"entryPoint":null,"id":1565,"parameterSlots":0,"returnSlots":0},"@deployTime_1546":{"entryPoint":null,"id":1546,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_849":{"entryPoint":5051,"id":849,"parameterSlots":4,"returnSlots":1},"@functionCall_779":{"entryPoint":4992,"id":779,"parameterSlots":3,"returnSlots":1},"@fund_1796":{"entryPoint":2465,"id":1796,"parameterSlots":2,"returnSlots":0},"@getValidRoot_2155":{"entryPoint":2435,"id":2155,"parameterSlots":0,"returnSlots":1},"@initCampaign_1759":{"entryPoint":3000,"id":1759,"parameterSlots":7,"returnSlots":0},"@isChallengePeriod_2184":{"entryPoint":null,"id":2184,"parameterSlots":0,"returnSlots":1},"@isContract_708":{"entryPoint":null,"id":708,"parameterSlots":1,"returnSlots":1},"@isPendingActive_2142":{"entryPoint":2604,"id":2142,"parameterSlots":0,"returnSlots":1},"@isProposeWindowActive_2207":{"entryPoint":2233,"id":2207,"parameterSlots":0,"returnSlots":1},"@oracle_1553":{"entryPoint":null,"id":1553,"parameterSlots":0,"returnSlots":0},"@pendingMerkleRoot_1542":{"entryPoint":null,"id":1542,"parameterSlots":0,"returnSlots":0},"@processProof_1092":{"entryPoint":4867,"id":1092,"parameterSlots":2,"returnSlots":1},"@proposeShares_1835":{"entryPoint":2009,"id":1835,"parameterSlots":2,"returnSlots":0},"@providers_1578":{"entryPoint":null,"id":1578,"parameterSlots":0,"returnSlots":0},"@rewardRulesetUri_1549":{"entryPoint":null,"id":1549,"parameterSlots":0,"returnSlots":0},"@rewardsAvailableToClaimer_2123":{"entryPoint":3360,"id":2123,"parameterSlots":3,"returnSlots":1},"@safeTransferFrom_467":{"entryPoint":4053,"id":467,"parameterSlots":4,"returnSlots":0},"@safeTransfer_441":{"entryPoint":4944,"id":441,"parameterSlots":3,"returnSlots":0},"@setSharesLock_1930":{"entryPoint":2321,"id":1930,"parameterSlots":1,"returnSlots":0},"@sharesLocked_1568":{"entryPoint":null,"id":1568,"parameterSlots":0,"returnSlots":0},"@totalClaimed_1558":{"entryPoint":null,"id":1558,"parameterSlots":0,"returnSlots":0},"@totalProvided_1583":{"entryPoint":null,"id":1583,"parameterSlots":0,"returnSlots":0},"@totalReceived_2172":{"entryPoint":2271,"id":2172,"parameterSlots":1,"returnSlots":1},"@transferAssetOut_2394":{"entryPoint":4463,"id":2394,"parameterSlots":3,"returnSlots":0},"@verifyCallResult_984":{"entryPoint":5356,"id":984,"parameterSlots":3,"returnSlots":1},"@verifyShares_2095":{"entryPoint":1830,"id":2095,"parameterSlots":4,"returnSlots":0},"@verify_1031":{"entryPoint":4166,"id":1031,"parameterSlots":3,"returnSlots":1},"@withdrawAssets_2007":{"entryPoint":3607,"id":2007,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":5413,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":5441,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":5517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5544,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5595,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":5637,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":5697,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_address":{"entryPoint":5787,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bool":{"entryPoint":5942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256":{"entryPoint":6000,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bytes32t_bytes32":{"entryPoint":6097,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256__to_t_bytes32_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3513d540484388c0a9908c86f697c9fd85f7697545de9ce91edbb77b5dec73bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6235,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6290,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6314,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6334,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6365,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":6388,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":6432,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint8":{"entryPoint":6459,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":6491,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6511,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6533,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6555,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":6577,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12568:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:14","statements":[{"nodeType":"YulAssignment","src":"73:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:14"},"nodeType":"YulFunctionCall","src":"82:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"}]},{"body":{"nodeType":"YulBlock","src":"165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:14"},"nodeType":"YulFunctionCall","src":"167:12:14"},"nodeType":"YulExpressionStatement","src":"167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:14"},"nodeType":"YulFunctionCall","src":"142:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:14"},"nodeType":"YulFunctionCall","src":"131:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:14"},"nodeType":"YulFunctionCall","src":"121:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:14"},"nodeType":"YulFunctionCall","src":"114:50:14"},"nodeType":"YulIf","src":"111:2:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:14","type":""}],"src":"14:173:14"},{"body":{"nodeType":"YulBlock","src":"276:283:14","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:14"},"nodeType":"YulFunctionCall","src":"327:12:14"},"nodeType":"YulExpressionStatement","src":"327:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"304:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"300:3:14"},"nodeType":"YulFunctionCall","src":"300:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"319:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"296:3:14"},"nodeType":"YulFunctionCall","src":"296:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"289:6:14"},"nodeType":"YulFunctionCall","src":"289:35:14"},"nodeType":"YulIf","src":"286:2:14"},{"nodeType":"YulAssignment","src":"350:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"373:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"360:12:14"},"nodeType":"YulFunctionCall","src":"360:20:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"350:6:14"}]},{"body":{"nodeType":"YulBlock","src":"423:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"432:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"435:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"425:6:14"},"nodeType":"YulFunctionCall","src":"425:12:14"},"nodeType":"YulExpressionStatement","src":"425:12:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"395:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"403:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"392:2:14"},"nodeType":"YulFunctionCall","src":"392:30:14"},"nodeType":"YulIf","src":"389:2:14"},{"nodeType":"YulAssignment","src":"448:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"464:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"472:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"460:3:14"},"nodeType":"YulFunctionCall","src":"460:17:14"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"448:8:14"}]},{"body":{"nodeType":"YulBlock","src":"537:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"539:6:14"},"nodeType":"YulFunctionCall","src":"539:12:14"},"nodeType":"YulExpressionStatement","src":"539:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"500:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:14","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"515:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"508:3:14"},"nodeType":"YulFunctionCall","src":"508:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"496:3:14"},"nodeType":"YulFunctionCall","src":"496:27:14"},{"kind":"number","nodeType":"YulLiteral","src":"525:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"492:3:14"},"nodeType":"YulFunctionCall","src":"492:38:14"},{"name":"end","nodeType":"YulIdentifier","src":"532:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"489:2:14"},"nodeType":"YulFunctionCall","src":"489:47:14"},"nodeType":"YulIf","src":"486:2:14"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"239:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"247:3:14","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"255:8:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"265:6:14","type":""}],"src":"192:367:14"},{"body":{"nodeType":"YulBlock","src":"634:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"680:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"689:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"692:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"682:6:14"},"nodeType":"YulFunctionCall","src":"682:12:14"},"nodeType":"YulExpressionStatement","src":"682:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"655:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"664:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"651:3:14"},"nodeType":"YulFunctionCall","src":"651:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"676:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"647:3:14"},"nodeType":"YulFunctionCall","src":"647:32:14"},"nodeType":"YulIf","src":"644:2:14"},{"nodeType":"YulAssignment","src":"705:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"734:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"715:18:14"},"nodeType":"YulFunctionCall","src":"715:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"705:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"600:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"611:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"623:6:14","type":""}],"src":"564:186:14"},{"body":{"nodeType":"YulBlock","src":"842:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"888:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"897:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"900:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"890:6:14"},"nodeType":"YulFunctionCall","src":"890:12:14"},"nodeType":"YulExpressionStatement","src":"890:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"863:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"872:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"859:3:14"},"nodeType":"YulFunctionCall","src":"859:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"884:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"855:3:14"},"nodeType":"YulFunctionCall","src":"855:32:14"},"nodeType":"YulIf","src":"852:2:14"},{"nodeType":"YulAssignment","src":"913:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"942:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"923:18:14"},"nodeType":"YulFunctionCall","src":"923:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"913:6:14"}]},{"nodeType":"YulAssignment","src":"961:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"990:3:14"},"nodeType":"YulFunctionCall","src":"990:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"971:18:14"},"nodeType":"YulFunctionCall","src":"971:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"961:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"800:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"811:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"823:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"831:6:14","type":""}],"src":"755:260:14"},{"body":{"nodeType":"YulBlock","src":"1107:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"1153:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1162:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1165:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1155:6:14"},"nodeType":"YulFunctionCall","src":"1155:12:14"},"nodeType":"YulExpressionStatement","src":"1155:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1128:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1137:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1124:3:14"},"nodeType":"YulFunctionCall","src":"1124:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1149:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1120:3:14"},"nodeType":"YulFunctionCall","src":"1120:32:14"},"nodeType":"YulIf","src":"1117:2:14"},{"nodeType":"YulAssignment","src":"1178:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1207:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1188:18:14"},"nodeType":"YulFunctionCall","src":"1188:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1178:6:14"}]},{"nodeType":"YulAssignment","src":"1226:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1264:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:14"},"nodeType":"YulFunctionCall","src":"1249:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1236:12:14"},"nodeType":"YulFunctionCall","src":"1236:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1065:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1076:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1088:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1096:6:14","type":""}],"src":"1020:254:14"},{"body":{"nodeType":"YulBlock","src":"1383:224:14","statements":[{"body":{"nodeType":"YulBlock","src":"1429:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1438:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1441:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1431:6:14"},"nodeType":"YulFunctionCall","src":"1431:12:14"},"nodeType":"YulExpressionStatement","src":"1431:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1404:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1413:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1400:3:14"},"nodeType":"YulFunctionCall","src":"1400:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1425:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1396:3:14"},"nodeType":"YulFunctionCall","src":"1396:32:14"},"nodeType":"YulIf","src":"1393:2:14"},{"nodeType":"YulAssignment","src":"1454:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1464:18:14"},"nodeType":"YulFunctionCall","src":"1464:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1454:6:14"}]},{"nodeType":"YulAssignment","src":"1502:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1529:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1540:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1525:3:14"},"nodeType":"YulFunctionCall","src":"1525:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1512:12:14"},"nodeType":"YulFunctionCall","src":"1512:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1502:6:14"}]},{"nodeType":"YulAssignment","src":"1553:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1586:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1597:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:14"},"nodeType":"YulFunctionCall","src":"1563:38:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1553:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1333:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1344:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1356:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1364:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1372:6:14","type":""}],"src":"1279:328:14"},{"body":{"nodeType":"YulBlock","src":"1751:440:14","statements":[{"body":{"nodeType":"YulBlock","src":"1797:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1806:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1809:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1799:6:14"},"nodeType":"YulFunctionCall","src":"1799:12:14"},"nodeType":"YulExpressionStatement","src":"1799:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1772:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1781:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1768:3:14"},"nodeType":"YulFunctionCall","src":"1768:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1793:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1764:3:14"},"nodeType":"YulFunctionCall","src":"1764:32:14"},"nodeType":"YulIf","src":"1761:2:14"},{"nodeType":"YulAssignment","src":"1822:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1851:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1832:18:14"},"nodeType":"YulFunctionCall","src":"1832:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1822:6:14"}]},{"nodeType":"YulAssignment","src":"1870:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1897:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1908:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1893:3:14"},"nodeType":"YulFunctionCall","src":"1893:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1880:12:14"},"nodeType":"YulFunctionCall","src":"1880:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1870:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1921:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1952:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1963:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1948:3:14"},"nodeType":"YulFunctionCall","src":"1948:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1935:12:14"},"nodeType":"YulFunctionCall","src":"1935:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1925:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2010:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:14"},"nodeType":"YulFunctionCall","src":"2012:12:14"},"nodeType":"YulExpressionStatement","src":"2012:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1982:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1990:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1979:2:14"},"nodeType":"YulFunctionCall","src":"1979:30:14"},"nodeType":"YulIf","src":"1976:2:14"},{"nodeType":"YulVariableDeclaration","src":"2035:96:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2103:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2114:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2099:3:14"},"nodeType":"YulFunctionCall","src":"2099:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2123:7:14"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"2061:37:14"},"nodeType":"YulFunctionCall","src":"2061:70:14"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"2039:8:14","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"2049:8:14","type":""}]},{"nodeType":"YulAssignment","src":"2140:18:14","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2150:8:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2140:6:14"}]},{"nodeType":"YulAssignment","src":"2167:18:14","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2177:8:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2167:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1693:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1704:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1716:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1724:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1732:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1740:6:14","type":""}],"src":"1612:579:14"},{"body":{"nodeType":"YulBlock","src":"2404:783:14","statements":[{"body":{"nodeType":"YulBlock","src":"2451:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2460:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2463:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2453:6:14"},"nodeType":"YulFunctionCall","src":"2453:12:14"},"nodeType":"YulExpressionStatement","src":"2453:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2425:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2421:3:14"},"nodeType":"YulFunctionCall","src":"2421:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2446:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2417:3:14"},"nodeType":"YulFunctionCall","src":"2417:33:14"},"nodeType":"YulIf","src":"2414:2:14"},{"nodeType":"YulAssignment","src":"2476:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2505:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2486:18:14"},"nodeType":"YulFunctionCall","src":"2486:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2476:6:14"}]},{"nodeType":"YulAssignment","src":"2524:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2551:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2562:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:14"},"nodeType":"YulFunctionCall","src":"2547:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2534:12:14"},"nodeType":"YulFunctionCall","src":"2534:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2524:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2575:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2606:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2617:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:14"},"nodeType":"YulFunctionCall","src":"2602:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2589:12:14"},"nodeType":"YulFunctionCall","src":"2589:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2579:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2630:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2640:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2634:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2685:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2694:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2697:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2687:6:14"},"nodeType":"YulFunctionCall","src":"2687:12:14"},"nodeType":"YulExpressionStatement","src":"2687:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2673:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2681:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2670:2:14"},"nodeType":"YulFunctionCall","src":"2670:14:14"},"nodeType":"YulIf","src":"2667:2:14"},{"nodeType":"YulVariableDeclaration","src":"2710:96:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2778:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2789:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2774:3:14"},"nodeType":"YulFunctionCall","src":"2774:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2798:7:14"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"2736:37:14"},"nodeType":"YulFunctionCall","src":"2736:70:14"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"2714:8:14","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"2724:8:14","type":""}]},{"nodeType":"YulAssignment","src":"2815:18:14","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2825:8:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2815:6:14"}]},{"nodeType":"YulAssignment","src":"2842:18:14","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2852:8:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2842:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2869:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2902:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2913:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2898:3:14"},"nodeType":"YulFunctionCall","src":"2898:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2885:12:14"},"nodeType":"YulFunctionCall","src":"2885:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2873:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2946:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:14"},"nodeType":"YulFunctionCall","src":"2948:12:14"},"nodeType":"YulExpressionStatement","src":"2948:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2932:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2942:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2929:2:14"},"nodeType":"YulFunctionCall","src":"2929:16:14"},"nodeType":"YulIf","src":"2926:2:14"},{"nodeType":"YulVariableDeclaration","src":"2971:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3039:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3050:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3035:3:14"},"nodeType":"YulFunctionCall","src":"3035:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3061:7:14"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"2997:37:14"},"nodeType":"YulFunctionCall","src":"2997:72:14"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"2975:8:14","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"2985:8:14","type":""}]},{"nodeType":"YulAssignment","src":"3078:18:14","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"3088:8:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3078:6:14"}]},{"nodeType":"YulAssignment","src":"3105:18:14","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"3115:8:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3105:6:14"}]},{"nodeType":"YulAssignment","src":"3132:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3176:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3161:3:14"},"nodeType":"YulFunctionCall","src":"3161:19:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3142:18:14"},"nodeType":"YulFunctionCall","src":"3142:39:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3132:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2322:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2333:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2345:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2353:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2361:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2369:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2377:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2385:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2393:6:14","type":""}],"src":"2196:991:14"},{"body":{"nodeType":"YulBlock","src":"3259:174:14","statements":[{"body":{"nodeType":"YulBlock","src":"3305:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3314:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3317:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3307:6:14"},"nodeType":"YulFunctionCall","src":"3307:12:14"},"nodeType":"YulExpressionStatement","src":"3307:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3280:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3289:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3276:3:14"},"nodeType":"YulFunctionCall","src":"3276:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3301:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3272:3:14"},"nodeType":"YulFunctionCall","src":"3272:32:14"},"nodeType":"YulIf","src":"3269:2:14"},{"nodeType":"YulVariableDeclaration","src":"3330:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3356:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3343:12:14"},"nodeType":"YulFunctionCall","src":"3343:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3334:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3397:5:14"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"3375:21:14"},"nodeType":"YulFunctionCall","src":"3375:28:14"},"nodeType":"YulExpressionStatement","src":"3375:28:14"},{"nodeType":"YulAssignment","src":"3412:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"3422:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3412:6:14"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3225:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3236:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3248:6:14","type":""}],"src":"3192:241:14"},{"body":{"nodeType":"YulBlock","src":"3516:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"3562:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3571:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3574:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3564:6:14"},"nodeType":"YulFunctionCall","src":"3564:12:14"},"nodeType":"YulExpressionStatement","src":"3564:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3537:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3546:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3533:3:14"},"nodeType":"YulFunctionCall","src":"3533:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3558:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3529:3:14"},"nodeType":"YulFunctionCall","src":"3529:32:14"},"nodeType":"YulIf","src":"3526:2:14"},{"nodeType":"YulVariableDeclaration","src":"3587:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3606:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3600:5:14"},"nodeType":"YulFunctionCall","src":"3600:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3591:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3647:5:14"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"3625:21:14"},"nodeType":"YulFunctionCall","src":"3625:28:14"},"nodeType":"YulExpressionStatement","src":"3625:28:14"},{"nodeType":"YulAssignment","src":"3662:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"3672:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3662:6:14"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3482:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3493:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3505:6:14","type":""}],"src":"3438:245:14"},{"body":{"nodeType":"YulBlock","src":"3860:432:14","statements":[{"body":{"nodeType":"YulBlock","src":"3907:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3916:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3919:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3909:6:14"},"nodeType":"YulFunctionCall","src":"3909:12:14"},"nodeType":"YulExpressionStatement","src":"3909:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3881:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3890:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3877:3:14"},"nodeType":"YulFunctionCall","src":"3877:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3902:3:14","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3873:3:14"},"nodeType":"YulFunctionCall","src":"3873:33:14"},"nodeType":"YulIf","src":"3870:2:14"},{"nodeType":"YulAssignment","src":"3932:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3955:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3942:12:14"},"nodeType":"YulFunctionCall","src":"3942:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3932:6:14"}]},{"nodeType":"YulAssignment","src":"3974:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4007:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4018:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4003:3:14"},"nodeType":"YulFunctionCall","src":"4003:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3984:18:14"},"nodeType":"YulFunctionCall","src":"3984:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3974:6:14"}]},{"nodeType":"YulAssignment","src":"4031:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4064:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4075:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:14"},"nodeType":"YulFunctionCall","src":"4060:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4041:18:14"},"nodeType":"YulFunctionCall","src":"4041:38:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4031:6:14"}]},{"nodeType":"YulAssignment","src":"4088:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4115:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4126:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4111:3:14"},"nodeType":"YulFunctionCall","src":"4111:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4098:12:14"},"nodeType":"YulFunctionCall","src":"4098:32:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4088:6:14"}]},{"nodeType":"YulAssignment","src":"4139:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4177:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:14"},"nodeType":"YulFunctionCall","src":"4162:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4149:12:14"},"nodeType":"YulFunctionCall","src":"4149:33:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4139:6:14"}]},{"nodeType":"YulAssignment","src":"4191:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4218:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4229:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4214:3:14"},"nodeType":"YulFunctionCall","src":"4214:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4201:12:14"},"nodeType":"YulFunctionCall","src":"4201:33:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4191:6:14"}]},{"nodeType":"YulAssignment","src":"4243:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4270:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4281:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4266:3:14"},"nodeType":"YulFunctionCall","src":"4266:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4253:12:14"},"nodeType":"YulFunctionCall","src":"4253:33:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4243:6:14"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3778:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3789:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3801:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3809:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3817:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3825:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3833:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3841:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3849:6:14","type":""}],"src":"3688:604:14"},{"body":{"nodeType":"YulBlock","src":"4384:161:14","statements":[{"body":{"nodeType":"YulBlock","src":"4430:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4439:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4442:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4432:6:14"},"nodeType":"YulFunctionCall","src":"4432:12:14"},"nodeType":"YulExpressionStatement","src":"4432:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4405:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4414:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4401:3:14"},"nodeType":"YulFunctionCall","src":"4401:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4426:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4397:3:14"},"nodeType":"YulFunctionCall","src":"4397:32:14"},"nodeType":"YulIf","src":"4394:2:14"},{"nodeType":"YulAssignment","src":"4455:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4478:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4465:12:14"},"nodeType":"YulFunctionCall","src":"4465:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4455:6:14"}]},{"nodeType":"YulAssignment","src":"4497:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4524:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:14"},"nodeType":"YulFunctionCall","src":"4520:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4507:12:14"},"nodeType":"YulFunctionCall","src":"4507:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4497:6:14"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4342:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4353:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4365:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4373:6:14","type":""}],"src":"4297:248:14"},{"body":{"nodeType":"YulBlock","src":"4631:103:14","statements":[{"body":{"nodeType":"YulBlock","src":"4677:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4686:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4689:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4679:6:14"},"nodeType":"YulFunctionCall","src":"4679:12:14"},"nodeType":"YulExpressionStatement","src":"4679:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4652:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4661:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4648:3:14"},"nodeType":"YulFunctionCall","src":"4648:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4673:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4644:3:14"},"nodeType":"YulFunctionCall","src":"4644:32:14"},"nodeType":"YulIf","src":"4641:2:14"},{"nodeType":"YulAssignment","src":"4702:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4712:5:14"},"nodeType":"YulFunctionCall","src":"4712:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4702:6:14"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4597:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4608:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4620:6:14","type":""}],"src":"4550:184:14"},{"body":{"nodeType":"YulBlock","src":"4886:147:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4903:3:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4916:2:14","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"4920:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4912:3:14"},"nodeType":"YulFunctionCall","src":"4912:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4933:26:14","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4929:3:14"},"nodeType":"YulFunctionCall","src":"4929:31:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4908:3:14"},"nodeType":"YulFunctionCall","src":"4908:53:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4896:6:14"},"nodeType":"YulFunctionCall","src":"4896:66:14"},"nodeType":"YulExpressionStatement","src":"4896:66:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4982:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4987:2:14","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4978:3:14"},"nodeType":"YulFunctionCall","src":"4978:12:14"},{"name":"value1","nodeType":"YulIdentifier","src":"4992:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4971:6:14"},"nodeType":"YulFunctionCall","src":"4971:28:14"},"nodeType":"YulExpressionStatement","src":"4971:28:14"},{"nodeType":"YulAssignment","src":"5008:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5019:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5024:2:14","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5015:3:14"},"nodeType":"YulFunctionCall","src":"5015:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5008:3:14"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4854:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4859:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4867:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4878:3:14","type":""}],"src":"4739:294:14"},{"body":{"nodeType":"YulBlock","src":"5175:137:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5185:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5205:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5199:5:14"},"nodeType":"YulFunctionCall","src":"5199:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5189:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5247:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5255:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5243:3:14"},"nodeType":"YulFunctionCall","src":"5243:17:14"},{"name":"pos","nodeType":"YulIdentifier","src":"5262:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5267:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5221:21:14"},"nodeType":"YulFunctionCall","src":"5221:53:14"},"nodeType":"YulExpressionStatement","src":"5221:53:14"},{"nodeType":"YulAssignment","src":"5283:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5294:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5299:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5290:3:14"},"nodeType":"YulFunctionCall","src":"5290:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5283:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5151:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5156:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5167:3:14","type":""}],"src":"5038:274:14"},{"body":{"nodeType":"YulBlock","src":"5508:14:14","statements":[{"nodeType":"YulAssignment","src":"5510:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"5517:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5510:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5492:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5500:3:14","type":""}],"src":"5317:205:14"},{"body":{"nodeType":"YulBlock","src":"5628:102:14","statements":[{"nodeType":"YulAssignment","src":"5638:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5650:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5661:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5646:3:14"},"nodeType":"YulFunctionCall","src":"5646:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5638:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5680:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5695:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5711:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5716:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5707:3:14"},"nodeType":"YulFunctionCall","src":"5707:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5720:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5703:3:14"},"nodeType":"YulFunctionCall","src":"5703:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5691:3:14"},"nodeType":"YulFunctionCall","src":"5691:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5673:6:14"},"nodeType":"YulFunctionCall","src":"5673:51:14"},"nodeType":"YulExpressionStatement","src":"5673:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5597:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5608:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5619:4:14","type":""}],"src":"5527:203:14"},{"body":{"nodeType":"YulBlock","src":"5892:218:14","statements":[{"nodeType":"YulAssignment","src":"5902:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5914:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5925:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:14"},"nodeType":"YulFunctionCall","src":"5910:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5902:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"5937:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5955:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5960:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5951:3:14"},"nodeType":"YulFunctionCall","src":"5951:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5964:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5947:3:14"},"nodeType":"YulFunctionCall","src":"5947:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5941:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5997:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6005:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5993:3:14"},"nodeType":"YulFunctionCall","src":"5993:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5975:6:14"},"nodeType":"YulFunctionCall","src":"5975:34:14"},"nodeType":"YulExpressionStatement","src":"5975:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6029:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6040:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6025:3:14"},"nodeType":"YulFunctionCall","src":"6025:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6049:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6057:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6045:3:14"},"nodeType":"YulFunctionCall","src":"6045:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6018:6:14"},"nodeType":"YulFunctionCall","src":"6018:43:14"},"nodeType":"YulExpressionStatement","src":"6018:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6081:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6092:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6077:3:14"},"nodeType":"YulFunctionCall","src":"6077:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"6097:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6070:6:14"},"nodeType":"YulFunctionCall","src":"6070:34:14"},"nodeType":"YulExpressionStatement","src":"6070:34:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5845:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5856:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5864:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5872:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5883:4:14","type":""}],"src":"5735:375:14"},{"body":{"nodeType":"YulBlock","src":"6244:145:14","statements":[{"nodeType":"YulAssignment","src":"6254:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6266:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6277:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6262:3:14"},"nodeType":"YulFunctionCall","src":"6262:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6254:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6296:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6311:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6327:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6332:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6323:3:14"},"nodeType":"YulFunctionCall","src":"6323:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"6336:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6319:3:14"},"nodeType":"YulFunctionCall","src":"6319:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6307:3:14"},"nodeType":"YulFunctionCall","src":"6307:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6289:6:14"},"nodeType":"YulFunctionCall","src":"6289:51:14"},"nodeType":"YulExpressionStatement","src":"6289:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6360:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6371:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6356:3:14"},"nodeType":"YulFunctionCall","src":"6356:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"6376:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6349:6:14"},"nodeType":"YulFunctionCall","src":"6349:34:14"},"nodeType":"YulExpressionStatement","src":"6349:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6205:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6216:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6224:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6235:4:14","type":""}],"src":"6115:274:14"},{"body":{"nodeType":"YulBlock","src":"6489:92:14","statements":[{"nodeType":"YulAssignment","src":"6499:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6511:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6522:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6507:3:14"},"nodeType":"YulFunctionCall","src":"6507:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6499:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6541:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6566:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6559:6:14"},"nodeType":"YulFunctionCall","src":"6559:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6552:6:14"},"nodeType":"YulFunctionCall","src":"6552:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6534:6:14"},"nodeType":"YulFunctionCall","src":"6534:41:14"},"nodeType":"YulExpressionStatement","src":"6534:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6458:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6469:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6480:4:14","type":""}],"src":"6394:187:14"},{"body":{"nodeType":"YulBlock","src":"6687:76:14","statements":[{"nodeType":"YulAssignment","src":"6697:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6709:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6720:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6705:3:14"},"nodeType":"YulFunctionCall","src":"6705:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6697:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6739:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"6750:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6732:6:14"},"nodeType":"YulFunctionCall","src":"6732:25:14"},"nodeType":"YulExpressionStatement","src":"6732:25:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6656:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6667:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6678:4:14","type":""}],"src":"6586:177:14"},{"body":{"nodeType":"YulBlock","src":"6925:162:14","statements":[{"nodeType":"YulAssignment","src":"6935:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6947:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6958:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6943:3:14"},"nodeType":"YulFunctionCall","src":"6943:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6935:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6977:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"6988:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6970:6:14"},"nodeType":"YulFunctionCall","src":"6970:25:14"},"nodeType":"YulExpressionStatement","src":"6970:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7015:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7026:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7011:3:14"},"nodeType":"YulFunctionCall","src":"7011:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"7031:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7004:6:14"},"nodeType":"YulFunctionCall","src":"7004:34:14"},"nodeType":"YulExpressionStatement","src":"7004:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7058:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7069:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7054:3:14"},"nodeType":"YulFunctionCall","src":"7054:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"7074:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7047:6:14"},"nodeType":"YulFunctionCall","src":"7047:34:14"},"nodeType":"YulExpressionStatement","src":"7047:34:14"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256__to_t_bytes32_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6878:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6889:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6897:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6905:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6916:4:14","type":""}],"src":"6768:319:14"},{"body":{"nodeType":"YulBlock","src":"7199:87:14","statements":[{"nodeType":"YulAssignment","src":"7209:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7221:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7232:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7217:3:14"},"nodeType":"YulFunctionCall","src":"7217:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7209:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7251:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7266:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7274:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7262:3:14"},"nodeType":"YulFunctionCall","src":"7262:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7244:6:14"},"nodeType":"YulFunctionCall","src":"7244:36:14"},"nodeType":"YulExpressionStatement","src":"7244:36:14"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7168:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7179:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7190:4:14","type":""}],"src":"7092:194:14"},{"body":{"nodeType":"YulBlock","src":"7412:262:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7429:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7440:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7422:6:14"},"nodeType":"YulFunctionCall","src":"7422:21:14"},"nodeType":"YulExpressionStatement","src":"7422:21:14"},{"nodeType":"YulVariableDeclaration","src":"7452:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7472:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7466:5:14"},"nodeType":"YulFunctionCall","src":"7466:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7456:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7499:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7510:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7495:3:14"},"nodeType":"YulFunctionCall","src":"7495:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"7515:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7488:6:14"},"nodeType":"YulFunctionCall","src":"7488:34:14"},"nodeType":"YulExpressionStatement","src":"7488:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7557:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7565:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7553:3:14"},"nodeType":"YulFunctionCall","src":"7553:15:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7574:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7585:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7570:3:14"},"nodeType":"YulFunctionCall","src":"7570:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"7590:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7531:21:14"},"nodeType":"YulFunctionCall","src":"7531:66:14"},"nodeType":"YulExpressionStatement","src":"7531:66:14"},{"nodeType":"YulAssignment","src":"7606:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7622:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7641:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7637:3:14"},"nodeType":"YulFunctionCall","src":"7637:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7658:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7654:3:14"},"nodeType":"YulFunctionCall","src":"7654:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7633:3:14"},"nodeType":"YulFunctionCall","src":"7633:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7618:3:14"},"nodeType":"YulFunctionCall","src":"7618:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"7665:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7614:3:14"},"nodeType":"YulFunctionCall","src":"7614:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7606:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7381:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7392:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7403:4:14","type":""}],"src":"7291:383:14"},{"body":{"nodeType":"YulBlock","src":"7853:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7870:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7881:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7863:6:14"},"nodeType":"YulFunctionCall","src":"7863:21:14"},"nodeType":"YulExpressionStatement","src":"7863:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7904:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7915:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7900:3:14"},"nodeType":"YulFunctionCall","src":"7900:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"7920:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7893:6:14"},"nodeType":"YulFunctionCall","src":"7893:30:14"},"nodeType":"YulExpressionStatement","src":"7893:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7943:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7954:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7939:3:14"},"nodeType":"YulFunctionCall","src":"7939:18:14"},{"hexValue":"6574686572207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"7959:23:14","type":"","value":"ether transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7932:6:14"},"nodeType":"YulFunctionCall","src":"7932:51:14"},"nodeType":"YulExpressionStatement","src":"7932:51:14"},{"nodeType":"YulAssignment","src":"7992:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8004:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8015:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8000:3:14"},"nodeType":"YulFunctionCall","src":"8000:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7992:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3513d540484388c0a9908c86f697c9fd85f7697545de9ce91edbb77b5dec73bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7830:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7844:4:14","type":""}],"src":"7679:345:14"},{"body":{"nodeType":"YulBlock","src":"8203:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8220:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8213:6:14"},"nodeType":"YulFunctionCall","src":"8213:21:14"},"nodeType":"YulExpressionStatement","src":"8213:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8254:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8265:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8250:3:14"},"nodeType":"YulFunctionCall","src":"8250:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"8270:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8243:6:14"},"nodeType":"YulFunctionCall","src":"8243:30:14"},"nodeType":"YulExpressionStatement","src":"8243:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8293:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8304:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8289:3:14"},"nodeType":"YulFunctionCall","src":"8289:18:14"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"8309:34:14","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8282:6:14"},"nodeType":"YulFunctionCall","src":"8282:62:14"},"nodeType":"YulExpressionStatement","src":"8282:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8364:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8375:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8360:3:14"},"nodeType":"YulFunctionCall","src":"8360:18:14"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"8380:8:14","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8353:6:14"},"nodeType":"YulFunctionCall","src":"8353:36:14"},"nodeType":"YulExpressionStatement","src":"8353:36:14"},{"nodeType":"YulAssignment","src":"8398:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8410:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8421:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8406:3:14"},"nodeType":"YulFunctionCall","src":"8406:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8398:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8180:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8194:4:14","type":""}],"src":"8029:402:14"},{"body":{"nodeType":"YulBlock","src":"8610:236:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8627:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8638:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8620:6:14"},"nodeType":"YulFunctionCall","src":"8620:21:14"},"nodeType":"YulExpressionStatement","src":"8620:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8661:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8672:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8657:3:14"},"nodeType":"YulFunctionCall","src":"8657:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"8677:2:14","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8650:6:14"},"nodeType":"YulFunctionCall","src":"8650:30:14"},"nodeType":"YulExpressionStatement","src":"8650:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8700:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8711:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8696:3:14"},"nodeType":"YulFunctionCall","src":"8696:18:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"8716:34:14","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8689:6:14"},"nodeType":"YulFunctionCall","src":"8689:62:14"},"nodeType":"YulExpressionStatement","src":"8689:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8782:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8767:3:14"},"nodeType":"YulFunctionCall","src":"8767:18:14"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"8787:16:14","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8760:6:14"},"nodeType":"YulFunctionCall","src":"8760:44:14"},"nodeType":"YulExpressionStatement","src":"8760:44:14"},{"nodeType":"YulAssignment","src":"8813:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8825:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8836:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8821:3:14"},"nodeType":"YulFunctionCall","src":"8821:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8813:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8587:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8601:4:14","type":""}],"src":"8436:410:14"},{"body":{"nodeType":"YulBlock","src":"9025:179:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9042:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9053:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9035:6:14"},"nodeType":"YulFunctionCall","src":"9035:21:14"},"nodeType":"YulExpressionStatement","src":"9035:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9076:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9087:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9072:3:14"},"nodeType":"YulFunctionCall","src":"9072:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"9092:2:14","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9065:6:14"},"nodeType":"YulFunctionCall","src":"9065:30:14"},"nodeType":"YulExpressionStatement","src":"9065:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9115:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9126:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9111:3:14"},"nodeType":"YulFunctionCall","src":"9111:18:14"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"9131:31:14","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9104:6:14"},"nodeType":"YulFunctionCall","src":"9104:59:14"},"nodeType":"YulExpressionStatement","src":"9104:59:14"},{"nodeType":"YulAssignment","src":"9172:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9184:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9195:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9180:3:14"},"nodeType":"YulFunctionCall","src":"9180:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9172:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9002:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9016:4:14","type":""}],"src":"8851:353:14"},{"body":{"nodeType":"YulBlock","src":"9383:232:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9400:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9411:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9393:6:14"},"nodeType":"YulFunctionCall","src":"9393:21:14"},"nodeType":"YulExpressionStatement","src":"9393:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9434:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9445:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9430:3:14"},"nodeType":"YulFunctionCall","src":"9430:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"9450:2:14","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9423:6:14"},"nodeType":"YulFunctionCall","src":"9423:30:14"},"nodeType":"YulExpressionStatement","src":"9423:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9473:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9484:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9469:3:14"},"nodeType":"YulFunctionCall","src":"9469:18:14"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"9489:34:14","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9462:6:14"},"nodeType":"YulFunctionCall","src":"9462:62:14"},"nodeType":"YulExpressionStatement","src":"9462:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9544:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9555:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9540:3:14"},"nodeType":"YulFunctionCall","src":"9540:18:14"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"9560:12:14","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9533:6:14"},"nodeType":"YulFunctionCall","src":"9533:40:14"},"nodeType":"YulExpressionStatement","src":"9533:40:14"},{"nodeType":"YulAssignment","src":"9582:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9594:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9605:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9590:3:14"},"nodeType":"YulFunctionCall","src":"9590:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9582:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9360:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9374:4:14","type":""}],"src":"9209:406:14"},{"body":{"nodeType":"YulBlock","src":"9794:181:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9811:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9822:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9804:6:14"},"nodeType":"YulFunctionCall","src":"9804:21:14"},"nodeType":"YulExpressionStatement","src":"9804:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9845:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9856:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9841:3:14"},"nodeType":"YulFunctionCall","src":"9841:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"9861:2:14","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9834:6:14"},"nodeType":"YulFunctionCall","src":"9834:30:14"},"nodeType":"YulExpressionStatement","src":"9834:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9884:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9895:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9880:3:14"},"nodeType":"YulFunctionCall","src":"9880:18:14"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"9900:33:14","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9873:6:14"},"nodeType":"YulFunctionCall","src":"9873:61:14"},"nodeType":"YulExpressionStatement","src":"9873:61:14"},{"nodeType":"YulAssignment","src":"9943:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9955:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9966:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9951:3:14"},"nodeType":"YulFunctionCall","src":"9951:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9943:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9771:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9785:4:14","type":""}],"src":"9620:355:14"},{"body":{"nodeType":"YulBlock","src":"10081:76:14","statements":[{"nodeType":"YulAssignment","src":"10091:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10103:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10114:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10099:3:14"},"nodeType":"YulFunctionCall","src":"10099:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10091:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10133:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"10144:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10126:6:14"},"nodeType":"YulFunctionCall","src":"10126:25:14"},"nodeType":"YulExpressionStatement","src":"10126:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10050:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10061:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10072:4:14","type":""}],"src":"9980:177:14"},{"body":{"nodeType":"YulBlock","src":"10291:145:14","statements":[{"nodeType":"YulAssignment","src":"10301:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10313:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10324:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10309:3:14"},"nodeType":"YulFunctionCall","src":"10309:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10301:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10343:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"10354:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10336:6:14"},"nodeType":"YulFunctionCall","src":"10336:25:14"},"nodeType":"YulExpressionStatement","src":"10336:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10381:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10392:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10377:3:14"},"nodeType":"YulFunctionCall","src":"10377:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10401:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10417:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10422:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10413:3:14"},"nodeType":"YulFunctionCall","src":"10413:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"10426:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10409:3:14"},"nodeType":"YulFunctionCall","src":"10409:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10397:3:14"},"nodeType":"YulFunctionCall","src":"10397:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10370:6:14"},"nodeType":"YulFunctionCall","src":"10370:60:14"},"nodeType":"YulExpressionStatement","src":"10370:60:14"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10252:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10263:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10271:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10282:4:14","type":""}],"src":"10162:274:14"},{"body":{"nodeType":"YulBlock","src":"10598:188:14","statements":[{"nodeType":"YulAssignment","src":"10608:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10620:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10631:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10616:3:14"},"nodeType":"YulFunctionCall","src":"10616:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10608:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10650:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"10661:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10643:6:14"},"nodeType":"YulFunctionCall","src":"10643:25:14"},"nodeType":"YulExpressionStatement","src":"10643:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10688:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10699:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10684:3:14"},"nodeType":"YulFunctionCall","src":"10684:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"10704:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10677:6:14"},"nodeType":"YulFunctionCall","src":"10677:34:14"},"nodeType":"YulExpressionStatement","src":"10677:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10731:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10742:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10727:3:14"},"nodeType":"YulFunctionCall","src":"10727:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10751:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10767:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10772:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10763:3:14"},"nodeType":"YulFunctionCall","src":"10763:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"10776:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10759:3:14"},"nodeType":"YulFunctionCall","src":"10759:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10747:3:14"},"nodeType":"YulFunctionCall","src":"10747:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10720:6:14"},"nodeType":"YulFunctionCall","src":"10720:60:14"},"nodeType":"YulExpressionStatement","src":"10720:60:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10551:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10562:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10570:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10578:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10589:4:14","type":""}],"src":"10441:345:14"},{"body":{"nodeType":"YulBlock","src":"10839:80:14","statements":[{"body":{"nodeType":"YulBlock","src":"10866:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10868:16:14"},"nodeType":"YulFunctionCall","src":"10868:18:14"},"nodeType":"YulExpressionStatement","src":"10868:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10855:1:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10862:1:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10858:3:14"},"nodeType":"YulFunctionCall","src":"10858:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10852:2:14"},"nodeType":"YulFunctionCall","src":"10852:13:14"},"nodeType":"YulIf","src":"10849:2:14"},{"nodeType":"YulAssignment","src":"10897:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10908:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"10911:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10904:3:14"},"nodeType":"YulFunctionCall","src":"10904:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10897:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10822:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"10825:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10831:3:14","type":""}],"src":"10791:128:14"},{"body":{"nodeType":"YulBlock","src":"10970:74:14","statements":[{"body":{"nodeType":"YulBlock","src":"10993:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"10995:16:14"},"nodeType":"YulFunctionCall","src":"10995:18:14"},"nodeType":"YulExpressionStatement","src":"10995:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10990:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10983:6:14"},"nodeType":"YulFunctionCall","src":"10983:9:14"},"nodeType":"YulIf","src":"10980:2:14"},{"nodeType":"YulAssignment","src":"11024:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11033:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"11036:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11029:3:14"},"nodeType":"YulFunctionCall","src":"11029:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11024:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10955:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"10958:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"10964:1:14","type":""}],"src":"10924:120:14"},{"body":{"nodeType":"YulBlock","src":"11101:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"11160:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11162:16:14"},"nodeType":"YulFunctionCall","src":"11162:18:14"},"nodeType":"YulExpressionStatement","src":"11162:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11132:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11125:6:14"},"nodeType":"YulFunctionCall","src":"11125:9:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11118:6:14"},"nodeType":"YulFunctionCall","src":"11118:17:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11140:1:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11151:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11147:3:14"},"nodeType":"YulFunctionCall","src":"11147:6:14"},{"name":"x","nodeType":"YulIdentifier","src":"11155:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11143:3:14"},"nodeType":"YulFunctionCall","src":"11143:14:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11137:2:14"},"nodeType":"YulFunctionCall","src":"11137:21:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11114:3:14"},"nodeType":"YulFunctionCall","src":"11114:45:14"},"nodeType":"YulIf","src":"11111:2:14"},{"nodeType":"YulAssignment","src":"11191:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11206:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"11209:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11202:3:14"},"nodeType":"YulFunctionCall","src":"11202:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11191:7:14"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11080:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"11083:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11089:7:14","type":""}],"src":"11049:168:14"},{"body":{"nodeType":"YulBlock","src":"11271:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"11293:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11295:16:14"},"nodeType":"YulFunctionCall","src":"11295:18:14"},"nodeType":"YulExpressionStatement","src":"11295:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11287:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"11290:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11284:2:14"},"nodeType":"YulFunctionCall","src":"11284:8:14"},"nodeType":"YulIf","src":"11281:2:14"},{"nodeType":"YulAssignment","src":"11324:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11336:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"11339:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11332:3:14"},"nodeType":"YulFunctionCall","src":"11332:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11324:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11253:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"11256:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11262:4:14","type":""}],"src":"11222:125:14"},{"body":{"nodeType":"YulBlock","src":"11405:205:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11415:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11424:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11419:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11484:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11509:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"11514:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11505:3:14"},"nodeType":"YulFunctionCall","src":"11505:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11528:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"11533:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11524:3:14"},"nodeType":"YulFunctionCall","src":"11524:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11518:5:14"},"nodeType":"YulFunctionCall","src":"11518:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11498:6:14"},"nodeType":"YulFunctionCall","src":"11498:39:14"},"nodeType":"YulExpressionStatement","src":"11498:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11445:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"11448:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11442:2:14"},"nodeType":"YulFunctionCall","src":"11442:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11456:19:14","statements":[{"nodeType":"YulAssignment","src":"11458:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11467:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"11470:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11463:3:14"},"nodeType":"YulFunctionCall","src":"11463:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11458:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"11438:3:14","statements":[]},"src":"11434:113:14"},{"body":{"nodeType":"YulBlock","src":"11573:31:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11586:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"11591:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:14"},"nodeType":"YulFunctionCall","src":"11582:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"11600:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11575:6:14"},"nodeType":"YulFunctionCall","src":"11575:27:14"},"nodeType":"YulExpressionStatement","src":"11575:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11562:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"11565:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11559:2:14"},"nodeType":"YulFunctionCall","src":"11559:13:14"},"nodeType":"YulIf","src":"11556:2:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11383:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11388:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"11393:6:14","type":""}],"src":"11352:258:14"},{"body":{"nodeType":"YulBlock","src":"11662:88:14","statements":[{"body":{"nodeType":"YulBlock","src":"11693:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11695:16:14"},"nodeType":"YulFunctionCall","src":"11695:18:14"},"nodeType":"YulExpressionStatement","src":"11695:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11678:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11689:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11685:3:14"},"nodeType":"YulFunctionCall","src":"11685:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11675:2:14"},"nodeType":"YulFunctionCall","src":"11675:17:14"},"nodeType":"YulIf","src":"11672:2:14"},{"nodeType":"YulAssignment","src":"11724:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11735:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"11742:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11731:3:14"},"nodeType":"YulFunctionCall","src":"11731:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11724:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11644:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11654:3:14","type":""}],"src":"11615:135:14"},{"body":{"nodeType":"YulBlock","src":"11800:130:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11810:31:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11829:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"11836:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11825:3:14"},"nodeType":"YulFunctionCall","src":"11825:16:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"11814:7:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11871:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11873:16:14"},"nodeType":"YulFunctionCall","src":"11873:18:14"},"nodeType":"YulExpressionStatement","src":"11873:18:14"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11856:7:14"},{"kind":"number","nodeType":"YulLiteral","src":"11865:4:14","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11853:2:14"},"nodeType":"YulFunctionCall","src":"11853:17:14"},"nodeType":"YulIf","src":"11850:2:14"},{"nodeType":"YulAssignment","src":"11902:22:14","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11913:7:14"},{"kind":"number","nodeType":"YulLiteral","src":"11922:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11909:3:14"},"nodeType":"YulFunctionCall","src":"11909:15:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11902:3:14"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11782:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11792:3:14","type":""}],"src":"11755:175:14"},{"body":{"nodeType":"YulBlock","src":"11973:74:14","statements":[{"body":{"nodeType":"YulBlock","src":"11996:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"11998:16:14"},"nodeType":"YulFunctionCall","src":"11998:18:14"},"nodeType":"YulExpressionStatement","src":"11998:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11993:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11986:6:14"},"nodeType":"YulFunctionCall","src":"11986:9:14"},"nodeType":"YulIf","src":"11983:2:14"},{"nodeType":"YulAssignment","src":"12027:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12036:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"12039:1:14"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"12032:3:14"},"nodeType":"YulFunctionCall","src":"12032:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"12027:1:14"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11958:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"11961:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11967:1:14","type":""}],"src":"11935:112:14"},{"body":{"nodeType":"YulBlock","src":"12084:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12101:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12108:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12113:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12104:3:14"},"nodeType":"YulFunctionCall","src":"12104:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12094:6:14"},"nodeType":"YulFunctionCall","src":"12094:31:14"},"nodeType":"YulExpressionStatement","src":"12094:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12141:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12144:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12134:6:14"},"nodeType":"YulFunctionCall","src":"12134:15:14"},"nodeType":"YulExpressionStatement","src":"12134:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12165:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12168:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12158:6:14"},"nodeType":"YulFunctionCall","src":"12158:15:14"},"nodeType":"YulExpressionStatement","src":"12158:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12052:127:14"},{"body":{"nodeType":"YulBlock","src":"12216:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12233:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12240:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12245:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12236:3:14"},"nodeType":"YulFunctionCall","src":"12236:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12226:6:14"},"nodeType":"YulFunctionCall","src":"12226:31:14"},"nodeType":"YulExpressionStatement","src":"12226:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12273:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12276:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12266:6:14"},"nodeType":"YulFunctionCall","src":"12266:15:14"},"nodeType":"YulExpressionStatement","src":"12266:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12297:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12300:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12290:6:14"},"nodeType":"YulFunctionCall","src":"12290:15:14"},"nodeType":"YulExpressionStatement","src":"12290:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"12184:127:14"},{"body":{"nodeType":"YulBlock","src":"12348:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12365:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12372:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12377:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12368:3:14"},"nodeType":"YulFunctionCall","src":"12368:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12358:6:14"},"nodeType":"YulFunctionCall","src":"12358:31:14"},"nodeType":"YulExpressionStatement","src":"12358:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12405:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12408:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12398:6:14"},"nodeType":"YulFunctionCall","src":"12398:15:14"},"nodeType":"YulExpressionStatement","src":"12398:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12429:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12432:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12422:6:14"},"nodeType":"YulFunctionCall","src":"12422:15:14"},"nodeType":"YulExpressionStatement","src":"12422:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12316:127:14"},{"body":{"nodeType":"YulBlock","src":"12490:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"12544:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12553:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12556:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12546:6:14"},"nodeType":"YulFunctionCall","src":"12546:12:14"},"nodeType":"YulExpressionStatement","src":"12546:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12513:5:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12534:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12527:6:14"},"nodeType":"YulFunctionCall","src":"12527:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12520:6:14"},"nodeType":"YulFunctionCall","src":"12520:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12510:2:14"},"nodeType":"YulFunctionCall","src":"12510:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12503:6:14"},"nodeType":"YulFunctionCall","src":"12503:40:14"},"nodeType":"YulIf","src":"12500:2:14"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12479:5:14","type":""}],"src":"12448:118:14"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        value6 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256__to_t_bytes32_t_bytes32_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_3513d540484388c0a9908c86f697c9fd85f7697545de9ce91edbb77b5dec73bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ether transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101fc5760003560e01c80637cc0cdf21161010d578063a9ec3a1b116100a0578063c3a079ed1161006f578063c3a079ed146105c1578063d2ef7398146105d7578063da4493f6146105ec578063ef5d9ae814610602578063f851a4401461062f57600080fd5b8063a9ec3a1b1461054b578063be8b768614610561578063c1d8994114610581578063c24e4778146105a157600080fd5b80639637f475116100dc5780639637f475146104ea578063977aa88b14610500578063980e784414610516578063a98acb461461052b57600080fd5b80637cc0cdf21461045c5780637dc0d1d01461047657806385e3f997146104ae5780638abb5d22146104ca57600080fd5b80634df9cfb31161019057806375e07c2d1161015f57806375e07c2d146103f45780637a40624b146104095780637b1837de1461041f5780637c99ca6d146104325780637cbb7d5e1461044757600080fd5b80634df9cfb31461037e578063531e050d1461039e57806363a5b88d146103be5780636c4fbc4a146103dd57600080fd5b806327ce11cb116101cc57806327ce11cb146102de5780633e1619401461030b57806340bcf74814610321578063449497281461035957600080fd5b80627c4d511461023d5780630c9cbf0e14610266578063162dfe001461029e57806317b9d05e146102be57600080fd5b3661023857600e54610100900460ff161561022a5760405163a99e45dd60e01b815260040160405180910390fd5b6102363460003361064f565b005b600080fd5b34801561024957600080fd5b5061025360045481565b6040519081526020015b60405180910390f35b34801561027257600080fd5b506102536102813660046115a8565b600d60209081526000928352604080842090915290825290205481565b3480156102aa57600080fd5b506102366102b9366004611641565b610726565b3480156102ca57600080fd5b506102366102d93660046117d1565b6107d9565b3480156102ea57600080fd5b506102536102f936600461158d565b60106020526000908152604090205481565b34801561031757600080fd5b5061025360035481565b34801561032d57600080fd5b5061025361033c3660046115a8565b600f60209081526000928352604080842090915290825290205481565b34801561036557600080fd5b5061036e6108b9565b604051901515815260200161025d565b34801561038a57600080fd5b5061025361039936600461158d565b6108df565b3480156103aa57600080fd5b506102366103b9366004611736565b610911565b3480156103ca57600080fd5b50600e5461036e90610100900460ff1681565b3480156103e957600080fd5b50600754421061036e565b34801561040057600080fd5b50610253610983565b34801561041557600080fd5b5061025360085481565b61023661042d3660046115db565b6109a1565b34801561043e57600080fd5b5061036e610a2c565b34801561045357600080fd5b50610236610a44565b34801561046857600080fd5b50600e5461036e9060ff1681565b34801561048257600080fd5b50600b54610496906001600160a01b031681565b6040516001600160a01b03909116815260200161025d565b3480156104ba57600080fd5b50610253670de0b6b3a764000081565b3480156104d657600080fd5b506102366104e536600461169b565b610a92565b3480156104f657600080fd5b5061025360065481565b34801561050c57600080fd5b5061025360095481565b34801561052257600080fd5b50610236610b53565b34801561053757600080fd5b50610236610546366004611770565b610bb8565b34801561055757600080fd5b5061025360055481565b34801561056d57600080fd5b5061025361057c366004611605565b610d20565b34801561058d57600080fd5b5061025361059c36600461158d565b610d83565b3480156105ad57600080fd5b506102366105bc3660046115a8565b610e17565b3480156105cd57600080fd5b5061025360025481565b3480156105e357600080fd5b50610236610f56565b3480156105f857600080fd5b5061025360075481565b34801561060e57600080fd5b5061025361061d36600461158d565b600c6020526000908152604090205481565b34801561063b57600080fd5b50600a54610496906001600160a01b031681565b6001600160a01b038083166000908152600f6020908152604080832093851683529290529081208054859290610686908490611892565b90915550506001600160a01b038216600090815260106020526040812080548592906106b3908490611892565b90915550506001600160a01b038216156106dc576106dc6001600160a01b038316823086610fd5565b604080518481526001600160a01b0384811660208301528316917fa5e8482b3a4fbac393476288e591dd9316d7304a537b26f9b67167f0ce19750f910160405180910390a2505050565b6000610730610983565b6040516bffffffffffffffffffffffff19606088901b166020820152603481018690529091506000906054016040516020818303038152906040528051906020012090506107b48484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508692508591506110469050565b6107d1576040516309bde33960e01b815260040160405180910390fd5b505050505050565b600b546001600160a01b03163314610804576040516380fee10560e01b815260040160405180910390fd5b600e5460ff161561082857604051634c167e3b60e01b815260040160405180910390fd5b600e54610100900460ff16156108515760405163a99e45dd60e01b815260040160405180910390fd5b610859610a44565b600680546005558290556002546108709042611892565b6007819055604080518481526020810184905280820192909252517f93d244ac7b8f4282b061b1dcb3f543f36f06af40a7bfdefe04fc913ef7ea54f99181900360600190a15050565b6000600454600354600854426108cf91906118dd565b6108d9919061195b565b10905090565b6001600160a01b0381166000908152600c602052604081205461090183610d83565b61090b9190611892565b92915050565b600a546001600160a01b0316331461093c57604051634755657960e01b815260040160405180910390fd5b600e805460ff19168215159081179091556040519081527f161c6403efb8e4c55a592ebbe46f13ba803dd00cb970b735606b6518eb5475ff9060200160405180910390a150565b600061098d610a2c565b610998575060055490565b6006545b905090565b600260015414156109cd5760405162461bcd60e51b81526004016109c49061185b565b60405180910390fd5b6002600155600e54610100900460ff16156109fb5760405163a99e45dd60e01b815260040160405180910390fd5b6001600160a01b038216610a1957610a1434833361064f565b610a24565b610a2481833361064f565b505060018055565b6006546000901580159061099c575050600754421190565b600754421015610a695760405163ddc07f7160e01b81524260048201526024016109c4565b610a716108b9565b610a90576040516303ab46c160e11b81524260048201526024016109c4565b565b60026001541415610ab55760405162461bcd60e51b81526004016109c49061185b565b6002600155600e54610100900460ff1615610ae35760405163a99e45dd60e01b815260040160405180910390fd5b610aef87878787610726565b60005b60ff8116831115610b4557610b33888886868560ff16818110610b1757610b1761199b565b9050602002016020810190610b2c919061158d565b338661105c565b80610b3d8161193b565b915050610af2565b505060018055505050505050565b600a546001600160a01b03163314610b7e57604051634755657960e01b815260040160405180910390fd5b600e805461ff0019166101001790556040517f123d4f203b2b83bfe9f45903402bb88193cc56a43371d97ab5a51bd1817d858690600090a1565b600054610100900460ff1615808015610bd85750600054600160ff909116105b80610bf25750303b158015610bf2575060005460ff166001145b610c555760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109c4565b6000805460ff191660011790558015610c78576000805461ff0019166101001790555b6009889055600a80546001600160a01b03808a166001600160a01b031992831617909255600b80549289169290911691909117905584610cb85742610cba565b845b600755426008556002849055600383905560048290558015610d16576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6001600160a01b038082166000908152600d60209081526040808320938716835292905290812054670de0b6b3a764000084610d5b856108df565b610d6591906118be565b610d6f91906118aa565b610d7991906118dd565b90505b9392505050565b60006001600160a01b03821615610e10576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610dd357600080fd5b505afa158015610de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0b91906117f3565b61090b565b4792915050565b60026001541415610e3a5760405162461bcd60e51b81526004016109c49061185b565b6002600155600e54610100900460ff1615610f3d576001600160a01b03808216600090815260106020908152604080832054600f8352818420948716845293909152812054909190610e8b84610d83565b610e9591906118be565b610e9f91906118aa565b905080610ebf57604051635da3252f60e11b815260040160405180910390fd5b6001600160a01b038083166000908152600f60209081526040808320938716835292905290812055610ef283828461116f565b604080518281526001600160a01b0384811660208301528516917f56c54ba9bd38d8fd62012e42c7ee564519b09763c426d331b3661b537ead19b2910160405180910390a250610a24565b60405163209a769d60e11b815260040160405180910390fd5b600a546001600160a01b03163314610f8157604051634755657960e01b815260040160405180910390fd5b6007544210610fa557604051633e71b1bf60e11b81524260048201526024016109c4565b600060068190556040517fa0f4a9a971d0d41496054a6616f175690f8b322091fcd26dc9e81fc96d4124849190a1565b6040516001600160a01b03808516602483015283166044820152606481018290526110409085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611231565b50505050565b6000826110538584611303565b14949350505050565b6000611069868686610d20565b6001600160a01b038086166000908152600d60209081526040808320938b168352929052908120805492935083929091906110a5908490611892565b90915550506001600160a01b0384166000908152600c6020526040812080548392906110d2908490611892565b90915550506001600160a01b038381169087161480156110fa57506001600160a01b03821615155b1561110f5761110a82828661116f565b61111a565b61111a86828661116f565b60408051868152602081018390526001600160a01b03868116828401529151918816917fb6fe5ce185a3773d47e919f57c7edfd102c91cb7833b2be405c4de89d9980fd79181900360600190a2505050505050565b6001600160a01b038116611218576000836001600160a01b03168360405160006040518083038185875af1925050503d80600081146111ca576040519150601f19603f3d011682016040523d82523d6000602084013e6111cf565b606091505b50509050806110405760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016109c4565b61122c6001600160a01b0382168484611350565b505050565b6000611286826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113809092919063ffffffff16565b80519091501561122c57808060200190518101906112a49190611753565b61122c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109c4565b600081815b845181101561134857611334828683815181106113275761132761199b565b602002602001015161138f565b91508061134081611920565b915050611308565b509392505050565b6040516001600160a01b03831660248201526044810182905261122c90849063a9059cbb60e01b90606401611009565b6060610d7984846000856113bb565b60008183106113ab576000828152602084905260409020610d7c565b5060009182526020526040902090565b60608247101561141c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109c4565b6001600160a01b0385163b6114735760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109c4565b600080866001600160a01b0316858760405161148f919061180c565b60006040518083038185875af1925050503d80600081146114cc576040519150601f19603f3d011682016040523d82523d6000602084013e6114d1565b606091505b50915091506114e18282866114ec565b979650505050505050565b606083156114fb575081610d7c565b82511561150b5782518084602001fd5b8160405162461bcd60e51b81526004016109c49190611828565b80356001600160a01b038116811461153c57600080fd5b919050565b60008083601f84011261155357600080fd5b50813567ffffffffffffffff81111561156b57600080fd5b6020830191508360208260051b850101111561158657600080fd5b9250929050565b60006020828403121561159f57600080fd5b610d7c82611525565b600080604083850312156115bb57600080fd5b6115c483611525565b91506115d260208401611525565b90509250929050565b600080604083850312156115ee57600080fd5b6115f783611525565b946020939093013593505050565b60008060006060848603121561161a57600080fd5b61162384611525565b92506020840135915061163860408501611525565b90509250925092565b6000806000806060858703121561165757600080fd5b61166085611525565b935060208501359250604085013567ffffffffffffffff81111561168357600080fd5b61168f87828801611541565b95989497509550505050565b600080600080600080600060a0888a0312156116b657600080fd5b6116bf88611525565b965060208801359550604088013567ffffffffffffffff808211156116e357600080fd5b6116ef8b838c01611541565b909750955060608a013591508082111561170857600080fd5b506117158a828b01611541565b9094509250611728905060808901611525565b905092959891949750929550565b60006020828403121561174857600080fd5b8135610d7c816119b1565b60006020828403121561176557600080fd5b8151610d7c816119b1565b600080600080600080600060e0888a03121561178b57600080fd5b8735965061179b60208901611525565b95506117a960408901611525565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b600080604083850312156117e457600080fd5b50508035926020909101359150565b60006020828403121561180557600080fd5b5051919050565b6000825161181e8184602087016118f4565b9190910192915050565b60208152600082518060208401526118478160408501602087016118f4565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156118a5576118a561196f565b500190565b6000826118b9576118b9611985565b500490565b60008160001904831182151516156118d8576118d861196f565b500290565b6000828210156118ef576118ef61196f565b500390565b60005b8381101561190f5781810151838201526020016118f7565b838111156110405750506000910152565b60006000198214156119345761193461196f565b5060010190565b600060ff821660ff8114156119525761195261196f565b60010192915050565b60008261196a5761196a611985565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80151581146119bf57600080fd5b5056fea26469706673582212203b2b6641de37c1cab3b07367576eea4d8c76af903c16f2f0e7f5ba573ed1d4f164736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CC0CDF2 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA9EC3A1B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC3A079ED GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC3A079ED EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xD2EF7398 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xDA4493F6 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xEF5D9AE8 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9EC3A1B EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xBE8B7686 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xC1D89941 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xC24E4778 EQ PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9637F475 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9637F475 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x977AA88B EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x980E7844 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xA98ACB46 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CC0CDF2 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x85E3F997 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x8ABB5D22 EQ PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF9CFB3 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x75E07C2D GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x75E07C2D EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x7A40624B EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x7B1837DE EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x7C99CA6D EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x7CBB7D5E EQ PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF9CFB3 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x531E050D EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x63A5B88D EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x6C4FBC4A EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27CE11CB GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x27CE11CB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x3E161940 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x40BCF748 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x44949728 EQ PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x7C4D51 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC9CBF0E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x162DFE00 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x17B9D05E EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x238 JUMPI PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x236 CALLVALUE PUSH1 0x0 CALLER PUSH2 0x64F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x36E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0x36E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x983 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0xA2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0xA44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x36E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x496 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0xB53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x1770 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0xD20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x158D JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x496 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x686 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x6DC JUMPI PUSH2 0x6DC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP3 ADDRESS DUP7 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 AND SWAP2 PUSH32 0xA5E8482B3A4FBAC393476288E591DD9316D7304A537B26F9B67167F0CE19750F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x7B4 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP3 POP DUP6 SWAP2 POP PUSH2 0x1046 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH4 0x80FEE105 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C167E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x859 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x5 SSTORE DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x870 SWAP1 TIMESTAMP PUSH2 0x1892 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x93D244AC7B8F4282B061B1DCB3F543F36F06AF40A7BFDEFE04FC913EF7EA54F9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST LT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x901 DUP4 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x161C6403EFB8E4C55A592EBBE46F13BA803DD00CB970B735606B6518EB5475FF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x998 JUMPI POP PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA19 JUMPI PUSH2 0xA14 CALLVALUE DUP4 CALLER PUSH2 0x64F JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xA24 DUP2 DUP4 CALLER PUSH2 0x64F JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x99C JUMPI POP POP PUSH1 0x7 SLOAD TIMESTAMP GT SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDDC07F71 PUSH1 0xE0 SHL DUP2 MSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0xA71 PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB46C1 PUSH1 0xE1 SHL DUP2 MSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA99E45DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEF DUP8 DUP8 DUP8 DUP8 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 AND DUP4 GT ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB33 DUP9 DUP9 DUP7 DUP7 DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0xB17 JUMPI PUSH2 0xB17 PUSH2 0x199B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST CALLER DUP7 PUSH2 0x105C JUMP JUMPDEST DUP1 PUSH2 0xB3D DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x123D4F203B2B83BFE9F45903402BB88193CC56A43371D97AB5A51BD1817D8586 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xBD8 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xBF2 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x9 DUP9 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xB DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 PUSH2 0xCB8 JUMPI TIMESTAMP PUSH2 0xCBA JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x7 SSTORE TIMESTAMP PUSH1 0x8 SSTORE PUSH1 0x2 DUP5 SWAP1 SSTORE PUSH1 0x3 DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0xD5B DUP6 PUSH2 0x8DF JUMP JUMPDEST PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE0B SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST SELFBALANCE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF3D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xF DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE SWAP4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xE8B DUP5 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5DA3252F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE PUSH2 0xEF2 DUP4 DUP3 DUP5 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND SWAP2 PUSH32 0x56C54BA9BD38D8FD62012E42C7EE564519B09763C426D331B3661B537EAD19B2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x209A769D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E71B1BF PUSH1 0xE1 SHL DUP2 MSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA0F4A9A971D0D41496054A6616F175690F8B322091FCD26DC9E81FC96D412484 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1040 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1231 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1053 DUP6 DUP5 PUSH2 0x1303 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1069 DUP7 DUP7 DUP7 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP12 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x10A5 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x10D2 SWAP1 DUP5 SWAP1 PUSH2 0x1892 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 DUP8 AND EQ DUP1 ISZERO PUSH2 0x10FA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x110F JUMPI PUSH2 0x110A DUP3 DUP3 DUP7 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST PUSH2 0x111A DUP7 DUP3 DUP7 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 DUP5 ADD MSTORE SWAP2 MLOAD SWAP2 DUP9 AND SWAP2 PUSH32 0xB6FE5CE185A3773D47E919F57C7EDFD102C91CB7833B2BE405C4DE89D9980FD7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1218 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x195D1A195C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0x122C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 DUP5 PUSH2 0x1350 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1286 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1380 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x122C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1334 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1327 JUMPI PUSH2 0x1327 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x138F JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1340 DUP2 PUSH2 0x1920 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1308 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x122C SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD79 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x13AB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD7C JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x141C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14E1 DUP3 DUP3 DUP7 PUSH2 0x14EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x14FB JUMPI POP DUP2 PUSH2 0xD7C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x150B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP3 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C4 DUP4 PUSH2 0x1525 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D2 PUSH1 0x20 DUP5 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F7 DUP4 PUSH2 0x1525 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1623 DUP5 PUSH2 0x1525 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1638 PUSH1 0x40 DUP6 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1660 DUP6 PUSH2 0x1525 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168F DUP8 DUP3 DUP9 ADD PUSH2 0x1541 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BF DUP9 PUSH2 0x1525 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16EF DUP12 DUP4 DUP13 ADD PUSH2 0x1541 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1715 DUP11 DUP3 DUP12 ADD PUSH2 0x1541 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1728 SWAP1 POP PUSH1 0x80 DUP10 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD7C DUP2 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD7C DUP2 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x178B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH2 0x179B PUSH1 0x20 DUP10 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP6 POP PUSH2 0x17A9 PUSH1 0x40 DUP10 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP6 SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SWAP6 POP PUSH1 0xC0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x181E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x18F4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1847 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A5 PUSH2 0x196F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18B9 JUMPI PUSH2 0x18B9 PUSH2 0x1985 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18D8 JUMPI PUSH2 0x18D8 PUSH2 0x196F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EF PUSH2 0x196F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18F7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1040 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1934 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1952 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x196A JUMPI PUSH2 0x196A PUSH2 0x1985 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x2B PUSH7 0x41DE37C1CAB3B0 PUSH20 0x67576EEA4D8C76AF903C16F2F0E7F5BA573ED1D4 CALL PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"405:11112:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:17;;;;;;;3331:79;;;3375:24;;-1:-1:-1;;;3375:24:10;;;;;;;;;;;3331:79;7220:40:::1;7226:9;7245:1;7249:10;7220:5;:40::i;:::-;405:11112:::0;;;;;700:30;;;;;;;;;;;;;;;;;;;6732:25:14;;;6720:2;6705:18;700:30:10;;;;;;;;1467:62;;;;;;;;;;-1:-1:-1;1467:62:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;7696:372;;;;;;;;;;-1:-1:-1;7696:372:10;;;;;:::i;:::-;;:::i;4839:402::-;;;;;;;;;;-1:-1:-1;4839:402:10;;;;;:::i;:::-;;:::i;2042:48::-;;;;;;;;;;-1:-1:-1;2042:48:10;;;;;:::i;:::-;;;;;;;;;;;;;;662:32;;;;;;;;;;;;;;;;1867:64;;;;;;;;;;-1:-1:-1;1867:64:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9516:170;;;;;;;;;;;;;:::i;:::-;;;6559:14:14;;6552:22;6534:41;;6522:2;6507:18;9516:170:10;6489:92:14;9107:141:10;;;;;;;;;;-1:-1:-1;9107:141:10;;;;;:::i;:::-;;:::i;6121:123::-;;;;;;;;;;-1:-1:-1;6121:123:10;;;;;:::i;:::-;;:::i;1707:29::-;;;;;;;;;;-1:-1:-1;1707:29:10;;;;;;;;;;;9331:112;;;;;;;;;;-1:-1:-1;9422:14:10;;9404:15;:32;9331:112;;8856:141;;;;;;;;;;;;;:::i;996:25::-;;;;;;;;;;;;;;;;4454:252;;;;;;:::i;:::-;;:::i;8603:154::-;;;;;;;;;;;;;:::i;9760:274::-;;;;;;;;;;;;;:::i;1616:24::-;;;;;;;;;;-1:-1:-1;1616:24:10;;;;;;;;1149:21;;;;;;;;;;-1:-1:-1;1149:21:10;;;;-1:-1:-1;;;;;1149:21:10;;;;;;-1:-1:-1;;;;;5691:32:14;;;5673:51;;5661:2;5646:18;1149:21:10;5628:102:14;573:45:10;;;;;;;;;;;;612:6;573:45;;5296:383;;;;;;;;;;-1:-1:-1;5296:383:10;;;;;:::i;:::-;;:::i;923:32::-;;;;;;;;;;;;;;;;1085:31;;;;;;;;;;;;;;;;6385:120;;;;;;;;;;;;;:::i;3705:633::-;;;;;;;;;;-1:-1:-1;3705:633:10;;;;;:::i;:::-;;:::i;737:33::-;;;;;;;;;;;;;;;;8152:383;;;;;;;;;;-1:-1:-1;8152:383:10;;;;;:::i;:::-;;:::i;7467:177::-;;;;;;;;;;-1:-1:-1;7467:177:10;;;;;:::i;:::-;;:::i;6631:533::-;;;;;;;;;;-1:-1:-1;6631:533:10;;;;;:::i;:::-;;:::i;625:31::-;;;;;;;;;;;;;;;;5813:219;;;;;;;;;;;;;:::i;961:29::-;;;;;;;;;;;;;;;;1288:47;;;;;;;;;;-1:-1:-1;1288:47:10;;;;;:::i;:::-;;;;;;;;;;;;;;1123:20;;;;;;;;;;-1:-1:-1;1123:20:10;;;;-1:-1:-1;;;;;1123:20:10;;;10809:355;-1:-1:-1;;;;;10918:16:10;;;;;;;:9;:16;;;;;;;;:22;;;;;;;;;;;:32;;10944:6;;10918:16;:32;;10944:6;;10918:32;:::i;:::-;;;;-1:-1:-1;;;;;;;10960:20:10;;;;;;:13;:20;;;;;:30;;10984:6;;10960:20;:30;;10984:6;;10960:30;:::i;:::-;;;;-1:-1:-1;;;;;;;11004:19:10;;;11000:109;;11039:59;-1:-1:-1;;;;;11039:30:10;;11070:4;11084;11091:6;11039:30;:59::i;:::-;11123:34;;;10336:25:14;;;-1:-1:-1;;;;;10397:32:14;;;10392:2;10377:18;;10370:60;11123:34:10;;;;;10309:18:14;11123:34:10;;;;;;;10809:355;;;:::o;7696:372::-;7828:26;7857:14;:12;:14::i;:::-;7907:32;;-1:-1:-1;;4916:2:14;4912:15;;;4908:53;7907:32:10;;;4896:66:14;4978:12;;;4971:28;;;7828:43:10;;-1:-1:-1;7882:12:10;;5015::14;;7907:32:10;;;;;;;;;;;;7897:43;;;;;;7882:58;;7954:51;7973:5;;7954:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7980:18:10;;-1:-1:-1;8000:4:10;;-1:-1:-1;7954:18:10;;-1:-1:-1;7954:51:10:i;:::-;7950:112;;8037:14;;-1:-1:-1;;;8037:14:10;;;;;;;;;;;7950:112;7818:250;;7696:372;;;;:::o;4839:402::-;3097:6;;-1:-1:-1;;;;;3097:6:10;3083:10;:20;3079:70;;3126:12;;-1:-1:-1;;;3126:12:10;;;;;;;;;;;3079:70;3207:12:::1;::::0;::::1;;3203:71;;;3242:21;;-1:-1:-1::0;;;3242:21:10::1;;;;;;;;;;;3203:71;3335:17:::2;::::0;::::2;::::0;::::2;;;3331:79;;;3375:24;;-1:-1:-1::0;;;3375:24:10::2;;;;;;;;;;;3331:79;4962:30:::3;:28;:30::i;:::-;5024:17;::::0;;5003:18:::3;:38:::0;5051:37;;;5133:16:::3;::::0;5115:34:::3;::::0;:15:::3;:34;:::i;:::-;5098:14;:51:::0;;;5165:69:::3;::::0;;6970:25:14;;;7026:2;7011:18;;7004:34;;;7054:18;;;7047:34;;;;5165:69:10;::::3;::::0;;;;6958:2:14;5165:69:10;;::::3;4839:402:::0;;:::o;9516:170::-;9570:4;9664:15;;9644:17;;9629:10;;9602:15;9594:46;;;;:::i;:::-;9593:68;;;;:::i;:::-;:86;9586:93;;9516:170;:::o;9107:141::-;-1:-1:-1;;;;;9222:19:10;;9166:13;9222:19;;;:12;:19;;;;;;9198:21;9235:5;9198:14;:21::i;:::-;:43;;;;:::i;:::-;9191:50;9107:141;-1:-1:-1;;9107:141:10:o;6121:123::-;2974:5;;-1:-1:-1;;;;;2974:5:10;2960:10;:19;2956:68;;3002:11;;-1:-1:-1;;;3002:11:10;;;;;;;;;;;2956:68;6185:12:::1;:20:::0;;-1:-1:-1;;6185:20:10::1;::::0;::::1;;::::0;;::::1;::::0;;;6220:17:::1;::::0;6534:41:14;;;6220:17:10::1;::::0;6522:2:14;6507:18;6220:17:10::1;;;;;;;6121:123:::0;:::o;8856:141::-;8901:12;8932:17;:15;:17::i;:::-;:58;;-1:-1:-1;8972:18:10;;;8856:141::o;8932:58::-;8952:17;;8932:58;8925:65;;8856:141;:::o;4454:252::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;3335:17:10::1;::::0;::::1;::::0;::::1;;;3331:79;;;3375:24;;-1:-1:-1::0;;;3375:24:10::1;;;;;;;;;;;3331:79;-1:-1:-1::0;;;;;4556:19:10;::::2;4552:148;;4591:35;4597:9;4608:5;4615:10;4591:5;:35::i;:::-;4552:148;;;4657:32;4663:6;4671:5;4678:10;4657:5;:32::i;:::-;-1:-1:-1::0;;1701:1:2;2628:22;;4454:252:10:o;8603:154::-;8683:17;;8651:13;;8683:31;;;;:67;;-1:-1:-1;;8736:14:10;;8718:15;:32;;8603:154::o;9760:274::-;9422:14;;9404:15;:32;9822:95;;;9868:38;;-1:-1:-1;;;9868:38:10;;9890:15;9868:38;;;6732:25:14;6705:18;;9868:38:10;6687:76:14;9822:95:10;9932:23;:21;:23::i;:::-;9927:101;;9978:39;;-1:-1:-1;;;9978:39:10;;10001:15;9978:39;;;6732:25:14;6705:18;;9978:39:10;6687:76:14;9927:101:10;9760:274::o;5296:383::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;3335:17:10::1;::::0;::::1;::::0;::::1;;;3331:79;;;3375:24;;-1:-1:-1::0;;;3375:24:10::1;;;;;;;;;;;3331:79;5503:35:::2;5516:7;5525:5;5532;;5503:12;:35::i;:::-;5554:8;5549:124;5568:18;::::0;::::2;::::0;-1:-1:-1;5549:124:10::2;;;5608:54;5615:7;5624:5;5631:6;;5638:2;5631:10;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5643;5655:6;5608;:54::i;:::-;5588:4:::0;::::2;::::0;::::2;:::i;:::-;;;;5549:124;;;-1:-1:-1::0;;1701:1:2;2628:22;;-1:-1:-1;;;;;;5296:383:10:o;6385:120::-;2974:5;;-1:-1:-1;;;;;2974:5:10;2960:10;:19;2956:68;;3002:11;;-1:-1:-1;;;3002:11:10;;;;;;;;;;;2956:68;6440:17:::1;:24:::0;;-1:-1:-1;;6440:24:10::1;;;::::0;;6479:19:::1;::::0;::::1;::::0;6440:24;;6479:19:::1;6385:120::o:0;3705:633::-;3100:19:1;3123:13;;;;;;3122:14;;3168:34;;;;-1:-1:-1;3186:12:1;;3201:1;3186:12;;;;:16;3168:34;3167:97;;;-1:-1:-1;3236:4:1;1465:19:7;:23;;;3208:55:1;;-1:-1:-1;3246:12:1;;;;;:17;3208:55;3146:190;;;;-1:-1:-1;;;3146:190:1;;8638:2:14;3146:190:1;;;8620:21:14;8677:2;8657:18;;;8650:30;8716:34;8696:18;;;8689:62;-1:-1:-1;;;8767:18:14;;;8760:44;8821:19;;3146:190:1;8610:236:14;3146:190:1;3346:12;:16;;-1:-1:-1;;3346:16:1;3361:1;3346:16;;;3372:65;;;;3406:13;:20;;-1:-1:-1;;3406:20:1;;;;;3372:65;3986:16:10::1;:36:::0;;;4032:5:::1;:14:::0;;-1:-1:-1;;;;;4032:14:10;;::::1;-1:-1:-1::0;;;;;;4032:14:10;;::::1;;::::0;;;4056:6:::1;:16:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4099:19;:55:::1;;4139:15;4099:55;;;4121:15;4099:55;4082:14;:72:::0;4177:15:::1;4164:10;:28:::0;4203:16:::1;:36:::0;;;4249:17:::1;:38:::0;;;-1:-1:-1;4297:34:10;;;3457:99:1;;;;3507:5;3491:21;;-1:-1:-1;;3491:21:1;;;3531:14;;-1:-1:-1;7244:36:14;;3531:14:1;;7232:2:14;7217:18;3531:14:1;;;;;;;3457:99;3090:472;3705:633:10;;;;;;;:::o;8152:383::-;-1:-1:-1;;;;;8505:14:10;;;8285:13;8505:14;;;:7;:14;;;;;;;;:23;;;;;;;;;;;;612:6;8481:5;8458:20;8513:5;8458:13;:20::i;:::-;:28;;;;:::i;:::-;8457:45;;;;:::i;:::-;:71;;;;:::i;:::-;8450:78;;8152:383;;;;;;:::o;7467:177::-;7527:7;-1:-1:-1;;;;;7553:19:10;;;:84;;7599:38;;-1:-1:-1;;;7599:38:10;;7631:4;7599:38;;;5673:51:14;-1:-1:-1;;;;;7599:23:10;;;;;5646:18:14;;7599:38:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7553:84;;;7575:21;7546:91;7467:177;-1:-1:-1;;7467:177:10:o;6631:533::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;6723:17:10::1;::::0;::::1;::::0;::::1;;;6719:439;;;-1:-1:-1::0;;;;;6827:20:10;;::::1;6756:14;6827:20:::0;;;:13:::1;:20;::::0;;;;;;;;6798:9:::1;:16:::0;;;;;:25;;::::1;::::0;;;;;;;;;6756:14;;6827:20;6774:21:::1;6841:5:::0;6774:14:::1;:21::i;:::-;:49;;;;:::i;:::-;6773:74;;;;:::i;:::-;6756:91:::0;-1:-1:-1;6865:11:10;6861:77:::1;;6903:20;;-1:-1:-1::0;;;6903:20:10::1;;;;;;;;;;;6861:77;-1:-1:-1::0;;;;;6951:16:10;;::::1;6979:1;6951:16:::0;;;:9:::1;:16;::::0;;;;;;;:25;;::::1;::::0;;;;;;;;:29;6995:40:::1;6968:7:::0;7021:6;6961:5;6995:16:::1;:40::i;:::-;7055:32;::::0;;10336:25:14;;;-1:-1:-1;;;;;10397:32:14;;;10392:2;10377:18;;10370:60;7055:32:10;::::1;::::0;::::1;::::0;10309:18:14;7055:32:10::1;;;;;;;6742:356;6719:439;;;7125:22;;-1:-1:-1::0;;;7125:22:10::1;;;;;;;;;;;5813:219:::0;2974:5;;-1:-1:-1;;;;;2974:5:10;2960:10;:19;2956:68;;3002:11;;-1:-1:-1;;;3002:11:10;;;;;;;;;;;2956:68;9422:14;;9404:15;:32;5863:96:::1;;5910:38;::::0;-1:-1:-1;;;5910:38:10;;5932:15:::1;5910:38;::::0;::::1;6732:25:14::0;6705:18;;5910:38:10::1;6687:76:14::0;5863:96:10::1;5997:1;5969:17;:30:::0;;;6014:11:::1;::::0;::::1;::::0;5997:1;6014:11:::1;5813:219::o:0;974:241:6:-;1139:68;;-1:-1:-1;;;;;5993:15:14;;;1139:68:6;;;5975:34:14;6045:15;;6025:18;;;6018:43;6077:18;;;6070:34;;;1112:96:6;;1132:5;;-1:-1:-1;;;1162:27:6;5910:18:14;;1139:68:6;;;;-1:-1:-1;;1139:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:6;-1:-1:-1;;;;;;1139:68:6;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;1153:184:9:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:9:o;10244:559:10:-;10404:14;10421:48;10447:7;10456:5;10463;10421:25;:48::i;:::-;-1:-1:-1;;;;;10480:14:10;;;;;;;:7;:14;;;;;;;;:23;;;;;;;;;;;:33;;10404:65;;-1:-1:-1;10404:65:10;;10480:23;;:14;:33;;10404:65;;10480:33;:::i;:::-;;;;-1:-1:-1;;;;;;;10523:19:10;;;;;;:12;:19;;;;;:29;;10546:6;;10523:19;:29;;10546:6;;10523:29;:::i;:::-;;;;-1:-1:-1;;;;;;;10567:17:10;;;;;;;:41;;;;-1:-1:-1;;;;;;10588:20:10;;;;10567:41;10563:182;;;10624:39;10641:6;10649;10657:5;10624:16;:39::i;:::-;10563:182;;;10694:40;10711:7;10720:6;10728:5;10694:16;:40::i;:::-;10760:36;;;10643:25:14;;;10699:2;10684:18;;10677:34;;;-1:-1:-1;;;;;10747:32:14;;;10727:18;;;10720:60;10760:36:10;;;;;;;;;;;10631:2:14;10760:36:10;;;10394:409;10244:559;;;;;:::o;11170:345::-;-1:-1:-1;;;;;11292:19:10;;11288:221;;11328:12;11346:2;-1:-1:-1;;;;;11346:7:10;11362:6;11346:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11327:47;;;11396:7;11388:41;;;;-1:-1:-1;;;11388:41:10;;7881:2:14;11388:41:10;;;7863:21:14;7920:2;7900:18;;;7893:30;-1:-1:-1;;;7939:18:14;;;7932:51;8000:18;;11388:41:10;7853:171:14;11288:221:10;11460:38;-1:-1:-1;;;;;11460:26:10;;11487:2;11491:6;11460:26;:38::i;:::-;11170:345;;;:::o;3747:706:6:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:6;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:6;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:6;;9411:2:14;4351:85:6;;;9393:21:14;9450:2;9430:18;;;9423:30;9489:34;9469:18;;;9462:62;-1:-1:-1;;;9540:18:14;;;9533:40;9590:19;;4351:85:6;9383:232:14;1991:290:9;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:9;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:9;1991:290;-1:-1:-1;;;1991:290:9:o;763:205:6:-;902:58;;-1:-1:-1;;;;;6307:32:14;;902:58:6;;;6289:51:14;6356:18;;;6349:34;;;875:86:6;;895:5;;-1:-1:-1;;;925:23:6;6262:18:14;;902:58:6;6244:145:14;3861:223:7;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;8054:147:9:-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;-1:-1:-1;8275:13:9;8366:15;;;8401:4;8394:15;8447:4;8431:21;;;8054:147::o;4948:499:7:-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:7;;8231:2:14;5137:81:7;;;8213:21:14;8270:2;8250:18;;;8243:30;8309:34;8289:18;;;8282:62;-1:-1:-1;;;8360:18:14;;;8353:36;8406:19;;5137:81:7;8203:228:14;5137:81:7;-1:-1:-1;;;;;1465:19:7;;;5228:60;;;;-1:-1:-1;;;5228:60:7;;9053:2:14;5228:60:7;;;9035:21:14;9092:2;9072:18;;;9065:30;9131:31;9111:18;;;9104:59;9180:18;;5228:60:7;9025:179:14;5228:60:7;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:7;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:7:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:7;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:7;;;;;;;;:::i;14:173:14:-;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:367::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:2;;337:1;334;327:12;286:2;-1:-1:-1;360:20:14;;403:18;392:30;;389:2;;;435:1;432;425:12;389:2;472:4;464:6;460:17;448:29;;532:3;525:4;515:6;512:1;508:14;500:6;496:27;492:38;489:47;486:2;;;549:1;546;539:12;486:2;276:283;;;;;:::o;564:186::-;623:6;676:2;664:9;655:7;651:23;647:32;644:2;;;692:1;689;682:12;644:2;715:29;734:9;715:29;:::i;755:260::-;823:6;831;884:2;872:9;863:7;859:23;855:32;852:2;;;900:1;897;890:12;852:2;923:29;942:9;923:29;:::i;:::-;913:39;;971:38;1005:2;994:9;990:18;971:38;:::i;:::-;961:48;;842:173;;;;;:::o;1020:254::-;1088:6;1096;1149:2;1137:9;1128:7;1124:23;1120:32;1117:2;;;1165:1;1162;1155:12;1117:2;1188:29;1207:9;1188:29;:::i;:::-;1178:39;1264:2;1249:18;;;;1236:32;;-1:-1:-1;;;1107:167:14:o;1279:328::-;1356:6;1364;1372;1425:2;1413:9;1404:7;1400:23;1396:32;1393:2;;;1441:1;1438;1431:12;1393:2;1464:29;1483:9;1464:29;:::i;:::-;1454:39;;1540:2;1529:9;1525:18;1512:32;1502:42;;1563:38;1597:2;1586:9;1582:18;1563:38;:::i;:::-;1553:48;;1383:224;;;;;:::o;1612:579::-;1716:6;1724;1732;1740;1793:2;1781:9;1772:7;1768:23;1764:32;1761:2;;;1809:1;1806;1799:12;1761:2;1832:29;1851:9;1832:29;:::i;:::-;1822:39;;1908:2;1897:9;1893:18;1880:32;1870:42;;1963:2;1952:9;1948:18;1935:32;1990:18;1982:6;1979:30;1976:2;;;2022:1;2019;2012:12;1976:2;2061:70;2123:7;2114:6;2103:9;2099:22;2061:70;:::i;:::-;1751:440;;;;-1:-1:-1;2150:8:14;-1:-1:-1;;;;1751:440:14:o;2196:991::-;2345:6;2353;2361;2369;2377;2385;2393;2446:3;2434:9;2425:7;2421:23;2417:33;2414:2;;;2463:1;2460;2453:12;2414:2;2486:29;2505:9;2486:29;:::i;:::-;2476:39;;2562:2;2551:9;2547:18;2534:32;2524:42;;2617:2;2606:9;2602:18;2589:32;2640:18;2681:2;2673:6;2670:14;2667:2;;;2697:1;2694;2687:12;2667:2;2736:70;2798:7;2789:6;2778:9;2774:22;2736:70;:::i;:::-;2825:8;;-1:-1:-1;2710:96:14;-1:-1:-1;2913:2:14;2898:18;;2885:32;;-1:-1:-1;2929:16:14;;;2926:2;;;2958:1;2955;2948:12;2926:2;;2997:72;3061:7;3050:8;3039:9;3035:24;2997:72;:::i;:::-;3088:8;;-1:-1:-1;2971:98:14;-1:-1:-1;3142:39:14;;-1:-1:-1;3176:3:14;3161:19;;3142:39;:::i;:::-;3132:49;;2404:783;;;;;;;;;;:::o;3192:241::-;3248:6;3301:2;3289:9;3280:7;3276:23;3272:32;3269:2;;;3317:1;3314;3307:12;3269:2;3356:9;3343:23;3375:28;3397:5;3375:28;:::i;3438:245::-;3505:6;3558:2;3546:9;3537:7;3533:23;3529:32;3526:2;;;3574:1;3571;3564:12;3526:2;3606:9;3600:16;3625:28;3647:5;3625:28;:::i;3688:604::-;3801:6;3809;3817;3825;3833;3841;3849;3902:3;3890:9;3881:7;3877:23;3873:33;3870:2;;;3919:1;3916;3909:12;3870:2;3955:9;3942:23;3932:33;;3984:38;4018:2;4007:9;4003:18;3984:38;:::i;:::-;3974:48;;4041:38;4075:2;4064:9;4060:18;4041:38;:::i;:::-;3860:432;;;;-1:-1:-1;4031:48:14;;4126:2;4111:18;;4098:32;;-1:-1:-1;4177:3:14;4162:19;;4149:33;;4229:3;4214:19;;4201:33;;-1:-1:-1;4281:3:14;4266:19;;;4253:33;;-1:-1:-1;3860:432:14;-1:-1:-1;;3860:432:14:o;4297:248::-;4365:6;4373;4426:2;4414:9;4405:7;4401:23;4397:32;4394:2;;;4442:1;4439;4432:12;4394:2;-1:-1:-1;;4465:23:14;;;4535:2;4520:18;;;4507:32;;-1:-1:-1;4384:161:14:o;4550:184::-;4620:6;4673:2;4661:9;4652:7;4648:23;4644:32;4641:2;;;4689:1;4686;4679:12;4641:2;-1:-1:-1;4712:16:14;;4631:103;-1:-1:-1;4631:103:14:o;5038:274::-;5167:3;5205:6;5199:13;5221:53;5267:6;5262:3;5255:4;5247:6;5243:17;5221:53;:::i;:::-;5290:16;;;;;5175:137;-1:-1:-1;;5175:137:14:o;7291:383::-;7440:2;7429:9;7422:21;7403:4;7472:6;7466:13;7515:6;7510:2;7499:9;7495:18;7488:34;7531:66;7590:6;7585:2;7574:9;7570:18;7565:2;7557:6;7553:15;7531:66;:::i;:::-;7658:2;7637:15;-1:-1:-1;;7633:29:14;7618:45;;;;7665:2;7614:54;;7412:262;-1:-1:-1;;7412:262:14:o;9620:355::-;9822:2;9804:21;;;9861:2;9841:18;;;9834:30;9900:33;9895:2;9880:18;;9873:61;9966:2;9951:18;;9794:181::o;10791:128::-;10831:3;10862:1;10858:6;10855:1;10852:13;10849:2;;;10868:18;;:::i;:::-;-1:-1:-1;10904:9:14;;10839:80::o;10924:120::-;10964:1;10990;10980:2;;10995:18;;:::i;:::-;-1:-1:-1;11029:9:14;;10970:74::o;11049:168::-;11089:7;11155:1;11151;11147:6;11143:14;11140:1;11137:21;11132:1;11125:9;11118:17;11114:45;11111:2;;;11162:18;;:::i;:::-;-1:-1:-1;11202:9:14;;11101:116::o;11222:125::-;11262:4;11290:1;11287;11284:8;11281:2;;;11295:18;;:::i;:::-;-1:-1:-1;11332:9:14;;11271:76::o;11352:258::-;11424:1;11434:113;11448:6;11445:1;11442:13;11434:113;;;11524:11;;;11518:18;11505:11;;;11498:39;11470:2;11463:10;11434:113;;;11565:6;11562:1;11559:13;11556:2;;;-1:-1:-1;;11600:1:14;11582:16;;11575:27;11405:205::o;11615:135::-;11654:3;-1:-1:-1;;11675:17:14;;11672:2;;;11695:18;;:::i;:::-;-1:-1:-1;11742:1:14;11731:13;;11662:88::o;11755:175::-;11792:3;11836:4;11829:5;11825:16;11865:4;11856:7;11853:17;11850:2;;;11873:18;;:::i;:::-;11922:1;11909:15;;11800:130;-1:-1:-1;;11800:130:14:o;11935:112::-;11967:1;11993;11983:2;;11998:18;;:::i;:::-;-1:-1:-1;12032:9:14;;11973:74::o;12052:127::-;12113:10;12108:3;12104:20;12101:1;12094:31;12144:4;12141:1;12134:15;12168:4;12165:1;12158:15;12184:127;12245:10;12240:3;12236:20;12233:1;12226:31;12276:4;12273:1;12266:15;12300:4;12297:1;12290:15;12316:127;12377:10;12372:3;12368:20;12365:1;12358:31;12408:4;12405:1;12398:15;12432:4;12429:1;12422:15;12448:118;12534:5;12527:13;12520:21;12513:5;12510:32;12500:2;;12556:1;12553;12546:12;12500:2;12490:76;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1329600","executionCost":"23489","totalCost":"1353089"},"external":{"ACTIVATION_PERIOD()":"2352","ACTIVE_DURATION()":"2331","CHALLENGE_PERIOD()":"2328","TOTAL_SHARES()":"274","activationTime()":"2372","admin()":"2469","approvedMerkleRoot()":"2329","balanceOfAsset(address)":"infinite","campaignCancelled()":"2411","cancelCampaign()":"27365","challenge()":"10249","checkMerkleRootUpdateAllowed()":"8962","claim(address,uint256,bytes32[],address[],address)":"infinite","claimed(address,address)":"infinite","deployTime()":"2351","fund(address,uint256)":"infinite","getValidRoot()":"6637","initCampaign(bytes32,address,address,uint256,uint256,uint256,uint256)":"infinite","isChallengePeriod()":"2415","isPendingActive()":"4567","isProposeWindowActive()":"6771","oracle()":"2405","pendingMerkleRoot()":"2329","proposeShares(bytes32,bytes32)":"87613","providers(address,address)":"infinite","rewardRulesetUri()":"2351","rewardsAvailableToClaimer(address,uint256,address)":"infinite","setSharesLock(bool)":"27790","sharesLocked()":"2356","totalClaimed(address)":"2618","totalProvided(address)":"2554","totalReceived(address)":"infinite","verifyShares(address,uint256,bytes32[])":"infinite","withdrawAssets(address,address)":"infinite"},"internal":{"_claim(address,uint256,address,address,address)":"infinite","_fund(uint256,address,address)":"infinite","transferAssetOut(address,uint256,address)":"infinite"}},"methodIdentifiers":{"ACTIVATION_PERIOD()":"3e161940","ACTIVE_DURATION()":"007c4d51","CHALLENGE_PERIOD()":"c3a079ed","TOTAL_SHARES()":"85e3f997","activationTime()":"da4493f6","admin()":"f851a440","approvedMerkleRoot()":"a9ec3a1b","balanceOfAsset(address)":"c1d89941","campaignCancelled()":"63a5b88d","cancelCampaign()":"980e7844","challenge()":"d2ef7398","checkMerkleRootUpdateAllowed()":"7cbb7d5e","claim(address,uint256,bytes32[],address[],address)":"8abb5d22","claimed(address,address)":"0c9cbf0e","deployTime()":"7a40624b","fund(address,uint256)":"7b1837de","getValidRoot()":"75e07c2d","initCampaign(bytes32,address,address,uint256,uint256,uint256,uint256)":"a98acb46","isChallengePeriod()":"6c4fbc4a","isPendingActive()":"7c99ca6d","isProposeWindowActive()":"44949728","oracle()":"7dc0d1d0","pendingMerkleRoot()":"9637f475","proposeShares(bytes32,bytes32)":"17b9d05e","providers(address,address)":"40bcf748","rewardRulesetUri()":"977aa88b","rewardsAvailableToClaimer(address,uint256,address)":"be8b7686","setSharesLock(bool)":"531e050d","sharesLocked()":"7cc0cdf2","totalClaimed(address)":"ef5d9ae8","totalProvided(address)":"27ce11cb","totalReceived(address)":"4df9cfb3","verifyShares(address,uint256,bytes32[])":"162dfe00","withdrawAssets(address,address)":"c24e4778"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"ChallengePeriodActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoAssetsToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewardAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotIfCampaignCancelled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotIfCampaignLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"OnlyInChallengePeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOracle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"ProposeWindowNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CampaignCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assset\",\"type\":\"address\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"Fund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"SharesLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sharesMerkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sharesUri\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activationTime\",\"type\":\"uint256\"}],\"name\":\"SharesMerkleRootUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACTIVATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ACTIVE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CHALLENGE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SHARES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvedMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"balanceOfAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMerkleRootUpdateAllowed\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValidRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rewardRulesetUri\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_activationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_CHALLENGE_PERIOD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ACTIVATION_PERIOD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ACTIVE_DURATION\",\"type\":\"uint256\"}],\"name\":\"initCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isChallengePeriod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPendingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isProposeWindowActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sharesMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_sharesUri\",\"type\":\"bytes32\"}],\"name\":\"proposeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRulesetUri\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"rewardsAvailableToClaimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_lock\",\"type\":\"bool\"}],\"name\":\"setSharesLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalProvided\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"totalReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyShares\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Campaign\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"TOTAL_SHARES()\":{\"notice\":\"Shares are considered a ratio [0-1] with 18 digits where 1E18 = 1 \"},\"balanceOfAsset(address)\":{\"notice\":\"Returns the currrent balance that the campaign holds for an asset. For the native token, asset is the zero address\"},\"campaignCancelled()\":{\"notice\":\"Once cancelled, the assets providers can withdraw \"},\"cancelCampaign()\":{\"notice\":\"Admin can cancel the campaign. After cancellation, asset providers can withdraw their assets and claims are disabled \"},\"challenge()\":{\"notice\":\"Admin can cancel the pending merkle root while in challenge period. Previously approved root will stay active \"},\"checkMerkleRootUpdateAllowed()\":{\"notice\":\"Returns true if the oracle can propose a new merkle root \"},\"claim(address,uint256,bytes32[],address[],address)\":{\"notice\":\"Claim rewards from one or more assets \"},\"claimed(address,address)\":{\"notice\":\"amount of assets already claimed per claimer address, per asset address (zero address represents the native token) \"},\"fund(address,uint256)\":{\"notice\":\"Fund campaign with native or any ERC20 token. For native token, asset is the zero address.  \"},\"getValidRoot()\":{\"notice\":\"Valid root is either the approved or pending one depending on the activation time \"},\"initCampaign(bytes32,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Campaign initialization, called once at deploy (using the campaign factory). CHALLENGE_PERIOD > ACTIVE_DURATION is recommended to limite one proposeal per active window\"},\"isChallengePeriod()\":{\"notice\":\"Indicates whether the campaign is currently at a challenge period \"},\"isPendingActive()\":{\"notice\":\"Returns true if the active root is the pending one \"},\"isProposeWindowActive()\":{\"notice\":\"Returns true if propose window for the oracle is active \"},\"pendingMerkleRoot()\":{\"notice\":\"Optimistic flow used to update merkleRoot. - Oracle propose update and Admin can block - Admin cannot initiate an update \"},\"proposeShares(bytes32,bytes32)\":{\"notice\":\"Only the oracle can propose a new merkleRoot. The proposed root becomes active only after a CHALLENGE_PERIOD \"},\"providers(address,address)\":{\"notice\":\"amount of rewards provided per address of provider, per asset address (zero address represents the native token) \"},\"rewardRulesetUri()\":{\"notice\":\"Uri pointing to the campaign's reward ruleset \"},\"rewardsAvailableToClaimer(address,uint256,address)\":{\"notice\":\"Calculates the amount of available rewards to claim for an account \"},\"setSharesLock(bool)\":{\"notice\":\"Admin can lock the campaign, meaning disable future merkle root updates \"},\"sharesLocked()\":{\"notice\":\"Once locked, the merkleRoot cannot be updated anymore until unlocked \"},\"totalClaimed(address)\":{\"notice\":\"amount of total assets already claimed per asset address (zero address represents the native token) \"},\"totalProvided(address)\":{\"notice\":\"amount of total rewards provided per asset address (zero address represents the native token) \"},\"totalReceived(address)\":{\"notice\":\"Total assets received by the contract. For the native token, asset is the zero address\"},\"verifyShares(address,uint256,bytes32[])\":{\"notice\":\"Validates the shares of an account \"},\"withdrawAssets(address,address)\":{\"notice\":\"asset providers can withdraw their proportion of assets only in case the campaign was cancelled by the admin \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campaign.sol\":\"Campaign\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The proofs can be generated using the JavaScript library\\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\\n *\\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the merkle tree could be reinterpreted as a leaf value.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(\\n        bytes32[] memory proof,\\n        bytes32 root,\\n        bytes32 leaf\\n    ) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function verifyCalldata(\\n        bytes32[] calldata proof,\\n        bytes32 root,\\n        bytes32 leaf\\n    ) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\\n     * consuming from one or the other at each step according to the instructions given by\\n     * `proofFlags`.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proof.length - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value for the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            return hashes[totalHashes - 1];\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proof.length - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value for the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            return hashes[totalHashes - 1];\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title Campaign\\n */\\ncontract Campaign is Initializable, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n\\n    /** Shares are considered a ratio [0-1] with 18 digits where 1E18 = 1 */\\n    uint256 public constant TOTAL_SHARES = 10**18;\\n\\n    uint256 public CHALLENGE_PERIOD;\\n    uint256 public ACTIVATION_PERIOD;\\n    uint256 public ACTIVE_DURATION;\\n\\n    bytes32 public approvedMerkleRoot;\\n\\n    /** Optimistic flow used to update merkleRoot.\\n     * - Oracle propose update and Admin can block\\n     * - Admin cannot initiate an update */\\n    bytes32 public pendingMerkleRoot;\\n    uint256 public activationTime;\\n    uint256 public deployTime;\\n\\n    /** Uri pointing to the campaign's reward ruleset */\\n    bytes32 public rewardRulesetUri;\\n\\n    address public admin;\\n    address public oracle;\\n\\n    /** amount of total assets already claimed per asset address (zero address represents the native token) */\\n    mapping(address => uint256) public totalClaimed;\\n    /** amount of assets already claimed per claimer address, per asset address (zero address represents the native token) */\\n    mapping(address => mapping(address => uint256)) public claimed;\\n\\n    /** Once locked, the merkleRoot cannot be updated anymore until unlocked */\\n    bool public sharesLocked;\\n    /** Once cancelled, the assets providers can withdraw */\\n    bool public campaignCancelled;\\n\\n    /** amount of rewards provided per address of provider, per asset address (zero address represents the native token) */\\n    mapping(address => mapping(address => uint256)) public providers;\\n    /** amount of total rewards provided per asset address (zero address represents the native token) */\\n    mapping(address => uint256) public totalProvided;\\n\\n    event Fund(address indexed provider, uint256 amount, address asset);\\n    event SharesMerkleRootUpdate(bytes32 sharesMerkleRoot, bytes32 sharesUri, uint256 activationTime);\\n    event Claim(address indexed account, uint256 share, uint256 reward, address assset);\\n    event Challenge();\\n    event Withdraw(address indexed account, uint256 amount, address asset);\\n    event SharesLock(bool locked);\\n    event CampaignCancelled();\\n\\n    error InvalidProof();\\n    error ProposeWindowNotActive(uint256 blockTime);\\n    error ChallengePeriodActive(uint256 blockTime);\\n    error OnlyInChallengePeriod(uint256 blockTime);\\n    error NoRewardAvailable();\\n    error OnlyAdmin();\\n    error WithdrawalNotAllowed();\\n    error NoAssetsToWithdraw();\\n    error OnlyOracle();\\n    error NotIfCampaignLocked();\\n    error NotIfCampaignCancelled();\\n\\n    modifier onlyAdmin() {\\n        if (msg.sender != admin) {\\n            revert OnlyAdmin();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyOracle() {\\n        if (msg.sender != oracle) {\\n            revert OnlyOracle();\\n        }\\n        _;\\n    }\\n\\n    modifier notLocked() {\\n        if (sharesLocked) {\\n            revert NotIfCampaignLocked();\\n        }\\n        _;\\n    }\\n\\n    modifier notCancelled() {\\n        if (campaignCancelled) {\\n            revert NotIfCampaignCancelled();\\n        }\\n        _;\\n    }\\n\\n    /***************\\n    EXTERNAL FUNCTIONS\\n    ***************/\\n\\n    /**\\n     * Campaign initialization, called once at deploy (using the campaign factory).\\n     * CHALLENGE_PERIOD > ACTIVE_DURATION is recommended to limite one proposeal per\\n     * active window\\n     */\\n    function initCampaign(\\n        bytes32 _rewardRulesetUri,\\n        address _admin,\\n        address _oracle,\\n        uint256 _activationTime,\\n        uint256 _CHALLENGE_PERIOD,\\n        uint256 _ACTIVATION_PERIOD,\\n        uint256 _ACTIVE_DURATION\\n    ) external initializer {\\n        rewardRulesetUri = _rewardRulesetUri;\\n        admin = _admin;\\n        oracle = _oracle;\\n        activationTime = _activationTime > 0 ? _activationTime : block.timestamp;\\n        deployTime = block.timestamp;\\n\\n        CHALLENGE_PERIOD = _CHALLENGE_PERIOD;\\n        ACTIVATION_PERIOD = _ACTIVATION_PERIOD;\\n        ACTIVE_DURATION = _ACTIVE_DURATION;\\n    }\\n\\n    /** Fund campaign with native or any ERC20 token.\\n     * For native token, asset is the zero address.  */\\n    function fund(address asset, uint256 amount) external payable nonReentrant notCancelled {\\n        if (asset == address(0)) {\\n            _fund(msg.value, asset, msg.sender);\\n        } else {\\n            _fund(amount, asset, msg.sender);\\n        }\\n    }\\n\\n    /** Only the oracle can propose a new merkleRoot. The proposed root becomes active only\\n     * after a CHALLENGE_PERIOD */\\n    function proposeShares(bytes32 _sharesMerkleRoot, bytes32 _sharesUri) external onlyOracle notLocked notCancelled {\\n        checkMerkleRootUpdateAllowed();\\n\\n        approvedMerkleRoot = pendingMerkleRoot;\\n        pendingMerkleRoot = _sharesMerkleRoot;\\n        activationTime = block.timestamp + CHALLENGE_PERIOD;\\n\\n        emit SharesMerkleRootUpdate(_sharesMerkleRoot, _sharesUri, activationTime);\\n    }\\n\\n    /** Claim rewards from one or more assets */\\n    function claim(\\n        address account,\\n        uint256 share,\\n        bytes32[] calldata proof,\\n        address[] calldata assets,\\n        address target\\n    ) external nonReentrant notCancelled {\\n        verifyShares(account, share, proof);\\n\\n        for (uint8 ix = 0; ix < assets.length; ix++) {\\n            _claim(account, share, assets[ix], msg.sender, target);\\n        }\\n    }\\n\\n    /** Admin can cancel the pending merkle root while in challenge period.\\n     * Previously approved root will stay active */\\n    function challenge() external onlyAdmin {\\n        if (!isChallengePeriod()) {\\n            revert OnlyInChallengePeriod(block.timestamp);\\n        }\\n\\n        pendingMerkleRoot = bytes32(0);\\n        emit Challenge();\\n    }\\n\\n    /** Admin can lock the campaign, meaning disable future merkle root updates */\\n    function setSharesLock(bool _lock) external onlyAdmin {\\n        sharesLocked = _lock;\\n        emit SharesLock(_lock);\\n    }\\n\\n    /** Admin can cancel the campaign.\\n     * After cancellation, asset providers can withdraw their assets and claims are disabled */\\n    function cancelCampaign() external onlyAdmin {\\n        campaignCancelled = true;\\n        emit CampaignCancelled();\\n    }\\n\\n    /** asset providers can withdraw their proportion of assets only in case the campaign was cancelled by the admin */\\n    function withdrawAssets(address account, address asset) external nonReentrant {\\n        if (campaignCancelled) {\\n            uint256 amount = (balanceOfAsset(asset) * providers[asset][account]) / totalProvided[asset];\\n            if (amount == 0) {\\n                revert NoAssetsToWithdraw();\\n            }\\n            providers[asset][account] = 0;\\n\\n            transferAssetOut(account, amount, asset);\\n\\n            emit Withdraw(account, amount, asset);\\n        } else {\\n            revert WithdrawalNotAllowed();\\n        }\\n    }\\n\\n    receive() external payable notCancelled {\\n        _fund(msg.value, address(0), msg.sender);\\n    }\\n\\n    /***************\\n    VIEW FUNCTIONS\\n    ***************/\\n\\n    /** Returns the currrent balance that the campaign holds for an asset.\\n     * For the native token, asset is the zero address*/\\n    function balanceOfAsset(address asset) public view returns (uint256) {\\n        return asset == address(0) ? address(this).balance : IERC20(asset).balanceOf(address(this));\\n    }\\n\\n    /** Validates the shares of an account */\\n    function verifyShares(\\n        address account,\\n        uint256 share,\\n        bytes32[] calldata proof\\n    ) public view {\\n        bytes32 claimingMerkleRoot = getValidRoot();\\n\\n        bytes32 leaf = keccak256(abi.encodePacked(account, share));\\n        if (MerkleProof.verify(proof, claimingMerkleRoot, leaf) == false) {\\n            revert InvalidProof();\\n        }\\n    }\\n\\n    /** Calculates the amount of available rewards to claim for an account */\\n    function rewardsAvailableToClaimer(\\n        address account,\\n        uint256 share,\\n        address asset\\n    ) public view returns (uint256 total) {\\n        /** Rewards by claimer are a portion of the total assets received. If new assets are received, new rewards will become available */\\n        return (totalReceived(asset) * share) / TOTAL_SHARES - claimed[asset][account];\\n    }\\n\\n    /** Returns true if the active root is the pending one */\\n    function isPendingActive() public view returns (bool isActive) {\\n        return pendingMerkleRoot != bytes32(0) && block.timestamp > activationTime;\\n    }\\n\\n    /** Valid root is either the approved or pending one depending on the activation time */\\n    function getValidRoot() public view returns (bytes32 root) {\\n        return isPendingActive() ? pendingMerkleRoot : approvedMerkleRoot;\\n    }\\n\\n    /** Total assets received by the contract.\\n     * For the native token, asset is the zero address*/\\n    function totalReceived(address asset) public view returns (uint256 total) {\\n        return balanceOfAsset(asset) + totalClaimed[asset];\\n    }\\n\\n    /** Indicates whether the campaign is currently at a challenge period */\\n    function isChallengePeriod() public view returns (bool) {\\n        return block.timestamp < activationTime;\\n    }\\n\\n    /** Returns true if propose window for the oracle is active */\\n    function isProposeWindowActive() public view returns (bool) {\\n        return (uint256(block.timestamp) - uint256(deployTime)) % ACTIVATION_PERIOD < ACTIVE_DURATION;\\n    }\\n\\n    /** Returns true if the oracle can propose a new merkle root */\\n    function checkMerkleRootUpdateAllowed() public view {\\n        if (isChallengePeriod()) {\\n            revert ChallengePeriodActive(block.timestamp);\\n        }\\n\\n        if (!isProposeWindowActive()) {\\n            revert ProposeWindowNotActive(block.timestamp);\\n        }\\n    }\\n\\n    /** variable getters */\\n\\n    /***************\\n    INTERNAL FUNCTIONS\\n    ***************/\\n\\n    /** Claiming is always enabled (effectively possible only when a non-zero approved merkleRoot is set) */\\n    function _claim(\\n        address account,\\n        uint256 share,\\n        address asset,\\n        address sender,\\n        address target\\n    ) internal {\\n        uint256 reward = rewardsAvailableToClaimer(account, share, asset);\\n\\n        claimed[asset][account] += reward;\\n        totalClaimed[asset] += reward;\\n\\n        if (sender == account && target != address(0)) {\\n            transferAssetOut(target, reward, asset);\\n        } else {\\n            transferAssetOut(account, reward, asset);\\n        }\\n\\n        emit Claim(account, share, reward, asset);\\n    }\\n\\n    function _fund(\\n        uint256 amount,\\n        address asset,\\n        address from\\n    ) internal {\\n        providers[asset][from] += amount;\\n        totalProvided[asset] += amount;\\n        if (asset != address(0)) {\\n            IERC20(asset).safeTransferFrom(from, address(this), amount);\\n        }\\n        emit Fund(from, amount, address(asset));\\n    }\\n\\n    function transferAssetOut(\\n        address to,\\n        uint256 amount,\\n        address asset\\n    ) internal {\\n        if (asset == address(0)) {\\n            (bool success, ) = to.call{ value: amount }(\\\"\\\");\\n            require(success, \\\"ether transfer failed\\\");\\n        } else {\\n            IERC20(asset).safeTransfer(to, amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8a12cbb9b65fa6fc1b3ce716b5a1de387bbb16cdcfd04e09de6204ec33a8a82e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":86,"contract":"contracts/Campaign.sol:Campaign","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":89,"contract":"contracts/Campaign.sol:Campaign","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":241,"contract":"contracts/Campaign.sol:Campaign","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":1533,"contract":"contracts/Campaign.sol:Campaign","label":"CHALLENGE_PERIOD","offset":0,"slot":"2","type":"t_uint256"},{"astId":1535,"contract":"contracts/Campaign.sol:Campaign","label":"ACTIVATION_PERIOD","offset":0,"slot":"3","type":"t_uint256"},{"astId":1537,"contract":"contracts/Campaign.sol:Campaign","label":"ACTIVE_DURATION","offset":0,"slot":"4","type":"t_uint256"},{"astId":1539,"contract":"contracts/Campaign.sol:Campaign","label":"approvedMerkleRoot","offset":0,"slot":"5","type":"t_bytes32"},{"astId":1542,"contract":"contracts/Campaign.sol:Campaign","label":"pendingMerkleRoot","offset":0,"slot":"6","type":"t_bytes32"},{"astId":1544,"contract":"contracts/Campaign.sol:Campaign","label":"activationTime","offset":0,"slot":"7","type":"t_uint256"},{"astId":1546,"contract":"contracts/Campaign.sol:Campaign","label":"deployTime","offset":0,"slot":"8","type":"t_uint256"},{"astId":1549,"contract":"contracts/Campaign.sol:Campaign","label":"rewardRulesetUri","offset":0,"slot":"9","type":"t_bytes32"},{"astId":1551,"contract":"contracts/Campaign.sol:Campaign","label":"admin","offset":0,"slot":"10","type":"t_address"},{"astId":1553,"contract":"contracts/Campaign.sol:Campaign","label":"oracle","offset":0,"slot":"11","type":"t_address"},{"astId":1558,"contract":"contracts/Campaign.sol:Campaign","label":"totalClaimed","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint256)"},{"astId":1565,"contract":"contracts/Campaign.sol:Campaign","label":"claimed","offset":0,"slot":"13","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1568,"contract":"contracts/Campaign.sol:Campaign","label":"sharesLocked","offset":0,"slot":"14","type":"t_bool"},{"astId":1571,"contract":"contracts/Campaign.sol:Campaign","label":"campaignCancelled","offset":1,"slot":"14","type":"t_bool"},{"astId":1578,"contract":"contracts/Campaign.sol:Campaign","label":"providers","offset":0,"slot":"15","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1583,"contract":"contracts/Campaign.sol:Campaign","label":"totalProvided","offset":0,"slot":"16","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"TOTAL_SHARES()":{"notice":"Shares are considered a ratio [0-1] with 18 digits where 1E18 = 1 "},"balanceOfAsset(address)":{"notice":"Returns the currrent balance that the campaign holds for an asset. For the native token, asset is the zero address"},"campaignCancelled()":{"notice":"Once cancelled, the assets providers can withdraw "},"cancelCampaign()":{"notice":"Admin can cancel the campaign. After cancellation, asset providers can withdraw their assets and claims are disabled "},"challenge()":{"notice":"Admin can cancel the pending merkle root while in challenge period. Previously approved root will stay active "},"checkMerkleRootUpdateAllowed()":{"notice":"Returns true if the oracle can propose a new merkle root "},"claim(address,uint256,bytes32[],address[],address)":{"notice":"Claim rewards from one or more assets "},"claimed(address,address)":{"notice":"amount of assets already claimed per claimer address, per asset address (zero address represents the native token) "},"fund(address,uint256)":{"notice":"Fund campaign with native or any ERC20 token. For native token, asset is the zero address.  "},"getValidRoot()":{"notice":"Valid root is either the approved or pending one depending on the activation time "},"initCampaign(bytes32,address,address,uint256,uint256,uint256,uint256)":{"notice":"Campaign initialization, called once at deploy (using the campaign factory). CHALLENGE_PERIOD > ACTIVE_DURATION is recommended to limite one proposeal per active window"},"isChallengePeriod()":{"notice":"Indicates whether the campaign is currently at a challenge period "},"isPendingActive()":{"notice":"Returns true if the active root is the pending one "},"isProposeWindowActive()":{"notice":"Returns true if propose window for the oracle is active "},"pendingMerkleRoot()":{"notice":"Optimistic flow used to update merkleRoot. - Oracle propose update and Admin can block - Admin cannot initiate an update "},"proposeShares(bytes32,bytes32)":{"notice":"Only the oracle can propose a new merkleRoot. The proposed root becomes active only after a CHALLENGE_PERIOD "},"providers(address,address)":{"notice":"amount of rewards provided per address of provider, per asset address (zero address represents the native token) "},"rewardRulesetUri()":{"notice":"Uri pointing to the campaign's reward ruleset "},"rewardsAvailableToClaimer(address,uint256,address)":{"notice":"Calculates the amount of available rewards to claim for an account "},"setSharesLock(bool)":{"notice":"Admin can lock the campaign, meaning disable future merkle root updates "},"sharesLocked()":{"notice":"Once locked, the merkleRoot cannot be updated anymore until unlocked "},"totalClaimed(address)":{"notice":"amount of total assets already claimed per asset address (zero address represents the native token) "},"totalProvided(address)":{"notice":"amount of total rewards provided per asset address (zero address represents the native token) "},"totalReceived(address)":{"notice":"Total assets received by the contract. For the native token, asset is the zero address"},"verifyShares(address,uint256,bytes32[])":{"notice":"Validates the shares of an account "},"withdrawAssets(address,address)":{"notice":"asset providers can withdraw their proportion of assets only in case the campaign was cancelled by the admin "}},"version":1}}},"contracts/CampaignFactory.sol":{"CampaignFactory":{"abi":[{"inputs":[{"internalType":"address payable","name":"_master","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"address","name":"newCampaign","type":"address"},{"indexed":false,"internalType":"bytes32","name":"_strategyUri","type":"bytes32"},{"indexed":false,"internalType":"address","name":"_admin","type":"address"},{"indexed":false,"internalType":"address","name":"_oracle","type":"address"},{"indexed":false,"internalType":"uint256","name":"activationTime","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"CampaignCreated","type":"event"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"campaignAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_rewardRulesetUri","type":"bytes32"},{"internalType":"bytes32","name":"_sharesUri","type":"bytes32"},{"internalType":"bytes32","name":"_strategyUri","type":"bytes32"},{"internalType":"address","name":"_admin","type":"address"},{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"uint256","name":"_activationTime","type":"uint256"},{"internalType":"uint256","name":"_CHALLENGE_PERIOD","type":"uint256"},{"internalType":"uint256","name":"_ACTIVATION_PERIOD","type":"uint256"},{"internalType":"uint256","name":"_ACTIVE_DURATION","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"createAndPublishCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_rewardRulesetUri","type":"bytes32"},{"internalType":"address","name":"_admin","type":"address"},{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"uint256","name":"_activationTime","type":"uint256"},{"internalType":"uint256","name":"_CHALLENGE_PERIOD","type":"uint256"},{"internalType":"uint256","name":"_ACTIVATION_PERIOD","type":"uint256"},{"internalType":"uint256","name":"_ACTIVE_DURATION","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"createCampaign","outputs":[{"internalType":"address payable","name":"proxy","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2431":{"entryPoint":null,"id":2431,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":84,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:314:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"103:209:14","statements":[{"body":{"nodeType":"YulBlock","src":"149:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"158:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"151:6:14"},"nodeType":"YulFunctionCall","src":"151:12:14"},"nodeType":"YulExpressionStatement","src":"151:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"124:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"133:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:14"},"nodeType":"YulFunctionCall","src":"120:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"145:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"116:3:14"},"nodeType":"YulFunctionCall","src":"116:32:14"},"nodeType":"YulIf","src":"113:2:14"},{"nodeType":"YulVariableDeclaration","src":"174:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"193:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"187:5:14"},"nodeType":"YulFunctionCall","src":"187:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"178:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"266:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"275:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"268:6:14"},"nodeType":"YulFunctionCall","src":"268:12:14"},"nodeType":"YulExpressionStatement","src":"268:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"225:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"236:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"251:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"256:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"247:3:14"},"nodeType":"YulFunctionCall","src":"247:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"260:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"243:3:14"},"nodeType":"YulFunctionCall","src":"243:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"232:3:14"},"nodeType":"YulFunctionCall","src":"232:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"222:2:14"},"nodeType":"YulFunctionCall","src":"222:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"215:6:14"},"nodeType":"YulFunctionCall","src":"215:50:14"},"nodeType":"YulIf","src":"212:2:14"},{"nodeType":"YulAssignment","src":"291:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"301:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"291:6:14"}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"69:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"80:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"92:6:14","type":""}],"src":"14:298:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161060638038061060683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610573806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635357af3b146100465780636e1a1fac1461005b578063a8e0bb661461008a575b600080fd5b6100596100543660046104a3565b61009d565b005b61006e61006936600461041c565b6101bd565b6040516001600160a01b03909116815260200160405180910390f35b61006e610098366004610435565b6101da565b6040516354705db360e11b8152600481018990526001600160a01b03808916602483015287166044820152606481018690526084810185905260a4810184905260c4810183905260e48101829052600090309063a8e0bb669061010401602060405180830381600087803b15801561011457600080fd5b505af1158015610128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014c91906103ff565b604051630bdce82f60e11b8152600481018d9052602481018c90529091506001600160a01b038216906317b9d05e90604401600060405180830381600087803b15801561019857600080fd5b505af11580156101ac573d6000803e3d6000fd5b505050505050505050505050505050565b600080546101d4906001600160a01b0316836102ee565b92915050565b600080546101f1906001600160a01b03168361035b565b6040516354c565a360e11b8152600481018b90526001600160a01b038a811660248301528981166044830152606482018990526084820188905260a4820187905260c482018690529192509082169063a98acb469060e401600060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b5050604080513381526001600160a01b0385811660208301528183018e90528c811660608301528b16608082015260a081018a905260c0810186905290517f5e2acb8aee19e83f63206e8fd625b2113a58e47d6986e1e5514d514f8e19411093509081900360e0019150a198975050505050505050565b6000610354838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166101d45760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b60006020828403121561041157600080fd5b815161035481610525565b60006020828403121561042e57600080fd5b5035919050565b600080600080600080600080610100898b03121561045257600080fd5b88359750602089013561046481610525565b9650604089013561047481610525565b979a96995096976060810135975060808101359660a0820135965060c0820135955060e0909101359350915050565b6000806000806000806000806000806101408b8d0312156104c357600080fd5b8a35995060208b0135985060408b0135975060608b01356104e381610525565b965060808b01356104f381610525565b999c989b50969995989760a0870135975060c08701359660e08101359650610100810135955061012001359350915050565b6001600160a01b038116811461053a57600080fd5b5056fea2646970667358221220df7e6eec0079e25cf22ab6b5b0ea3afdff2332f254f13d5a46d119c76eb22c6564736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x606 CODESIZE SUB DUP1 PUSH2 0x606 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x573 DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5357AF3B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6E1A1FAC EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xA8E0BB66 EQ PUSH2 0x8A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54705DB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x24 DUP4 ADD MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH4 0xA8E0BB66 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x128 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBDCE82F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x17B9D05E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x2EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54C565A3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xA4 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA98ACB46 SWAP1 PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP15 SWAP1 MSTORE DUP13 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP12 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x5E2ACB8AEE19E83F63206E8FD625B2113A58E47D6986E1E5514D514F8E194110 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP2 POP LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x354 DUP4 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x60 SWAP4 DUP5 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH16 0x5AF43D82803E903D91602B57FD5BF3FF PUSH1 0x80 SHL PUSH1 0x28 DUP3 ADD MSTORE SWAP3 SHL PUSH1 0x38 DUP4 ADD MSTORE PUSH1 0x4C DUP3 ADD MSTORE PUSH1 0x37 DUP1 DUP3 KECCAK256 PUSH1 0x6C DUP4 ADD MSTORE PUSH1 0x55 SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x354 DUP2 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x464 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x474 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP7 SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP7 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP6 POP PUSH1 0xE0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD PUSH2 0x4E3 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD PUSH2 0x4F3 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 SWAP6 SWAP9 SWAP8 PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0xC0 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0xE0 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH2 0x100 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH2 0x120 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH31 0x6EEC0079E25CF22AB6B5B0EA3AFDFF2332F254F13D5A46D119C76EB22C6564 PUSH20 0x6F6C634300080600330000000000000000000000 ","sourceMap":"195:1845:11:-:0;;;415:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;462:6;:26;;-1:-1:-1;;;;;;462:26:11;-1:-1:-1;;;;;462:26:11;;;;;;;;;;195:1845;;14:298:14;92:6;145:2;133:9;124:7;120:23;116:32;113:2;;;161:1;158;151:12;113:2;187:16;;-1:-1:-1;;;;;232:31:14;;222:42;;212:2;;278:1;275;268:12;212:2;301:5;103:209;-1:-1:-1;;;103:209:14:o;:::-;195:1845:11;;;;;;"},"deployedBytecode":{"functionDebugData":{"@campaignAddress_2448":{"entryPoint":445,"id":2448,"parameterSlots":1,"returnSlots":1},"@cloneDeterministic_44":{"entryPoint":859,"id":44,"parameterSlots":2,"returnSlots":1},"@createAndPublishCampaign_2556":{"entryPoint":157,"id":2556,"parameterSlots":10,"returnSlots":0},"@createCampaign_2510":{"entryPoint":474,"id":2510,"parameterSlots":8,"returnSlots":1},"@predictDeterministicAddress_58":{"entryPoint":null,"id":58,"parameterSlots":3,"returnSlots":1},"@predictDeterministicAddress_78":{"entryPoint":750,"id":78,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":1023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":1052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":1077,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_bytes32t_bytes32t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":1187,"id":null,"parameterSlots":2,"returnSlots":10},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_payable_t_bytes32_t_address_t_address_t_uint256_t_bytes32__to_t_address_t_address_t_bytes32_t_address_t_address_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_address":{"entryPoint":1317,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5485:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"103:170:14","statements":[{"body":{"nodeType":"YulBlock","src":"149:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"158:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"151:6:14"},"nodeType":"YulFunctionCall","src":"151:12:14"},"nodeType":"YulExpressionStatement","src":"151:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"124:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"133:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:14"},"nodeType":"YulFunctionCall","src":"120:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"145:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"116:3:14"},"nodeType":"YulFunctionCall","src":"116:32:14"},"nodeType":"YulIf","src":"113:2:14"},{"nodeType":"YulVariableDeclaration","src":"174:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"193:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"187:5:14"},"nodeType":"YulFunctionCall","src":"187:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"178:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"237:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"212:24:14"},"nodeType":"YulFunctionCall","src":"212:31:14"},"nodeType":"YulExpressionStatement","src":"212:31:14"},{"nodeType":"YulAssignment","src":"252:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"262:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"252:6:14"}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"69:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"80:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"92:6:14","type":""}],"src":"14:259:14"},{"body":{"nodeType":"YulBlock","src":"348:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"394:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"403:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"406:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"396:6:14"},"nodeType":"YulFunctionCall","src":"396:12:14"},"nodeType":"YulExpressionStatement","src":"396:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"369:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"378:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"390:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"361:3:14"},"nodeType":"YulFunctionCall","src":"361:32:14"},"nodeType":"YulIf","src":"358:2:14"},{"nodeType":"YulAssignment","src":"419:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"442:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"429:12:14"},"nodeType":"YulFunctionCall","src":"429:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"419:6:14"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"314:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"325:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"337:6:14","type":""}],"src":"278:180:14"},{"body":{"nodeType":"YulBlock","src":"652:612:14","statements":[{"body":{"nodeType":"YulBlock","src":"699:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"708:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"711:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"701:6:14"},"nodeType":"YulFunctionCall","src":"701:12:14"},"nodeType":"YulExpressionStatement","src":"701:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"673:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"682:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"669:3:14"},"nodeType":"YulFunctionCall","src":"669:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"694:3:14","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"665:3:14"},"nodeType":"YulFunctionCall","src":"665:33:14"},"nodeType":"YulIf","src":"662:2:14"},{"nodeType":"YulAssignment","src":"724:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"747:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"734:12:14"},"nodeType":"YulFunctionCall","src":"734:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"724:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"766:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"796:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"807:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"792:3:14"},"nodeType":"YulFunctionCall","src":"792:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"779:12:14"},"nodeType":"YulFunctionCall","src":"779:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"770:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"845:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"820:24:14"},"nodeType":"YulFunctionCall","src":"820:31:14"},"nodeType":"YulExpressionStatement","src":"820:31:14"},{"nodeType":"YulAssignment","src":"860:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"870:5:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"860:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"884:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"916:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"927:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"912:3:14"},"nodeType":"YulFunctionCall","src":"912:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"899:12:14"},"nodeType":"YulFunctionCall","src":"899:32:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"888:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"965:7:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"940:24:14"},"nodeType":"YulFunctionCall","src":"940:33:14"},"nodeType":"YulExpressionStatement","src":"940:33:14"},{"nodeType":"YulAssignment","src":"982:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"992:7:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"982:6:14"}]},{"nodeType":"YulAssignment","src":"1008:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1035:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1046:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1031:3:14"},"nodeType":"YulFunctionCall","src":"1031:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1018:12:14"},"nodeType":"YulFunctionCall","src":"1018:32:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1008:6:14"}]},{"nodeType":"YulAssignment","src":"1059:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1086:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1097:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1082:3:14"},"nodeType":"YulFunctionCall","src":"1082:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1069:12:14"},"nodeType":"YulFunctionCall","src":"1069:33:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1059:6:14"}]},{"nodeType":"YulAssignment","src":"1111:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1149:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:14"},"nodeType":"YulFunctionCall","src":"1134:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1121:12:14"},"nodeType":"YulFunctionCall","src":"1121:33:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1111:6:14"}]},{"nodeType":"YulAssignment","src":"1163:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1201:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1186:3:14"},"nodeType":"YulFunctionCall","src":"1186:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1173:12:14"},"nodeType":"YulFunctionCall","src":"1173:33:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1163:6:14"}]},{"nodeType":"YulAssignment","src":"1215:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1253:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:14"},"nodeType":"YulFunctionCall","src":"1238:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1225:12:14"},"nodeType":"YulFunctionCall","src":"1225:33:14"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"1215:6:14"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"562:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"573:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"585:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"593:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"601:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"609:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"617:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"625:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"633:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"641:6:14","type":""}],"src":"463:801:14"},{"body":{"nodeType":"YulBlock","src":"1492:716:14","statements":[{"body":{"nodeType":"YulBlock","src":"1539:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1548:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1551:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1541:6:14"},"nodeType":"YulFunctionCall","src":"1541:12:14"},"nodeType":"YulExpressionStatement","src":"1541:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1513:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1522:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1509:3:14"},"nodeType":"YulFunctionCall","src":"1509:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1534:3:14","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1505:3:14"},"nodeType":"YulFunctionCall","src":"1505:33:14"},"nodeType":"YulIf","src":"1502:2:14"},{"nodeType":"YulAssignment","src":"1564:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1587:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1574:12:14"},"nodeType":"YulFunctionCall","src":"1574:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1564:6:14"}]},{"nodeType":"YulAssignment","src":"1606:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1633:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1644:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1629:3:14"},"nodeType":"YulFunctionCall","src":"1629:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1616:12:14"},"nodeType":"YulFunctionCall","src":"1616:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1606:6:14"}]},{"nodeType":"YulAssignment","src":"1657:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1684:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1695:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1680:3:14"},"nodeType":"YulFunctionCall","src":"1680:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1667:12:14"},"nodeType":"YulFunctionCall","src":"1667:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1657:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1708:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1738:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1749:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1734:3:14"},"nodeType":"YulFunctionCall","src":"1734:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1721:12:14"},"nodeType":"YulFunctionCall","src":"1721:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1712:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1787:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1762:24:14"},"nodeType":"YulFunctionCall","src":"1762:31:14"},"nodeType":"YulExpressionStatement","src":"1762:31:14"},{"nodeType":"YulAssignment","src":"1802:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1812:5:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1802:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1826:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1858:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1869:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1854:3:14"},"nodeType":"YulFunctionCall","src":"1854:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1841:12:14"},"nodeType":"YulFunctionCall","src":"1841:33:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1830:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1908:7:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1883:24:14"},"nodeType":"YulFunctionCall","src":"1883:33:14"},"nodeType":"YulExpressionStatement","src":"1883:33:14"},{"nodeType":"YulAssignment","src":"1925:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1935:7:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1925:6:14"}]},{"nodeType":"YulAssignment","src":"1951:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1989:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1974:3:14"},"nodeType":"YulFunctionCall","src":"1974:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1961:12:14"},"nodeType":"YulFunctionCall","src":"1961:33:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1951:6:14"}]},{"nodeType":"YulAssignment","src":"2003:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2030:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2041:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:14"},"nodeType":"YulFunctionCall","src":"2026:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2013:12:14"},"nodeType":"YulFunctionCall","src":"2013:33:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2003:6:14"}]},{"nodeType":"YulAssignment","src":"2055:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2082:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2093:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2078:3:14"},"nodeType":"YulFunctionCall","src":"2078:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2065:12:14"},"nodeType":"YulFunctionCall","src":"2065:33:14"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"2055:6:14"}]},{"nodeType":"YulAssignment","src":"2107:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2134:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2145:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2130:3:14"},"nodeType":"YulFunctionCall","src":"2130:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2117:12:14"},"nodeType":"YulFunctionCall","src":"2117:33:14"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"2107:6:14"}]},{"nodeType":"YulAssignment","src":"2159:43:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2186:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2197:3:14","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2182:3:14"},"nodeType":"YulFunctionCall","src":"2182:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2169:12:14"},"nodeType":"YulFunctionCall","src":"2169:33:14"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"2159:6:14"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1386:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1397:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1409:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1417:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1425:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1433:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1441:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1449:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1457:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1465:6:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1473:6:14","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1481:6:14","type":""}],"src":"1269:939:14"},{"body":{"nodeType":"YulBlock","src":"2314:102:14","statements":[{"nodeType":"YulAssignment","src":"2324:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2336:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2332:3:14"},"nodeType":"YulFunctionCall","src":"2332:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2324:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2366:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2381:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2397:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2402:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2393:3:14"},"nodeType":"YulFunctionCall","src":"2393:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2406:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2389:3:14"},"nodeType":"YulFunctionCall","src":"2389:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2377:3:14"},"nodeType":"YulFunctionCall","src":"2377:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2359:6:14"},"nodeType":"YulFunctionCall","src":"2359:51:14"},"nodeType":"YulExpressionStatement","src":"2359:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2283:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2294:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2305:4:14","type":""}],"src":"2213:203:14"},{"body":{"nodeType":"YulBlock","src":"2538:102:14","statements":[{"nodeType":"YulAssignment","src":"2548:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2560:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2571:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2556:3:14"},"nodeType":"YulFunctionCall","src":"2556:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2548:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2590:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2605:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2621:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2626:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2617:3:14"},"nodeType":"YulFunctionCall","src":"2617:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2630:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2613:3:14"},"nodeType":"YulFunctionCall","src":"2613:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2601:3:14"},"nodeType":"YulFunctionCall","src":"2601:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2583:6:14"},"nodeType":"YulFunctionCall","src":"2583:51:14"},"nodeType":"YulExpressionStatement","src":"2583:51:14"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2507:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2518:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2529:4:14","type":""}],"src":"2421:219:14"},{"body":{"nodeType":"YulBlock","src":"2922:412:14","statements":[{"nodeType":"YulAssignment","src":"2932:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2944:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2955:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2940:3:14"},"nodeType":"YulFunctionCall","src":"2940:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2932:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"2968:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2986:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2991:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2982:3:14"},"nodeType":"YulFunctionCall","src":"2982:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2995:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2978:3:14"},"nodeType":"YulFunctionCall","src":"2978:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2972:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3013:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3028:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3036:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3024:3:14"},"nodeType":"YulFunctionCall","src":"3024:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3006:6:14"},"nodeType":"YulFunctionCall","src":"3006:34:14"},"nodeType":"YulExpressionStatement","src":"3006:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3060:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3071:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3056:3:14"},"nodeType":"YulFunctionCall","src":"3056:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3080:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3088:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3076:3:14"},"nodeType":"YulFunctionCall","src":"3076:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3049:6:14"},"nodeType":"YulFunctionCall","src":"3049:43:14"},"nodeType":"YulExpressionStatement","src":"3049:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3112:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3123:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3108:3:14"},"nodeType":"YulFunctionCall","src":"3108:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"3128:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3101:6:14"},"nodeType":"YulFunctionCall","src":"3101:34:14"},"nodeType":"YulExpressionStatement","src":"3101:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3155:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3166:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:14"},"nodeType":"YulFunctionCall","src":"3151:18:14"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"3175:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3183:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3171:3:14"},"nodeType":"YulFunctionCall","src":"3171:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3144:6:14"},"nodeType":"YulFunctionCall","src":"3144:43:14"},"nodeType":"YulExpressionStatement","src":"3144:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3218:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3203:3:14"},"nodeType":"YulFunctionCall","src":"3203:19:14"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3228:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3236:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3224:3:14"},"nodeType":"YulFunctionCall","src":"3224:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3196:6:14"},"nodeType":"YulFunctionCall","src":"3196:44:14"},"nodeType":"YulExpressionStatement","src":"3196:44:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3260:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3271:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3256:3:14"},"nodeType":"YulFunctionCall","src":"3256:19:14"},{"name":"value5","nodeType":"YulIdentifier","src":"3277:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3249:6:14"},"nodeType":"YulFunctionCall","src":"3249:35:14"},"nodeType":"YulExpressionStatement","src":"3249:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3304:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3315:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3300:3:14"},"nodeType":"YulFunctionCall","src":"3300:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"3321:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3293:6:14"},"nodeType":"YulFunctionCall","src":"3293:35:14"},"nodeType":"YulExpressionStatement","src":"3293:35:14"}]},"name":"abi_encode_tuple_t_address_t_address_payable_t_bytes32_t_address_t_address_t_uint256_t_bytes32__to_t_address_t_address_t_bytes32_t_address_t_address_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2843:9:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2854:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2862:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2870:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2878:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2886:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2894:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2902:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2913:4:14","type":""}],"src":"2645:689:14"},{"body":{"nodeType":"YulBlock","src":"3608:394:14","statements":[{"nodeType":"YulAssignment","src":"3618:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3630:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3641:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3626:3:14"},"nodeType":"YulFunctionCall","src":"3626:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3618:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3661:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3672:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3654:6:14"},"nodeType":"YulFunctionCall","src":"3654:25:14"},"nodeType":"YulExpressionStatement","src":"3654:25:14"},{"nodeType":"YulVariableDeclaration","src":"3688:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3706:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3711:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3702:3:14"},"nodeType":"YulFunctionCall","src":"3702:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"3715:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3698:3:14"},"nodeType":"YulFunctionCall","src":"3698:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3692:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3737:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3748:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:14"},"nodeType":"YulFunctionCall","src":"3733:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3757:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3765:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:14"},"nodeType":"YulFunctionCall","src":"3753:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3726:6:14"},"nodeType":"YulFunctionCall","src":"3726:43:14"},"nodeType":"YulExpressionStatement","src":"3726:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3789:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3800:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3785:3:14"},"nodeType":"YulFunctionCall","src":"3785:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3809:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3817:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3805:3:14"},"nodeType":"YulFunctionCall","src":"3805:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3778:6:14"},"nodeType":"YulFunctionCall","src":"3778:43:14"},"nodeType":"YulExpressionStatement","src":"3778:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3841:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3852:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3837:3:14"},"nodeType":"YulFunctionCall","src":"3837:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"3857:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3830:6:14"},"nodeType":"YulFunctionCall","src":"3830:34:14"},"nodeType":"YulExpressionStatement","src":"3830:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3884:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3895:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3880:3:14"},"nodeType":"YulFunctionCall","src":"3880:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"3901:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3873:6:14"},"nodeType":"YulFunctionCall","src":"3873:35:14"},"nodeType":"YulExpressionStatement","src":"3873:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3939:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3924:3:14"},"nodeType":"YulFunctionCall","src":"3924:19:14"},{"name":"value5","nodeType":"YulIdentifier","src":"3945:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3917:6:14"},"nodeType":"YulFunctionCall","src":"3917:35:14"},"nodeType":"YulExpressionStatement","src":"3917:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3972:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3983:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3968:3:14"},"nodeType":"YulFunctionCall","src":"3968:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"3989:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3961:6:14"},"nodeType":"YulFunctionCall","src":"3961:35:14"},"nodeType":"YulExpressionStatement","src":"3961:35:14"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3529:9:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3540:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3548:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3556:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3564:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3572:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3580:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3588:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3599:4:14","type":""}],"src":"3339:663:14"},{"body":{"nodeType":"YulBlock","src":"4304:438:14","statements":[{"nodeType":"YulAssignment","src":"4314:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4326:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4337:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4322:3:14"},"nodeType":"YulFunctionCall","src":"4322:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4314:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4357:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"4368:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4350:6:14"},"nodeType":"YulFunctionCall","src":"4350:25:14"},"nodeType":"YulExpressionStatement","src":"4350:25:14"},{"nodeType":"YulVariableDeclaration","src":"4384:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4402:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4407:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4398:3:14"},"nodeType":"YulFunctionCall","src":"4398:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"4411:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4394:3:14"},"nodeType":"YulFunctionCall","src":"4394:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4388:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4433:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4444:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4429:3:14"},"nodeType":"YulFunctionCall","src":"4429:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4453:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4461:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4449:3:14"},"nodeType":"YulFunctionCall","src":"4449:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4422:6:14"},"nodeType":"YulFunctionCall","src":"4422:43:14"},"nodeType":"YulExpressionStatement","src":"4422:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4485:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4496:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4481:3:14"},"nodeType":"YulFunctionCall","src":"4481:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4505:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4513:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4501:3:14"},"nodeType":"YulFunctionCall","src":"4501:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4474:6:14"},"nodeType":"YulFunctionCall","src":"4474:43:14"},"nodeType":"YulExpressionStatement","src":"4474:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4537:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4548:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4533:3:14"},"nodeType":"YulFunctionCall","src":"4533:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"4553:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4526:6:14"},"nodeType":"YulFunctionCall","src":"4526:34:14"},"nodeType":"YulExpressionStatement","src":"4526:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4580:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4591:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4576:3:14"},"nodeType":"YulFunctionCall","src":"4576:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"4597:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4569:6:14"},"nodeType":"YulFunctionCall","src":"4569:35:14"},"nodeType":"YulExpressionStatement","src":"4569:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4624:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4635:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4620:3:14"},"nodeType":"YulFunctionCall","src":"4620:19:14"},{"name":"value5","nodeType":"YulIdentifier","src":"4641:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4613:6:14"},"nodeType":"YulFunctionCall","src":"4613:35:14"},"nodeType":"YulExpressionStatement","src":"4613:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4668:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4679:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4664:3:14"},"nodeType":"YulFunctionCall","src":"4664:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"4685:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4657:6:14"},"nodeType":"YulFunctionCall","src":"4657:35:14"},"nodeType":"YulExpressionStatement","src":"4657:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4712:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4723:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4708:3:14"},"nodeType":"YulFunctionCall","src":"4708:19:14"},{"name":"value7","nodeType":"YulIdentifier","src":"4729:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4701:6:14"},"nodeType":"YulFunctionCall","src":"4701:35:14"},"nodeType":"YulExpressionStatement","src":"4701:35:14"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4217:9:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"4228:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4236:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4244:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4252:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4260:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4268:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4276:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4284:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4295:4:14","type":""}],"src":"4007:735:14"},{"body":{"nodeType":"YulBlock","src":"4876:119:14","statements":[{"nodeType":"YulAssignment","src":"4886:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4898:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4909:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4894:3:14"},"nodeType":"YulFunctionCall","src":"4894:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4886:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4928:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"4939:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4921:6:14"},"nodeType":"YulFunctionCall","src":"4921:25:14"},"nodeType":"YulExpressionStatement","src":"4921:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4966:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4977:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4962:3:14"},"nodeType":"YulFunctionCall","src":"4962:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"4982:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4955:6:14"},"nodeType":"YulFunctionCall","src":"4955:34:14"},"nodeType":"YulExpressionStatement","src":"4955:34:14"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4837:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4848:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4856:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4867:4:14","type":""}],"src":"4747:248:14"},{"body":{"nodeType":"YulBlock","src":"5174:173:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5202:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5184:6:14"},"nodeType":"YulFunctionCall","src":"5184:21:14"},"nodeType":"YulExpressionStatement","src":"5184:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5225:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5236:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5221:3:14"},"nodeType":"YulFunctionCall","src":"5221:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5241:2:14","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5214:6:14"},"nodeType":"YulFunctionCall","src":"5214:30:14"},"nodeType":"YulExpressionStatement","src":"5214:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5264:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5275:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5260:3:14"},"nodeType":"YulFunctionCall","src":"5260:18:14"},{"hexValue":"455243313136373a2063726561746532206661696c6564","kind":"string","nodeType":"YulLiteral","src":"5280:25:14","type":"","value":"ERC1167: create2 failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5253:6:14"},"nodeType":"YulFunctionCall","src":"5253:53:14"},"nodeType":"YulExpressionStatement","src":"5253:53:14"},{"nodeType":"YulAssignment","src":"5315:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5327:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5338:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5323:3:14"},"nodeType":"YulFunctionCall","src":"5323:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5315:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5151:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5165:4:14","type":""}],"src":"5000:347:14"},{"body":{"nodeType":"YulBlock","src":"5397:86:14","statements":[{"body":{"nodeType":"YulBlock","src":"5461:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5470:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5473:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5463:6:14"},"nodeType":"YulFunctionCall","src":"5463:12:14"},"nodeType":"YulExpressionStatement","src":"5463:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5420:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5431:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5446:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5451:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5442:3:14"},"nodeType":"YulFunctionCall","src":"5442:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5455:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5438:3:14"},"nodeType":"YulFunctionCall","src":"5438:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5427:3:14"},"nodeType":"YulFunctionCall","src":"5427:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5417:2:14"},"nodeType":"YulFunctionCall","src":"5417:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5410:6:14"},"nodeType":"YulFunctionCall","src":"5410:50:14"},"nodeType":"YulIf","src":"5407:2:14"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5386:5:14","type":""}],"src":"5352:131:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_bytes32t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n        value8 := calldataload(add(headStart, 256))\n        value9 := calldataload(add(headStart, 288))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_bytes32_t_address_t_address_t_uint256_t_bytes32__to_t_address_t_address_t_bytes32_t_address_t_address_t_uint256_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"ERC1167: create2 failed\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80635357af3b146100465780636e1a1fac1461005b578063a8e0bb661461008a575b600080fd5b6100596100543660046104a3565b61009d565b005b61006e61006936600461041c565b6101bd565b6040516001600160a01b03909116815260200160405180910390f35b61006e610098366004610435565b6101da565b6040516354705db360e11b8152600481018990526001600160a01b03808916602483015287166044820152606481018690526084810185905260a4810184905260c4810183905260e48101829052600090309063a8e0bb669061010401602060405180830381600087803b15801561011457600080fd5b505af1158015610128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014c91906103ff565b604051630bdce82f60e11b8152600481018d9052602481018c90529091506001600160a01b038216906317b9d05e90604401600060405180830381600087803b15801561019857600080fd5b505af11580156101ac573d6000803e3d6000fd5b505050505050505050505050505050565b600080546101d4906001600160a01b0316836102ee565b92915050565b600080546101f1906001600160a01b03168361035b565b6040516354c565a360e11b8152600481018b90526001600160a01b038a811660248301528981166044830152606482018990526084820188905260a4820187905260c482018690529192509082169063a98acb469060e401600060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b5050604080513381526001600160a01b0385811660208301528183018e90528c811660608301528b16608082015260a081018a905260c0810186905290517f5e2acb8aee19e83f63206e8fd625b2113a58e47d6986e1e5514d514f8e19411093509081900360e0019150a198975050505050505050565b6000610354838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166101d45760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b60006020828403121561041157600080fd5b815161035481610525565b60006020828403121561042e57600080fd5b5035919050565b600080600080600080600080610100898b03121561045257600080fd5b88359750602089013561046481610525565b9650604089013561047481610525565b979a96995096976060810135975060808101359660a0820135965060c0820135955060e0909101359350915050565b6000806000806000806000806000806101408b8d0312156104c357600080fd5b8a35995060208b0135985060408b0135975060608b01356104e381610525565b965060808b01356104f381610525565b999c989b50969995989760a0870135975060c08701359660e08101359650610100810135955061012001359350915050565b6001600160a01b038116811461053a57600080fd5b5056fea2646970667358221220df7e6eec0079e25cf22ab6b5b0ea3afdff2332f254f13d5a46d119c76eb22c6564736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5357AF3B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6E1A1FAC EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xA8E0BB66 EQ PUSH2 0x8A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54705DB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x24 DUP4 ADD MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH4 0xA8E0BB66 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x128 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBDCE82F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x17B9D05E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x2EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54C565A3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xA4 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA98ACB46 SWAP1 PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP15 SWAP1 MSTORE DUP13 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP12 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x5E2ACB8AEE19E83F63206E8FD625B2113A58E47D6986E1E5514D514F8E194110 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP2 POP LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x354 DUP4 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x60 SWAP4 DUP5 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH16 0x5AF43D82803E903D91602B57FD5BF3FF PUSH1 0x80 SHL PUSH1 0x28 DUP3 ADD MSTORE SWAP3 SHL PUSH1 0x38 DUP4 ADD MSTORE PUSH1 0x4C DUP3 ADD MSTORE PUSH1 0x37 DUP1 DUP3 KECCAK256 PUSH1 0x6C DUP4 ADD MSTORE PUSH1 0x55 SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x354 DUP2 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x464 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x474 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP7 SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP7 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP6 POP PUSH1 0xE0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD PUSH2 0x4E3 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD PUSH2 0x4F3 DUP2 PUSH2 0x525 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 SWAP6 SWAP9 SWAP8 PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0xC0 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0xE0 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH2 0x100 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH2 0x120 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH31 0x6EEC0079E25CF22AB6B5B0EA3AFDFF2332F254F13D5A46D119C76EB22C6564 PUSH20 0x6F6C634300080600330000000000000000000000 ","sourceMap":"195:1845:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:698;;;;;;:::i;:::-;;:::i;:::-;;501:150;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2377:32:14;;;2359:51;;2347:2;2332:18;501:150:11;;;;;;;657:677;;;;;;:::i;:::-;;:::i;1340:698::-;1725:236;;-1:-1:-1;;;1725:236:11;;;;;4350:25:14;;;-1:-1:-1;;;;;4449:15:14;;;4429:18;;;4422:43;4501:15;;4481:18;;;4474:43;4533:18;;;4526:34;;;4576:19;;;4569:35;;;4620:19;;;4613:35;;;4664:19;;;4657:35;;;4708:19;;;4701:35;;;1701:21:11;;1725:4;;:19;;4322::14;;1725:236:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1971:60;;-1:-1:-1;;;1971:60:11;;;;;4921:25:14;;;4962:18;;;4955:34;;;1701:260:11;;-1:-1:-1;;;;;;1971:29:11;;;;;4894:18:14;;1971:60:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1691:347;1340:698;;;;;;;;;;:::o;501:150::-;561:7;630:6;;587:57;;-1:-1:-1;;;;;630:6:11;639:4;587:34;:57::i;:::-;580:64;501:150;-1:-1:-1;;501:150:11:o;657:677::-;949:21;1032:6;;998:48;;-1:-1:-1;;;;;1032:6:11;1041:4;998:25;:48::i;:::-;1057:138;;-1:-1:-1;;;1057:138:11;;;;;3654:25:14;;;-1:-1:-1;;;;;3753:15:14;;;3733:18;;;3726:43;3805:15;;;3785:18;;;3778:43;3837:18;;;3830:34;;;3880:19;;;3873:35;;;3924:19;;;3917:35;;;3968:19;;;3961:35;;;982:65:11;;-1:-1:-1;1057:28:11;;;;;;3626:19:14;;1057:138:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1211:93:11;;;1227:10;3006:34:14;;-1:-1:-1;;;;;3076:15:14;;;3071:2;3056:18;;3049:43;3108:18;;;3101:34;;;3171:15;;;3166:2;3151:18;;3144:43;3224:15;;3218:3;3203:19;;3196:44;2986:3;3256:19;;3249:35;;;3315:3;3300:19;;3293:35;;;1211:93:11;;;;-1:-1:-1;1211:93:11;;;;2955:3:14;1211:93:11;;-1:-1:-1;1211:93:11;657:677;;;;;;;;;;:::o;3466:233:0:-;3588:17;3628:64;3656:14;3672:4;3686;2867;2861:11;-1:-1:-1;;;2885:79:0;;3004:4;3000:25;;;2993:4;2984:14;;2977:49;-1:-1:-1;;;3055:4:0;3046:14;;3039:90;3165:19;;3158:4;3149:14;;3142:43;3214:4;3205:14;;3198:28;3277:4;3262:20;;;3255:4;3246:14;;3239:44;3335:4;3319:14;;3309:31;;2609:747;3628:64;3621:71;3466:233;-1:-1:-1;;;3466:233:0:o;1906:593::-;1990:16;2101:4;2095:11;-1:-1:-1;;;2126:3:0;2119:79;2244:14;2238:4;2234:25;2227:4;2222:3;2218:14;2211:49;-1:-1:-1;;;2289:4:0;2284:3;2280:14;2273:90;2410:4;2404;2399:3;2396:1;2388:27;2376:39;-1:-1:-1;;;;;;;2442:22:0;;2434:58;;;;-1:-1:-1;;;2434:58:0;;5202:2:14;2434:58:0;;;5184:21:14;5241:2;5221:18;;;5214:30;5280:25;5260:18;;;5253:53;5323:18;;2434:58:0;;;;;;;14:259:14;92:6;145:2;133:9;124:7;120:23;116:32;113:2;;;161:1;158;151:12;113:2;193:9;187:16;212:31;237:5;212:31;:::i;278:180::-;337:6;390:2;378:9;369:7;365:23;361:32;358:2;;;406:1;403;396:12;358:2;-1:-1:-1;429:23:14;;348:110;-1:-1:-1;348:110:14:o;463:801::-;585:6;593;601;609;617;625;633;641;694:3;682:9;673:7;669:23;665:33;662:2;;;711:1;708;701:12;662:2;747:9;734:23;724:33;;807:2;796:9;792:18;779:32;820:31;845:5;820:31;:::i;:::-;870:5;-1:-1:-1;927:2:14;912:18;;899:32;940:33;899:32;940:33;:::i;:::-;652:612;;;;-1:-1:-1;992:7:14;;1046:2;1031:18;;1018:32;;-1:-1:-1;1097:3:14;1082:19;;1069:33;;1149:3;1134:19;;1121:33;;-1:-1:-1;1201:3:14;1186:19;;1173:33;;-1:-1:-1;1253:3:14;1238:19;;;1225:33;;-1:-1:-1;652:612:14;-1:-1:-1;;652:612:14:o;1269:939::-;1409:6;1417;1425;1433;1441;1449;1457;1465;1473;1481;1534:3;1522:9;1513:7;1509:23;1505:33;1502:2;;;1551:1;1548;1541:12;1502:2;1587:9;1574:23;1564:33;;1644:2;1633:9;1629:18;1616:32;1606:42;;1695:2;1684:9;1680:18;1667:32;1657:42;;1749:2;1738:9;1734:18;1721:32;1762:31;1787:5;1762:31;:::i;:::-;1812:5;-1:-1:-1;1869:3:14;1854:19;;1841:33;1883;1841;1883;:::i;:::-;1492:716;;;;-1:-1:-1;1492:716:14;;;;1935:7;1989:3;1974:19;;1961:33;;-1:-1:-1;2041:3:14;2026:19;;2013:33;;2093:3;2078:19;;2065:33;;-1:-1:-1;2145:3:14;2130:19;;2117:33;;-1:-1:-1;2197:3:14;2182:19;2169:33;;-1:-1:-1;1492:716:14;-1:-1:-1;;1492:716:14:o;5352:131::-;-1:-1:-1;;;;;5427:31:14;;5417:42;;5407:2;;5473:1;5470;5463:12;5407:2;5397:86;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"279000","executionCost":"infinite","totalCost":"infinite"},"external":{"campaignAddress(bytes32)":"2717","createAndPublishCampaign(bytes32,bytes32,bytes32,address,address,uint256,uint256,uint256,uint256,bytes32)":"infinite","createCampaign(bytes32,address,address,uint256,uint256,uint256,uint256,bytes32)":"infinite"}},"methodIdentifiers":{"campaignAddress(bytes32)":"6e1a1fac","createAndPublishCampaign(bytes32,bytes32,bytes32,address,address,uint256,uint256,uint256,uint256,bytes32)":"5357af3b","createCampaign(bytes32,address,address,uint256,uint256,uint256,uint256,bytes32)":"a8e0bb66"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_master\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCampaign\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_strategyUri\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"campaignAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rewardRulesetUri\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_sharesUri\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_strategyUri\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_activationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_CHALLENGE_PERIOD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ACTIVATION_PERIOD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ACTIVE_DURATION\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createAndPublishCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rewardRulesetUri\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_activationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_CHALLENGE_PERIOD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ACTIVATION_PERIOD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ACTIVE_DURATION\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CampaignFactory.sol\":\"CampaignFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The proofs can be generated using the JavaScript library\\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\\n *\\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the merkle tree could be reinterpreted as a leaf value.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(\\n        bytes32[] memory proof,\\n        bytes32 root,\\n        bytes32 leaf\\n    ) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function verifyCalldata(\\n        bytes32[] calldata proof,\\n        bytes32 root,\\n        bytes32 leaf\\n    ) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\\n     * consuming from one or the other at each step according to the instructions given by\\n     * `proofFlags`.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proof.length - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value for the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            return hashes[totalHashes - 1];\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proof.length - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value for the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            return hashes[totalHashes - 1];\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title Campaign\\n */\\ncontract Campaign is Initializable, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n\\n    /** Shares are considered a ratio [0-1] with 18 digits where 1E18 = 1 */\\n    uint256 public constant TOTAL_SHARES = 10**18;\\n\\n    uint256 public CHALLENGE_PERIOD;\\n    uint256 public ACTIVATION_PERIOD;\\n    uint256 public ACTIVE_DURATION;\\n\\n    bytes32 public approvedMerkleRoot;\\n\\n    /** Optimistic flow used to update merkleRoot.\\n     * - Oracle propose update and Admin can block\\n     * - Admin cannot initiate an update */\\n    bytes32 public pendingMerkleRoot;\\n    uint256 public activationTime;\\n    uint256 public deployTime;\\n\\n    /** Uri pointing to the campaign's reward ruleset */\\n    bytes32 public rewardRulesetUri;\\n\\n    address public admin;\\n    address public oracle;\\n\\n    /** amount of total assets already claimed per asset address (zero address represents the native token) */\\n    mapping(address => uint256) public totalClaimed;\\n    /** amount of assets already claimed per claimer address, per asset address (zero address represents the native token) */\\n    mapping(address => mapping(address => uint256)) public claimed;\\n\\n    /** Once locked, the merkleRoot cannot be updated anymore until unlocked */\\n    bool public sharesLocked;\\n    /** Once cancelled, the assets providers can withdraw */\\n    bool public campaignCancelled;\\n\\n    /** amount of rewards provided per address of provider, per asset address (zero address represents the native token) */\\n    mapping(address => mapping(address => uint256)) public providers;\\n    /** amount of total rewards provided per asset address (zero address represents the native token) */\\n    mapping(address => uint256) public totalProvided;\\n\\n    event Fund(address indexed provider, uint256 amount, address asset);\\n    event SharesMerkleRootUpdate(bytes32 sharesMerkleRoot, bytes32 sharesUri, uint256 activationTime);\\n    event Claim(address indexed account, uint256 share, uint256 reward, address assset);\\n    event Challenge();\\n    event Withdraw(address indexed account, uint256 amount, address asset);\\n    event SharesLock(bool locked);\\n    event CampaignCancelled();\\n\\n    error InvalidProof();\\n    error ProposeWindowNotActive(uint256 blockTime);\\n    error ChallengePeriodActive(uint256 blockTime);\\n    error OnlyInChallengePeriod(uint256 blockTime);\\n    error NoRewardAvailable();\\n    error OnlyAdmin();\\n    error WithdrawalNotAllowed();\\n    error NoAssetsToWithdraw();\\n    error OnlyOracle();\\n    error NotIfCampaignLocked();\\n    error NotIfCampaignCancelled();\\n\\n    modifier onlyAdmin() {\\n        if (msg.sender != admin) {\\n            revert OnlyAdmin();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyOracle() {\\n        if (msg.sender != oracle) {\\n            revert OnlyOracle();\\n        }\\n        _;\\n    }\\n\\n    modifier notLocked() {\\n        if (sharesLocked) {\\n            revert NotIfCampaignLocked();\\n        }\\n        _;\\n    }\\n\\n    modifier notCancelled() {\\n        if (campaignCancelled) {\\n            revert NotIfCampaignCancelled();\\n        }\\n        _;\\n    }\\n\\n    /***************\\n    EXTERNAL FUNCTIONS\\n    ***************/\\n\\n    /**\\n     * Campaign initialization, called once at deploy (using the campaign factory).\\n     * CHALLENGE_PERIOD > ACTIVE_DURATION is recommended to limite one proposeal per\\n     * active window\\n     */\\n    function initCampaign(\\n        bytes32 _rewardRulesetUri,\\n        address _admin,\\n        address _oracle,\\n        uint256 _activationTime,\\n        uint256 _CHALLENGE_PERIOD,\\n        uint256 _ACTIVATION_PERIOD,\\n        uint256 _ACTIVE_DURATION\\n    ) external initializer {\\n        rewardRulesetUri = _rewardRulesetUri;\\n        admin = _admin;\\n        oracle = _oracle;\\n        activationTime = _activationTime > 0 ? _activationTime : block.timestamp;\\n        deployTime = block.timestamp;\\n\\n        CHALLENGE_PERIOD = _CHALLENGE_PERIOD;\\n        ACTIVATION_PERIOD = _ACTIVATION_PERIOD;\\n        ACTIVE_DURATION = _ACTIVE_DURATION;\\n    }\\n\\n    /** Fund campaign with native or any ERC20 token.\\n     * For native token, asset is the zero address.  */\\n    function fund(address asset, uint256 amount) external payable nonReentrant notCancelled {\\n        if (asset == address(0)) {\\n            _fund(msg.value, asset, msg.sender);\\n        } else {\\n            _fund(amount, asset, msg.sender);\\n        }\\n    }\\n\\n    /** Only the oracle can propose a new merkleRoot. The proposed root becomes active only\\n     * after a CHALLENGE_PERIOD */\\n    function proposeShares(bytes32 _sharesMerkleRoot, bytes32 _sharesUri) external onlyOracle notLocked notCancelled {\\n        checkMerkleRootUpdateAllowed();\\n\\n        approvedMerkleRoot = pendingMerkleRoot;\\n        pendingMerkleRoot = _sharesMerkleRoot;\\n        activationTime = block.timestamp + CHALLENGE_PERIOD;\\n\\n        emit SharesMerkleRootUpdate(_sharesMerkleRoot, _sharesUri, activationTime);\\n    }\\n\\n    /** Claim rewards from one or more assets */\\n    function claim(\\n        address account,\\n        uint256 share,\\n        bytes32[] calldata proof,\\n        address[] calldata assets,\\n        address target\\n    ) external nonReentrant notCancelled {\\n        verifyShares(account, share, proof);\\n\\n        for (uint8 ix = 0; ix < assets.length; ix++) {\\n            _claim(account, share, assets[ix], msg.sender, target);\\n        }\\n    }\\n\\n    /** Admin can cancel the pending merkle root while in challenge period.\\n     * Previously approved root will stay active */\\n    function challenge() external onlyAdmin {\\n        if (!isChallengePeriod()) {\\n            revert OnlyInChallengePeriod(block.timestamp);\\n        }\\n\\n        pendingMerkleRoot = bytes32(0);\\n        emit Challenge();\\n    }\\n\\n    /** Admin can lock the campaign, meaning disable future merkle root updates */\\n    function setSharesLock(bool _lock) external onlyAdmin {\\n        sharesLocked = _lock;\\n        emit SharesLock(_lock);\\n    }\\n\\n    /** Admin can cancel the campaign.\\n     * After cancellation, asset providers can withdraw their assets and claims are disabled */\\n    function cancelCampaign() external onlyAdmin {\\n        campaignCancelled = true;\\n        emit CampaignCancelled();\\n    }\\n\\n    /** asset providers can withdraw their proportion of assets only in case the campaign was cancelled by the admin */\\n    function withdrawAssets(address account, address asset) external nonReentrant {\\n        if (campaignCancelled) {\\n            uint256 amount = (balanceOfAsset(asset) * providers[asset][account]) / totalProvided[asset];\\n            if (amount == 0) {\\n                revert NoAssetsToWithdraw();\\n            }\\n            providers[asset][account] = 0;\\n\\n            transferAssetOut(account, amount, asset);\\n\\n            emit Withdraw(account, amount, asset);\\n        } else {\\n            revert WithdrawalNotAllowed();\\n        }\\n    }\\n\\n    receive() external payable notCancelled {\\n        _fund(msg.value, address(0), msg.sender);\\n    }\\n\\n    /***************\\n    VIEW FUNCTIONS\\n    ***************/\\n\\n    /** Returns the currrent balance that the campaign holds for an asset.\\n     * For the native token, asset is the zero address*/\\n    function balanceOfAsset(address asset) public view returns (uint256) {\\n        return asset == address(0) ? address(this).balance : IERC20(asset).balanceOf(address(this));\\n    }\\n\\n    /** Validates the shares of an account */\\n    function verifyShares(\\n        address account,\\n        uint256 share,\\n        bytes32[] calldata proof\\n    ) public view {\\n        bytes32 claimingMerkleRoot = getValidRoot();\\n\\n        bytes32 leaf = keccak256(abi.encodePacked(account, share));\\n        if (MerkleProof.verify(proof, claimingMerkleRoot, leaf) == false) {\\n            revert InvalidProof();\\n        }\\n    }\\n\\n    /** Calculates the amount of available rewards to claim for an account */\\n    function rewardsAvailableToClaimer(\\n        address account,\\n        uint256 share,\\n        address asset\\n    ) public view returns (uint256 total) {\\n        /** Rewards by claimer are a portion of the total assets received. If new assets are received, new rewards will become available */\\n        return (totalReceived(asset) * share) / TOTAL_SHARES - claimed[asset][account];\\n    }\\n\\n    /** Returns true if the active root is the pending one */\\n    function isPendingActive() public view returns (bool isActive) {\\n        return pendingMerkleRoot != bytes32(0) && block.timestamp > activationTime;\\n    }\\n\\n    /** Valid root is either the approved or pending one depending on the activation time */\\n    function getValidRoot() public view returns (bytes32 root) {\\n        return isPendingActive() ? pendingMerkleRoot : approvedMerkleRoot;\\n    }\\n\\n    /** Total assets received by the contract.\\n     * For the native token, asset is the zero address*/\\n    function totalReceived(address asset) public view returns (uint256 total) {\\n        return balanceOfAsset(asset) + totalClaimed[asset];\\n    }\\n\\n    /** Indicates whether the campaign is currently at a challenge period */\\n    function isChallengePeriod() public view returns (bool) {\\n        return block.timestamp < activationTime;\\n    }\\n\\n    /** Returns true if propose window for the oracle is active */\\n    function isProposeWindowActive() public view returns (bool) {\\n        return (uint256(block.timestamp) - uint256(deployTime)) % ACTIVATION_PERIOD < ACTIVE_DURATION;\\n    }\\n\\n    /** Returns true if the oracle can propose a new merkle root */\\n    function checkMerkleRootUpdateAllowed() public view {\\n        if (isChallengePeriod()) {\\n            revert ChallengePeriodActive(block.timestamp);\\n        }\\n\\n        if (!isProposeWindowActive()) {\\n            revert ProposeWindowNotActive(block.timestamp);\\n        }\\n    }\\n\\n    /** variable getters */\\n\\n    /***************\\n    INTERNAL FUNCTIONS\\n    ***************/\\n\\n    /** Claiming is always enabled (effectively possible only when a non-zero approved merkleRoot is set) */\\n    function _claim(\\n        address account,\\n        uint256 share,\\n        address asset,\\n        address sender,\\n        address target\\n    ) internal {\\n        uint256 reward = rewardsAvailableToClaimer(account, share, asset);\\n\\n        claimed[asset][account] += reward;\\n        totalClaimed[asset] += reward;\\n\\n        if (sender == account && target != address(0)) {\\n            transferAssetOut(target, reward, asset);\\n        } else {\\n            transferAssetOut(account, reward, asset);\\n        }\\n\\n        emit Claim(account, share, reward, asset);\\n    }\\n\\n    function _fund(\\n        uint256 amount,\\n        address asset,\\n        address from\\n    ) internal {\\n        providers[asset][from] += amount;\\n        totalProvided[asset] += amount;\\n        if (asset != address(0)) {\\n            IERC20(asset).safeTransferFrom(from, address(this), amount);\\n        }\\n        emit Fund(from, amount, address(asset));\\n    }\\n\\n    function transferAssetOut(\\n        address to,\\n        uint256 amount,\\n        address asset\\n    ) internal {\\n        if (asset == address(0)) {\\n            (bool success, ) = to.call{ value: amount }(\\\"\\\");\\n            require(success, \\\"ether transfer failed\\\");\\n        } else {\\n            IERC20(asset).safeTransfer(to, amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8a12cbb9b65fa6fc1b3ce716b5a1de387bbb16cdcfd04e09de6204ec33a8a82e\",\"license\":\"MIT\"},\"contracts/CampaignFactory.sol\":{\"content\":\"//// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./Campaign.sol\\\";\\n\\ncontract CampaignFactory {\\n    Campaign private master;\\n\\n    event CampaignCreated(address creator, address newCampaign, bytes32 _strategyUri, address _admin, address _oracle, uint256 activationTime, bytes32 salt);\\n\\n    constructor(address payable _master) {\\n        master = Campaign(_master);\\n    }\\n\\n    function campaignAddress(bytes32 salt) public view returns (address) {\\n        return Clones.predictDeterministicAddress(address(master), salt);\\n    }\\n\\n    function createCampaign(\\n        bytes32 _rewardRulesetUri,\\n        address _admin,\\n        address _oracle,\\n        uint256 _activationTime,\\n        uint256 _CHALLENGE_PERIOD,\\n        uint256 _ACTIVATION_PERIOD,\\n        uint256 _ACTIVE_DURATION,\\n        bytes32 salt\\n    ) external returns (address payable proxy) {\\n        proxy = payable(Clones.cloneDeterministic(address(master), salt));\\n        Campaign(proxy).initCampaign(_rewardRulesetUri, _admin, _oracle, _activationTime, _CHALLENGE_PERIOD, _ACTIVATION_PERIOD, _ACTIVE_DURATION);\\n\\n        emit CampaignCreated(msg.sender, proxy, _rewardRulesetUri, _admin, _oracle, _activationTime, salt);\\n\\n        return proxy;\\n    }\\n\\n    function createAndPublishCampaign(\\n        bytes32 _rewardRulesetUri,\\n        bytes32 _sharesUri,\\n        bytes32 _strategyUri,\\n        address _admin,\\n        address _oracle,\\n        uint256 _activationTime,\\n        uint256 _CHALLENGE_PERIOD,\\n        uint256 _ACTIVATION_PERIOD,\\n        uint256 _ACTIVE_DURATION,\\n        bytes32 salt\\n    ) external {\\n        address payable proxy = this.createCampaign(\\n            _strategyUri,\\n            _admin,\\n            _oracle,\\n            _activationTime,\\n            _CHALLENGE_PERIOD,\\n            _ACTIVATION_PERIOD,\\n            _ACTIVE_DURATION,\\n            salt\\n        );\\n        Campaign(proxy).proposeShares(_rewardRulesetUri, _sharesUri);\\n    }\\n}\\n\",\"keccak256\":\"0x353b835d32f27fba327b1f74b148133b3f3e1f2ea9b058dd8eabef6c4904080f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2403,"contract":"contracts/CampaignFactory.sol:CampaignFactory","label":"master","offset":0,"slot":"0","type":"t_contract(Campaign)2395"}],"types":{"t_contract(Campaign)2395":{"encoding":"inplace","label":"contract Campaign","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Multicall.sol":{"Multicall":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>","kind":"dev","methods":{},"title":"Multicall - Aggregate results from multiple read-only function calls","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506105ee806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e657806386d516e8146100ec578063a8b0574e146100f2578063ee82ac5e1461010057600080fd5b80630f28c97d1461008d578063252dba42146100a257806327e86d6e146100c35780634d2301cc146100cb575b600080fd5b425b6040519081526020015b60405180910390f35b6100b56100b03660046102a3565b610112565b604051610099929190610438565b61008f610252565b61008f6100d9366004610281565b6001600160a01b03163190565b4461008f565b4561008f565b604051418152602001610099565b61008f61010e366004610403565b4090565b8051439060609067ffffffffffffffff811115610131576101316105a2565b60405190808252806020026020018201604052801561016457816020015b606081526020019060019003908161014f5790505b50905060005b835181101561024c576000808583815181106101885761018861058c565b6020026020010151600001516001600160a01b03168684815181106101af576101af61058c565b6020026020010151602001516040516101c8919061041c565b6000604051808303816000865af19150503d8060008114610205576040519150601f19603f3d011682016040523d82523d6000602084013e61020a565b606091505b50915091508161021957600080fd5b8084848151811061022c5761022c61058c565b6020026020010181905250505080806102449061055b565b91505061016a565b50915091565b600061025f600143610514565b40905090565b80356001600160a01b038116811461027c57600080fd5b919050565b60006020828403121561029357600080fd5b61029c82610265565b9392505050565b600060208083850312156102b657600080fd5b823567ffffffffffffffff808211156102ce57600080fd5b818501915085601f8301126102e257600080fd5b8135818111156102f4576102f46105a2565b8060051b6103038582016104e3565b8281528581019085870183870188018b101561031e57600080fd5b600093505b848410156103f55780358681111561033a57600080fd5b8701601f196040828e038201121561035157600080fd5b6103596104ba565b6103648b8401610265565b815260408301358981111561037857600080fd5b8084019350508d603f84011261038d57600080fd5b8a830135898111156103a1576103a16105a2565b6103b18c84601f840116016104e3565b92508083528e60408286010111156103c857600080fd5b80604085018d85013760009083018c0152808b019190915284525060019390930192918701918701610323565b509998505050505050505050565b60006020828403121561041557600080fd5b5035919050565b6000825161042e81846020870161052b565b9190910192915050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156104ac57878603605f190184528151805180885261048d81888a0189850161052b565b601f01601f191696909601850195509284019290840190600101610466565b509398975050505050505050565b6040805190810167ffffffffffffffff811182821017156104dd576104dd6105a2565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561050c5761050c6105a2565b604052919050565b60008282101561052657610526610576565b500390565b60005b8381101561054657818101518382015260200161052e565b83811115610555576000848401525b50505050565b600060001982141561056f5761056f610576565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bf9ef2a0ef0793d7b81af601c356a5e59bf57c22dc78be750c504bd4d9f6941564736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72425D9D GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x72425D9D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x86D516E8 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xA8B0574E EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEE82AC5E EQ PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF28C97D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x252DBA42 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x27E86D6E EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x4D2301CC EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP3 SWAP2 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x8F PUSH2 0x252 JUMP JUMPDEST PUSH2 0x8F PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x281 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST DIFFICULTY PUSH2 0x8F JUMP JUMPDEST GASLIMIT PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD COINBASE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST PUSH2 0x8F PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x403 JUMP JUMPDEST BLOCKHASH SWAP1 JUMP JUMPDEST DUP1 MLOAD NUMBER SWAP1 PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131 JUMPI PUSH2 0x131 PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x164 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x14F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1AF JUMPI PUSH2 0x1AF PUSH2 0x58C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x22C JUMPI PUSH2 0x22C PUSH2 0x58C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x244 SWAP1 PUSH2 0x55B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16A JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F PUSH1 0x1 NUMBER PUSH2 0x514 JUMP JUMPDEST BLOCKHASH SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29C DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2F4 JUMPI PUSH2 0x2F4 PUSH2 0x5A2 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x303 DUP6 DUP3 ADD PUSH2 0x4E3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP1 DUP6 DUP8 ADD DUP4 DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP5 DUP5 LT ISZERO PUSH2 0x3F5 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F NOT PUSH1 0x40 DUP3 DUP15 SUB DUP3 ADD SLT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x359 PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x364 DUP12 DUP5 ADD PUSH2 0x265 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP4 POP POP DUP14 PUSH1 0x3F DUP5 ADD SLT PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x3A1 JUMPI PUSH2 0x3A1 PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x3B1 DUP13 DUP5 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x4E3 JUMP JUMPDEST SWAP3 POP DUP1 DUP4 MSTORE DUP15 PUSH1 0x40 DUP3 DUP7 ADD ADD GT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 DUP6 ADD DUP14 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP4 ADD DUP13 ADD MSTORE DUP1 DUP12 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MSTORE POP PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x42E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x52B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4AC JUMPI DUP8 DUP7 SUB PUSH1 0x5F NOT ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 DUP9 MSTORE PUSH2 0x48D DUP2 DUP9 DUP11 ADD DUP10 DUP6 ADD PUSH2 0x52B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP7 SWAP1 SWAP7 ADD DUP6 ADD SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x466 JUMP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4DD JUMPI PUSH2 0x4DD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x50C JUMPI PUSH2 0x50C PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x526 JUMPI PUSH2 0x526 PUSH2 0x576 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x546 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x52E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x56F JUMPI PUSH2 0x56F PUSH2 0x576 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP15 CALLCODE LOG0 0xEF SMOD SWAP4 0xD7 0xB8 BYTE 0xF6 ADD 0xC3 JUMP 0xA5 0xE5 SWAP12 CREATE2 PUSH29 0x22DC78BE750C504BD4D9F6941564736F6C634300080600330000000000 ","sourceMap":"316:1423:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@aggregate_2631":{"entryPoint":274,"id":2631,"parameterSlots":1,"returnSlots":2},"@getBlockHash_2658":{"entryPoint":null,"id":2658,"parameterSlots":1,"returnSlots":1},"@getCurrentBlockCoinbase_2717":{"entryPoint":null,"id":2717,"parameterSlots":0,"returnSlots":1},"@getCurrentBlockDifficulty_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":1},"@getCurrentBlockGasLimit_2706":{"entryPoint":null,"id":2706,"parameterSlots":0,"returnSlots":1},"@getCurrentBlockTimestamp_2684":{"entryPoint":null,"id":2684,"parameterSlots":0,"returnSlots":1},"@getEthBalance_2644":{"entryPoint":null,"id":2644,"parameterSlots":1,"returnSlots":1},"@getLastBlockHash_2673":{"entryPoint":594,"id":2673,"parameterSlots":0,"returnSlots":1},"abi_decode_address":{"entryPoint":613,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr":{"entryPoint":675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1080,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_1404":{"entryPoint":1210,"id":null,"parameterSlots":0,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1300,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1323,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":1371,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1398,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1420,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1442,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5913:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:14","statements":[{"nodeType":"YulAssignment","src":"73:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:14"},"nodeType":"YulFunctionCall","src":"82:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"}]},{"body":{"nodeType":"YulBlock","src":"165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:14"},"nodeType":"YulFunctionCall","src":"167:12:14"},"nodeType":"YulExpressionStatement","src":"167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:14"},"nodeType":"YulFunctionCall","src":"142:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:14"},"nodeType":"YulFunctionCall","src":"131:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:14"},"nodeType":"YulFunctionCall","src":"121:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:14"},"nodeType":"YulFunctionCall","src":"114:50:14"},"nodeType":"YulIf","src":"111:2:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:14","type":""}],"src":"14:173:14"},{"body":{"nodeType":"YulBlock","src":"262:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:14"},"nodeType":"YulFunctionCall","src":"279:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:14"},"nodeType":"YulFunctionCall","src":"275:32:14"},"nodeType":"YulIf","src":"272:2:14"},{"nodeType":"YulAssignment","src":"333:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:14"},"nodeType":"YulFunctionCall","src":"343:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:14","type":""}],"src":"192:186:14"},{"body":{"nodeType":"YulBlock","src":"500:1829:14","statements":[{"nodeType":"YulVariableDeclaration","src":"510:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"520:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"514:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"567:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"576:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"579:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"569:6:14"},"nodeType":"YulFunctionCall","src":"569:12:14"},"nodeType":"YulExpressionStatement","src":"569:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"542:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"551:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"538:3:14"},"nodeType":"YulFunctionCall","src":"538:23:14"},{"name":"_1","nodeType":"YulIdentifier","src":"563:2:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"534:3:14"},"nodeType":"YulFunctionCall","src":"534:32:14"},"nodeType":"YulIf","src":"531:2:14"},{"nodeType":"YulVariableDeclaration","src":"592:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"619:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"606:12:14"},"nodeType":"YulFunctionCall","src":"606:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"596:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"638:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"648:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"642:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"702:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"705:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"695:6:14"},"nodeType":"YulFunctionCall","src":"695:12:14"},"nodeType":"YulExpressionStatement","src":"695:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"681:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"689:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"678:2:14"},"nodeType":"YulFunctionCall","src":"678:14:14"},"nodeType":"YulIf","src":"675:2:14"},{"nodeType":"YulVariableDeclaration","src":"718:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"732:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"743:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:14"},"nodeType":"YulFunctionCall","src":"728:22:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"722:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"798:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:14"},"nodeType":"YulFunctionCall","src":"800:12:14"},"nodeType":"YulExpressionStatement","src":"800:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"777:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"781:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:14"},"nodeType":"YulFunctionCall","src":"773:13:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"788:7:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:14"},"nodeType":"YulFunctionCall","src":"769:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"762:6:14"},"nodeType":"YulFunctionCall","src":"762:35:14"},"nodeType":"YulIf","src":"759:2:14"},{"nodeType":"YulVariableDeclaration","src":"823:26:14","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"846:2:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"833:12:14"},"nodeType":"YulFunctionCall","src":"833:16:14"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"827:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"872:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"874:16:14"},"nodeType":"YulFunctionCall","src":"874:18:14"},"nodeType":"YulExpressionStatement","src":"874:18:14"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"864:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"868:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"861:2:14"},"nodeType":"YulFunctionCall","src":"861:10:14"},"nodeType":"YulIf","src":"858:2:14"},{"nodeType":"YulVariableDeclaration","src":"903:20:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"917:1:14","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"920:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"913:3:14"},"nodeType":"YulFunctionCall","src":"913:10:14"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"907:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"932:39:14","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"963:2:14"},{"name":"_1","nodeType":"YulIdentifier","src":"967:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"959:3:14"},"nodeType":"YulFunctionCall","src":"959:11:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"943:15:14"},"nodeType":"YulFunctionCall","src":"943:28:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"936:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"980:16:14","value":{"name":"dst","nodeType":"YulIdentifier","src":"993:3:14"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"984:5:14","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1012:3:14"},{"name":"_4","nodeType":"YulIdentifier","src":"1017:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1005:6:14"},"nodeType":"YulFunctionCall","src":"1005:15:14"},"nodeType":"YulExpressionStatement","src":"1005:15:14"},{"nodeType":"YulAssignment","src":"1029:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1040:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1045:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:14"},"nodeType":"YulFunctionCall","src":"1036:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1029:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"1057:22:14","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1072:2:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1076:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1068:3:14"},"nodeType":"YulFunctionCall","src":"1068:11:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1061:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1125:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1137:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1127:6:14"},"nodeType":"YulFunctionCall","src":"1127:12:14"},"nodeType":"YulExpressionStatement","src":"1127:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1102:2:14"},{"name":"_5","nodeType":"YulIdentifier","src":"1106:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1098:3:14"},"nodeType":"YulFunctionCall","src":"1098:11:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1111:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1094:3:14"},"nodeType":"YulFunctionCall","src":"1094:20:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1116:7:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1091:2:14"},"nodeType":"YulFunctionCall","src":"1091:33:14"},"nodeType":"YulIf","src":"1088:2:14"},{"nodeType":"YulVariableDeclaration","src":"1150:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1159:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1154:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1214:1085:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1228:36:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1260:3:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1247:12:14"},"nodeType":"YulFunctionCall","src":"1247:17:14"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"1232:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1300:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1309:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1312:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1302:6:14"},"nodeType":"YulFunctionCall","src":"1302:12:14"},"nodeType":"YulExpressionStatement","src":"1302:12:14"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"1283:11:14"},{"name":"_2","nodeType":"YulIdentifier","src":"1296:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1280:2:14"},"nodeType":"YulFunctionCall","src":"1280:19:14"},"nodeType":"YulIf","src":"1277:2:14"},{"nodeType":"YulVariableDeclaration","src":"1329:30:14","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1343:2:14"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"1347:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:14"},"nodeType":"YulFunctionCall","src":"1339:20:14"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"1333:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1372:17:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1386:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1382:3:14"},"nodeType":"YulFunctionCall","src":"1382:7:14"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"1376:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1442:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1451:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1454:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1444:6:14"},"nodeType":"YulFunctionCall","src":"1444:12:14"},"nodeType":"YulExpressionStatement","src":"1444:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1417:7:14"},{"name":"_6","nodeType":"YulIdentifier","src":"1426:2:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1413:3:14"},"nodeType":"YulFunctionCall","src":"1413:16:14"},{"name":"_7","nodeType":"YulIdentifier","src":"1431:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1409:3:14"},"nodeType":"YulFunctionCall","src":"1409:25:14"},{"kind":"number","nodeType":"YulLiteral","src":"1436:4:14","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1405:3:14"},"nodeType":"YulFunctionCall","src":"1405:36:14"},"nodeType":"YulIf","src":"1402:2:14"},{"nodeType":"YulVariableDeclaration","src":"1471:35:14","value":{"arguments":[],"functionName":{"name":"allocate_memory_1404","nodeType":"YulIdentifier","src":"1484:20:14"},"nodeType":"YulFunctionCall","src":"1484:22:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1475:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1526:5:14"},{"arguments":[{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"1556:2:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1560:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1552:3:14"},"nodeType":"YulFunctionCall","src":"1552:11:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1533:18:14"},"nodeType":"YulFunctionCall","src":"1533:31:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1519:6:14"},"nodeType":"YulFunctionCall","src":"1519:46:14"},"nodeType":"YulExpressionStatement","src":"1519:46:14"},{"nodeType":"YulVariableDeclaration","src":"1578:43:14","value":{"arguments":[{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"1611:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"1615:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:14"},"nodeType":"YulFunctionCall","src":"1607:13:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1594:12:14"},"nodeType":"YulFunctionCall","src":"1594:27:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1582:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1654:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1663:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1666:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1656:6:14"},"nodeType":"YulFunctionCall","src":"1656:12:14"},"nodeType":"YulExpressionStatement","src":"1656:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1640:8:14"},{"name":"_2","nodeType":"YulIdentifier","src":"1650:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1637:2:14"},"nodeType":"YulFunctionCall","src":"1637:16:14"},"nodeType":"YulIf","src":"1634:2:14"},{"nodeType":"YulVariableDeclaration","src":"1683:27:14","value":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"1697:2:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1701:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:14"},"nodeType":"YulFunctionCall","src":"1693:17:14"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"1687:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1760:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1769:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1772:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1762:6:14"},"nodeType":"YulFunctionCall","src":"1762:12:14"},"nodeType":"YulExpressionStatement","src":"1762:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"1741:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:14","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1737:3:14"},"nodeType":"YulFunctionCall","src":"1737:11:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1750:7:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1733:3:14"},"nodeType":"YulFunctionCall","src":"1733:25:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1726:6:14"},"nodeType":"YulFunctionCall","src":"1726:33:14"},"nodeType":"YulIf","src":"1723:2:14"},{"nodeType":"YulVariableDeclaration","src":"1789:35:14","value":{"arguments":[{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"1816:2:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1820:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:14"},"nodeType":"YulFunctionCall","src":"1812:11:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1799:12:14"},"nodeType":"YulFunctionCall","src":"1799:25:14"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"1793:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1851:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1853:16:14"},"nodeType":"YulFunctionCall","src":"1853:18:14"},"nodeType":"YulExpressionStatement","src":"1853:18:14"}]},"condition":{"arguments":[{"name":"_9","nodeType":"YulIdentifier","src":"1843:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"1847:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1840:2:14"},"nodeType":"YulFunctionCall","src":"1840:10:14"},"nodeType":"YulIf","src":"1837:2:14"},{"nodeType":"YulVariableDeclaration","src":"1886:61:14","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_9","nodeType":"YulIdentifier","src":"1927:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"1931:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1923:3:14"},"nodeType":"YulFunctionCall","src":"1923:13:14"},{"name":"_7","nodeType":"YulIdentifier","src":"1938:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1919:3:14"},"nodeType":"YulFunctionCall","src":"1919:22:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1943:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1915:3:14"},"nodeType":"YulFunctionCall","src":"1915:31:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1899:15:14"},"nodeType":"YulFunctionCall","src":"1899:48:14"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"1890:5:14","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:14"},{"name":"_9","nodeType":"YulIdentifier","src":"1974:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1960:6:14"},"nodeType":"YulFunctionCall","src":"1960:17:14"},"nodeType":"YulExpressionStatement","src":"1960:17:14"},{"body":{"nodeType":"YulBlock","src":"2029:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2038:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2041:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2031:6:14"},"nodeType":"YulFunctionCall","src":"2031:12:14"},"nodeType":"YulExpressionStatement","src":"2031:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"2004:2:14"},{"name":"_9","nodeType":"YulIdentifier","src":"2008:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2000:3:14"},"nodeType":"YulFunctionCall","src":"2000:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2013:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1996:3:14"},"nodeType":"YulFunctionCall","src":"1996:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2020:7:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1993:2:14"},"nodeType":"YulFunctionCall","src":"1993:35:14"},"nodeType":"YulIf","src":"1990:2:14"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2075:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2082:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2071:3:14"},"nodeType":"YulFunctionCall","src":"2071:14:14"},{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"2091:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"2095:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:14"},"nodeType":"YulFunctionCall","src":"2087:13:14"},{"name":"_9","nodeType":"YulIdentifier","src":"2102:2:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2058:12:14"},"nodeType":"YulFunctionCall","src":"2058:47:14"},"nodeType":"YulExpressionStatement","src":"2058:47:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2133:5:14"},{"name":"_9","nodeType":"YulIdentifier","src":"2140:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2129:3:14"},"nodeType":"YulFunctionCall","src":"2129:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2145:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2125:3:14"},"nodeType":"YulFunctionCall","src":"2125:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2150:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2118:6:14"},"nodeType":"YulFunctionCall","src":"2118:34:14"},"nodeType":"YulExpressionStatement","src":"2118:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2176:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2183:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2172:3:14"},"nodeType":"YulFunctionCall","src":"2172:14:14"},{"name":"array","nodeType":"YulIdentifier","src":"2188:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2165:6:14"},"nodeType":"YulFunctionCall","src":"2165:29:14"},"nodeType":"YulExpressionStatement","src":"2165:29:14"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2214:3:14"},{"name":"value","nodeType":"YulIdentifier","src":"2219:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2207:6:14"},"nodeType":"YulFunctionCall","src":"2207:18:14"},"nodeType":"YulExpressionStatement","src":"2207:18:14"},{"nodeType":"YulAssignment","src":"2238:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2249:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2254:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2245:3:14"},"nodeType":"YulFunctionCall","src":"2245:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2238:3:14"}]},{"nodeType":"YulAssignment","src":"2270:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2281:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2286:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2277:3:14"},"nodeType":"YulFunctionCall","src":"2277:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2270:3:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1180:1:14"},{"name":"_4","nodeType":"YulIdentifier","src":"1183:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1177:2:14"},"nodeType":"YulFunctionCall","src":"1177:9:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1187:18:14","statements":[{"nodeType":"YulAssignment","src":"1189:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1198:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1201:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1194:3:14"},"nodeType":"YulFunctionCall","src":"1194:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1189:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1173:3:14","statements":[]},"src":"1169:1130:14"},{"nodeType":"YulAssignment","src":"2308:15:14","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"2318:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2308:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"466:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"477:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"489:6:14","type":""}],"src":"383:1946:14"},{"body":{"nodeType":"YulBlock","src":"2404:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"2450:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2459:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2462:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2452:6:14"},"nodeType":"YulFunctionCall","src":"2452:12:14"},"nodeType":"YulExpressionStatement","src":"2452:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2425:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2421:3:14"},"nodeType":"YulFunctionCall","src":"2421:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2446:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2417:3:14"},"nodeType":"YulFunctionCall","src":"2417:32:14"},"nodeType":"YulIf","src":"2414:2:14"},{"nodeType":"YulAssignment","src":"2475:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2498:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2485:12:14"},"nodeType":"YulFunctionCall","src":"2485:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2475:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2370:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2381:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2393:6:14","type":""}],"src":"2334:180:14"},{"body":{"nodeType":"YulBlock","src":"2656:137:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2666:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2686:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2680:5:14"},"nodeType":"YulFunctionCall","src":"2680:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2670:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2728:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:14"},"nodeType":"YulFunctionCall","src":"2724:17:14"},{"name":"pos","nodeType":"YulIdentifier","src":"2743:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2748:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2702:21:14"},"nodeType":"YulFunctionCall","src":"2702:53:14"},"nodeType":"YulExpressionStatement","src":"2702:53:14"},{"nodeType":"YulAssignment","src":"2764:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2775:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2780:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2771:3:14"},"nodeType":"YulFunctionCall","src":"2771:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2764:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2632:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2637:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2648:3:14","type":""}],"src":"2519:274:14"},{"body":{"nodeType":"YulBlock","src":"2899:102:14","statements":[{"nodeType":"YulAssignment","src":"2909:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2921:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2932:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2917:3:14"},"nodeType":"YulFunctionCall","src":"2917:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2909:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2951:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2966:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2982:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2987:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2978:3:14"},"nodeType":"YulFunctionCall","src":"2978:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2991:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2974:3:14"},"nodeType":"YulFunctionCall","src":"2974:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2962:3:14"},"nodeType":"YulFunctionCall","src":"2962:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2944:6:14"},"nodeType":"YulFunctionCall","src":"2944:51:14"},"nodeType":"YulExpressionStatement","src":"2944:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2868:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2879:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2890:4:14","type":""}],"src":"2798:203:14"},{"body":{"nodeType":"YulBlock","src":"3107:76:14","statements":[{"nodeType":"YulAssignment","src":"3117:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3129:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3140:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3125:3:14"},"nodeType":"YulFunctionCall","src":"3125:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3117:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3170:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:14"},"nodeType":"YulFunctionCall","src":"3152:25:14"},"nodeType":"YulExpressionStatement","src":"3152:25:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3076:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3087:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3098:4:14","type":""}],"src":"3006:177:14"},{"body":{"nodeType":"YulBlock","src":"3289:76:14","statements":[{"nodeType":"YulAssignment","src":"3299:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3311:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3322:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3307:3:14"},"nodeType":"YulFunctionCall","src":"3307:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3299:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3341:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3352:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3334:6:14"},"nodeType":"YulFunctionCall","src":"3334:25:14"},"nodeType":"YulExpressionStatement","src":"3334:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3258:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3269:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3280:4:14","type":""}],"src":"3188:177:14"},{"body":{"nodeType":"YulBlock","src":"3567:873:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3577:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3595:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3606:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3591:3:14"},"nodeType":"YulFunctionCall","src":"3591:18:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3581:6:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3625:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3636:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3618:6:14"},"nodeType":"YulFunctionCall","src":"3618:25:14"},"nodeType":"YulExpressionStatement","src":"3618:25:14"},{"nodeType":"YulVariableDeclaration","src":"3652:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3662:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3656:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3684:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3695:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3680:3:14"},"nodeType":"YulFunctionCall","src":"3680:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3700:2:14","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3673:6:14"},"nodeType":"YulFunctionCall","src":"3673:30:14"},"nodeType":"YulExpressionStatement","src":"3673:30:14"},{"nodeType":"YulVariableDeclaration","src":"3712:17:14","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3723:6:14"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3716:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3738:27:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3758:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3752:5:14"},"nodeType":"YulFunctionCall","src":"3752:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3742:6:14","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3781:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"3789:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3774:6:14"},"nodeType":"YulFunctionCall","src":"3774:22:14"},"nodeType":"YulExpressionStatement","src":"3774:22:14"},{"nodeType":"YulAssignment","src":"3805:25:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3816:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3812:3:14"},"nodeType":"YulFunctionCall","src":"3812:18:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3805:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"3839:53:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3876:1:14","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3879:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3872:3:14"},"nodeType":"YulFunctionCall","src":"3872:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:14"},"nodeType":"YulFunctionCall","src":"3857:30:14"},{"kind":"number","nodeType":"YulLiteral","src":"3889:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:14"},"nodeType":"YulFunctionCall","src":"3853:39:14"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3843:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3901:29:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3919:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3927:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:14"},"nodeType":"YulFunctionCall","src":"3915:15:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3905:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3939:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3948:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3943:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4007:404:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4028:3:14"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4041:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4049:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4037:3:14"},"nodeType":"YulFunctionCall","src":"4037:22:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4065:2:14","type":"","value":"95"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4061:3:14"},"nodeType":"YulFunctionCall","src":"4061:7:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4033:3:14"},"nodeType":"YulFunctionCall","src":"4033:36:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4021:6:14"},"nodeType":"YulFunctionCall","src":"4021:49:14"},"nodeType":"YulExpressionStatement","src":"4021:49:14"},{"nodeType":"YulVariableDeclaration","src":"4083:23:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4099:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4093:5:14"},"nodeType":"YulFunctionCall","src":"4093:13:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4087:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4119:25:14","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4141:2:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4135:5:14"},"nodeType":"YulFunctionCall","src":"4135:9:14"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"4123:8:14","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4164:6:14"},{"name":"length_1","nodeType":"YulIdentifier","src":"4172:8:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4157:6:14"},"nodeType":"YulFunctionCall","src":"4157:24:14"},"nodeType":"YulExpressionStatement","src":"4157:24:14"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4220:2:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4224:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4216:3:14"},"nodeType":"YulFunctionCall","src":"4216:11:14"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4233:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4241:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4229:3:14"},"nodeType":"YulFunctionCall","src":"4229:15:14"},{"name":"length_1","nodeType":"YulIdentifier","src":"4246:8:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4194:21:14"},"nodeType":"YulFunctionCall","src":"4194:61:14"},"nodeType":"YulExpressionStatement","src":"4194:61:14"},{"nodeType":"YulAssignment","src":"4268:63:14","value":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4286:6:14"},{"arguments":[{"arguments":[{"name":"length_1","nodeType":"YulIdentifier","src":"4302:8:14"},{"kind":"number","nodeType":"YulLiteral","src":"4312:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:14"},"nodeType":"YulFunctionCall","src":"4298:17:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4321:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4317:3:14"},"nodeType":"YulFunctionCall","src":"4317:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4294:3:14"},"nodeType":"YulFunctionCall","src":"4294:31:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4282:3:14"},"nodeType":"YulFunctionCall","src":"4282:44:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4328:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4278:3:14"},"nodeType":"YulFunctionCall","src":"4278:53:14"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4268:6:14"}]},{"nodeType":"YulAssignment","src":"4344:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4358:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4366:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4354:3:14"},"nodeType":"YulFunctionCall","src":"4354:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4344:6:14"}]},{"nodeType":"YulAssignment","src":"4382:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4393:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4398:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4389:3:14"},"nodeType":"YulFunctionCall","src":"4389:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4382:3:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3969:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"3972:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3966:2:14"},"nodeType":"YulFunctionCall","src":"3966:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3980:18:14","statements":[{"nodeType":"YulAssignment","src":"3982:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3991:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"3994:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3987:3:14"},"nodeType":"YulFunctionCall","src":"3987:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3982:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"3962:3:14","statements":[]},"src":"3958:453:14"},{"nodeType":"YulAssignment","src":"4420:14:14","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4428:6:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4420:4:14"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3528:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3539:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3547:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3558:4:14","type":""}],"src":"3370:1070:14"},{"body":{"nodeType":"YulBlock","src":"4491:211:14","statements":[{"nodeType":"YulAssignment","src":"4501:21:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4517:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4511:5:14"},"nodeType":"YulFunctionCall","src":"4511:11:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4501:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4531:35:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4553:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4549:3:14"},"nodeType":"YulFunctionCall","src":"4549:17:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4535:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4641:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4643:16:14"},"nodeType":"YulFunctionCall","src":"4643:18:14"},"nodeType":"YulExpressionStatement","src":"4643:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4584:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"4596:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4581:2:14"},"nodeType":"YulFunctionCall","src":"4581:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4620:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4632:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4617:2:14"},"nodeType":"YulFunctionCall","src":"4617:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4578:2:14"},"nodeType":"YulFunctionCall","src":"4578:62:14"},"nodeType":"YulIf","src":"4575:2:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4679:4:14","type":"","value":"0x40"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4685:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4672:6:14"},"nodeType":"YulFunctionCall","src":"4672:24:14"},"nodeType":"YulExpressionStatement","src":"4672:24:14"}]},"name":"allocate_memory_1404","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4480:6:14","type":""}],"src":"4445:257:14"},{"body":{"nodeType":"YulBlock","src":"4752:230:14","statements":[{"nodeType":"YulAssignment","src":"4762:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4778:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4772:5:14"},"nodeType":"YulFunctionCall","src":"4772:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4762:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4790:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4812:6:14"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4828:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"4834:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4824:3:14"},"nodeType":"YulFunctionCall","src":"4824:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4843:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4839:3:14"},"nodeType":"YulFunctionCall","src":"4839:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4820:3:14"},"nodeType":"YulFunctionCall","src":"4820:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4808:3:14"},"nodeType":"YulFunctionCall","src":"4808:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4794:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4923:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4925:16:14"},"nodeType":"YulFunctionCall","src":"4925:18:14"},"nodeType":"YulExpressionStatement","src":"4925:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4866:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"4878:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4863:2:14"},"nodeType":"YulFunctionCall","src":"4863:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4902:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4914:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4899:2:14"},"nodeType":"YulFunctionCall","src":"4899:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4860:2:14"},"nodeType":"YulFunctionCall","src":"4860:62:14"},"nodeType":"YulIf","src":"4857:2:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4961:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4965:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4954:6:14"},"nodeType":"YulFunctionCall","src":"4954:22:14"},"nodeType":"YulExpressionStatement","src":"4954:22:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4732:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4741:6:14","type":""}],"src":"4707:275:14"},{"body":{"nodeType":"YulBlock","src":"5036:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"5058:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5060:16:14"},"nodeType":"YulFunctionCall","src":"5060:18:14"},"nodeType":"YulExpressionStatement","src":"5060:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5052:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"5055:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5049:2:14"},"nodeType":"YulFunctionCall","src":"5049:8:14"},"nodeType":"YulIf","src":"5046:2:14"},{"nodeType":"YulAssignment","src":"5089:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5101:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"5104:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5097:3:14"},"nodeType":"YulFunctionCall","src":"5097:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5089:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5018:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"5021:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5027:4:14","type":""}],"src":"4987:125:14"},{"body":{"nodeType":"YulBlock","src":"5170:205:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5180:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5189:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5184:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5249:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5274:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"5279:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:14"},"nodeType":"YulFunctionCall","src":"5270:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5293:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"5298:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5289:3:14"},"nodeType":"YulFunctionCall","src":"5289:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5283:5:14"},"nodeType":"YulFunctionCall","src":"5283:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5263:6:14"},"nodeType":"YulFunctionCall","src":"5263:39:14"},"nodeType":"YulExpressionStatement","src":"5263:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5210:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"5213:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5207:2:14"},"nodeType":"YulFunctionCall","src":"5207:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5221:19:14","statements":[{"nodeType":"YulAssignment","src":"5223:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5232:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"5235:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5228:3:14"},"nodeType":"YulFunctionCall","src":"5228:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5223:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"5203:3:14","statements":[]},"src":"5199:113:14"},{"body":{"nodeType":"YulBlock","src":"5338:31:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5351:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5356:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5347:3:14"},"nodeType":"YulFunctionCall","src":"5347:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"5365:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5340:6:14"},"nodeType":"YulFunctionCall","src":"5340:27:14"},"nodeType":"YulExpressionStatement","src":"5340:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5327:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"5330:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5324:2:14"},"nodeType":"YulFunctionCall","src":"5324:13:14"},"nodeType":"YulIf","src":"5321:2:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5148:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5153:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"5158:6:14","type":""}],"src":"5117:258:14"},{"body":{"nodeType":"YulBlock","src":"5427:88:14","statements":[{"body":{"nodeType":"YulBlock","src":"5458:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5460:16:14"},"nodeType":"YulFunctionCall","src":"5460:18:14"},"nodeType":"YulExpressionStatement","src":"5460:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5443:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5454:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5450:3:14"},"nodeType":"YulFunctionCall","src":"5450:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5440:2:14"},"nodeType":"YulFunctionCall","src":"5440:17:14"},"nodeType":"YulIf","src":"5437:2:14"},{"nodeType":"YulAssignment","src":"5489:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5500:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"5507:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5496:3:14"},"nodeType":"YulFunctionCall","src":"5496:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5489:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5409:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5419:3:14","type":""}],"src":"5380:135:14"},{"body":{"nodeType":"YulBlock","src":"5552:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5569:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5576:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5581:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5572:3:14"},"nodeType":"YulFunctionCall","src":"5572:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5562:6:14"},"nodeType":"YulFunctionCall","src":"5562:31:14"},"nodeType":"YulExpressionStatement","src":"5562:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5609:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5612:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5602:6:14"},"nodeType":"YulFunctionCall","src":"5602:15:14"},"nodeType":"YulExpressionStatement","src":"5602:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5633:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5636:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5626:6:14"},"nodeType":"YulFunctionCall","src":"5626:15:14"},"nodeType":"YulExpressionStatement","src":"5626:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5520:127:14"},{"body":{"nodeType":"YulBlock","src":"5684:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5701:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5708:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5713:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5704:3:14"},"nodeType":"YulFunctionCall","src":"5704:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5694:6:14"},"nodeType":"YulFunctionCall","src":"5694:31:14"},"nodeType":"YulExpressionStatement","src":"5694:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5741:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5744:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5734:6:14"},"nodeType":"YulFunctionCall","src":"5734:15:14"},"nodeType":"YulExpressionStatement","src":"5734:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5765:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5768:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5758:6:14"},"nodeType":"YulFunctionCall","src":"5758:15:14"},"nodeType":"YulExpressionStatement","src":"5758:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5652:127:14"},{"body":{"nodeType":"YulBlock","src":"5816:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5833:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5840:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5845:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5836:3:14"},"nodeType":"YulFunctionCall","src":"5836:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5826:6:14"},"nodeType":"YulFunctionCall","src":"5826:31:14"},"nodeType":"YulExpressionStatement","src":"5826:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5873:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5876:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5866:6:14"},"nodeType":"YulFunctionCall","src":"5866:15:14"},"nodeType":"YulExpressionStatement","src":"5866:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5897:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5900:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5890:6:14"},"nodeType":"YulFunctionCall","src":"5890:15:14"},"nodeType":"YulExpressionStatement","src":"5890:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5784:127:14"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Call_$2566_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _2) { revert(0, 0) }\n            let _6 := add(_3, innerOffset)\n            let _7 := not(31)\n            if slt(add(sub(dataEnd, _6), _7), 0x40) { revert(0, 0) }\n            let value := allocate_memory_1404()\n            mstore(value, abi_decode_address(add(_6, _1)))\n            let offset_1 := calldataload(add(_6, 0x40))\n            if gt(offset_1, _2) { revert(0, 0) }\n            let _8 := add(_6, offset_1)\n            if iszero(slt(add(_8, 63), dataEnd)) { revert(0, 0) }\n            let _9 := calldataload(add(_8, _1))\n            if gt(_9, _2) { panic_error_0x41() }\n            let array := allocate_memory(add(and(add(_9, 0x1f), _7), _1))\n            mstore(array, _9)\n            if gt(add(add(_8, _9), 0x40), dataEnd) { revert(0, 0) }\n            calldatacopy(add(array, _1), add(_8, 0x40), _9)\n            mstore(add(add(array, _9), _1), 0)\n            mstore(add(value, _1), array)\n            mstore(dst, value)\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let tail_2 := add(add(headStart, shl(5, length)), 96)\n        let srcPtr := add(value1, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(95)))\n            let _2 := mload(srcPtr)\n            let length_1 := mload(_2)\n            mstore(tail_2, length_1)\n            copy_memory_to_memory(add(_2, _1), add(tail_2, _1), length_1)\n            tail_2 := add(add(tail_2, and(add(length_1, 31), not(31))), _1)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function allocate_memory_1404() -> memPtr\n    {\n        memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e657806386d516e8146100ec578063a8b0574e146100f2578063ee82ac5e1461010057600080fd5b80630f28c97d1461008d578063252dba42146100a257806327e86d6e146100c35780634d2301cc146100cb575b600080fd5b425b6040519081526020015b60405180910390f35b6100b56100b03660046102a3565b610112565b604051610099929190610438565b61008f610252565b61008f6100d9366004610281565b6001600160a01b03163190565b4461008f565b4561008f565b604051418152602001610099565b61008f61010e366004610403565b4090565b8051439060609067ffffffffffffffff811115610131576101316105a2565b60405190808252806020026020018201604052801561016457816020015b606081526020019060019003908161014f5790505b50905060005b835181101561024c576000808583815181106101885761018861058c565b6020026020010151600001516001600160a01b03168684815181106101af576101af61058c565b6020026020010151602001516040516101c8919061041c565b6000604051808303816000865af19150503d8060008114610205576040519150601f19603f3d011682016040523d82523d6000602084013e61020a565b606091505b50915091508161021957600080fd5b8084848151811061022c5761022c61058c565b6020026020010181905250505080806102449061055b565b91505061016a565b50915091565b600061025f600143610514565b40905090565b80356001600160a01b038116811461027c57600080fd5b919050565b60006020828403121561029357600080fd5b61029c82610265565b9392505050565b600060208083850312156102b657600080fd5b823567ffffffffffffffff808211156102ce57600080fd5b818501915085601f8301126102e257600080fd5b8135818111156102f4576102f46105a2565b8060051b6103038582016104e3565b8281528581019085870183870188018b101561031e57600080fd5b600093505b848410156103f55780358681111561033a57600080fd5b8701601f196040828e038201121561035157600080fd5b6103596104ba565b6103648b8401610265565b815260408301358981111561037857600080fd5b8084019350508d603f84011261038d57600080fd5b8a830135898111156103a1576103a16105a2565b6103b18c84601f840116016104e3565b92508083528e60408286010111156103c857600080fd5b80604085018d85013760009083018c0152808b019190915284525060019390930192918701918701610323565b509998505050505050505050565b60006020828403121561041557600080fd5b5035919050565b6000825161042e81846020870161052b565b9190910192915050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156104ac57878603605f190184528151805180885261048d81888a0189850161052b565b601f01601f191696909601850195509284019290840190600101610466565b509398975050505050505050565b6040805190810167ffffffffffffffff811182821017156104dd576104dd6105a2565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561050c5761050c6105a2565b604052919050565b60008282101561052657610526610576565b500390565b60005b8381101561054657818101518382015260200161052e565b83811115610555576000848401525b50505050565b600060001982141561056f5761056f610576565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bf9ef2a0ef0793d7b81af601c356a5e59bf57c22dc78be750c504bd4d9f6941564736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72425D9D GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x72425D9D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x86D516E8 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xA8B0574E EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEE82AC5E EQ PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF28C97D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x252DBA42 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x27E86D6E EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x4D2301CC EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP3 SWAP2 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x8F PUSH2 0x252 JUMP JUMPDEST PUSH2 0x8F PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x281 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST DIFFICULTY PUSH2 0x8F JUMP JUMPDEST GASLIMIT PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD COINBASE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST PUSH2 0x8F PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x403 JUMP JUMPDEST BLOCKHASH SWAP1 JUMP JUMPDEST DUP1 MLOAD NUMBER SWAP1 PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131 JUMPI PUSH2 0x131 PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x164 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x14F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1AF JUMPI PUSH2 0x1AF PUSH2 0x58C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x22C JUMPI PUSH2 0x22C PUSH2 0x58C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x244 SWAP1 PUSH2 0x55B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16A JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F PUSH1 0x1 NUMBER PUSH2 0x514 JUMP JUMPDEST BLOCKHASH SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29C DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2F4 JUMPI PUSH2 0x2F4 PUSH2 0x5A2 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x303 DUP6 DUP3 ADD PUSH2 0x4E3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP1 DUP6 DUP8 ADD DUP4 DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP5 DUP5 LT ISZERO PUSH2 0x3F5 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F NOT PUSH1 0x40 DUP3 DUP15 SUB DUP3 ADD SLT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x359 PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x364 DUP12 DUP5 ADD PUSH2 0x265 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP4 POP POP DUP14 PUSH1 0x3F DUP5 ADD SLT PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x3A1 JUMPI PUSH2 0x3A1 PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x3B1 DUP13 DUP5 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x4E3 JUMP JUMPDEST SWAP3 POP DUP1 DUP4 MSTORE DUP15 PUSH1 0x40 DUP3 DUP7 ADD ADD GT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 DUP6 ADD DUP14 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP4 ADD DUP13 ADD MSTORE DUP1 DUP12 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MSTORE POP PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x42E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x52B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4AC JUMPI DUP8 DUP7 SUB PUSH1 0x5F NOT ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 DUP9 MSTORE PUSH2 0x48D DUP2 DUP9 DUP11 ADD DUP10 DUP6 ADD PUSH2 0x52B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP7 SWAP1 SWAP7 ADD DUP6 ADD SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x466 JUMP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4DD JUMPI PUSH2 0x4DD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x50C JUMPI PUSH2 0x50C PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x526 JUMPI PUSH2 0x526 PUSH2 0x576 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x546 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x52E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x56F JUMPI PUSH2 0x56F PUSH2 0x576 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP15 CALLCODE LOG0 0xEF SMOD SWAP4 0xD7 0xB8 BYTE 0xF6 ADD 0xC3 JUMP 0xA5 0xE5 SWAP12 CREATE2 PUSH29 0x22DC78BE750C504BD4D9F6941564736F6C634300080600330000000000 ","sourceMap":"316:1423:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:120;1341:15;1243:120;;;3152:25:14;;;3140:2;3125:18;1243:120:12;;;;;;;;414:409;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1113:124::-;;;:::i;853:114::-;;;;;;:::i;:::-;-1:-1:-1;;;;;948:12:12;;;853:114;1369:124;1470:16;1369:124;;1499:116;1594:14;1499:116;;1621;;;1716:14;2944:51:14;;2932:2;2917:18;1621:116:12;2899:102:14;973:134:12;;;;;;:::i;:::-;1078:22;;973:134;414:409;589:12;;542;;491:25;;577;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;564:38;;617:9;612:205;636:5;:12;632:1;:16;612:205;;;670:12;684:16;704:5;710:1;704:8;;;;;;;;:::i;:::-;;;;;;;:15;;;-1:-1:-1;;;;;704:20:12;725:5;731:1;725:8;;;;;;;;:::i;:::-;;;;;;;:17;;;704:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:74;;;;765:7;757:16;;;;;;803:3;787:10;798:1;787:13;;;;;;;;:::i;:::-;;;;;;:19;;;;655:162;;650:3;;;;;:::i;:::-;;;;612:205;;;;414:409;;;:::o;1113:124::-;1162:17;1213:16;1228:1;1213:12;:16;:::i;:::-;1203:27;1191:39;;1113:124;:::o;14:173:14:-;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:14:o;383:1946::-;489:6;520:2;563;551:9;542:7;538:23;534:32;531:2;;;579:1;576;569:12;531:2;619:9;606:23;648:18;689:2;681:6;678:14;675:2;;;705:1;702;695:12;675:2;743:6;732:9;728:22;718:32;;788:7;781:4;777:2;773:13;769:27;759:2;;810:1;807;800:12;759:2;846;833:16;868:2;864;861:10;858:2;;;874:18;;:::i;:::-;920:2;917:1;913:10;943:28;967:2;963;959:11;943:28;:::i;:::-;1005:15;;;1036:12;;;;1068:11;;;1098;;;1094:20;;1091:33;-1:-1:-1;1088:2:14;;;1137:1;1134;1127:12;1088:2;1159:1;1150:10;;1169:1130;1183:2;1180:1;1177:9;1169:1130;;;1260:3;1247:17;1296:2;1283:11;1280:19;1277:2;;;1312:1;1309;1302:12;1277:2;1339:20;;-1:-1:-1;;1436:4:14;1413:16;;;1409:25;;1405:36;1402:2;;;1454:1;1451;1444:12;1402:2;1484:22;;:::i;:::-;1533:31;1560:2;1556;1552:11;1533:31;:::i;:::-;1526:5;1519:46;1615:4;1611:2;1607:13;1594:27;1650:2;1640:8;1637:16;1634:2;;;1666:1;1663;1656:12;1634:2;1701:8;1697:2;1693:17;1683:27;;;1750:7;1745:2;1741;1737:11;1733:25;1723:2;;1772:1;1769;1762:12;1723:2;1820;1816;1812:11;1799:25;1847:2;1843;1840:10;1837:2;;;1853:18;;:::i;:::-;1899:48;1943:2;1938;1931:4;1927:2;1923:13;1919:22;1915:31;1899:48;:::i;:::-;1886:61;;1974:2;1967:5;1960:17;2020:7;2013:4;2008:2;2004;2000:11;1996:22;1993:35;1990:2;;;2041:1;2038;2031:12;1990:2;2102;2095:4;2091:2;2087:13;2082:2;2075:5;2071:14;2058:47;2150:1;2129:14;;;2125:23;;2118:34;2172:14;;;2165:29;;;;2207:18;;-1:-1:-1;1201:1:14;1194:9;;;;;2245:12;;;;2277;;1169:1130;;;-1:-1:-1;2318:5:14;500:1829;-1:-1:-1;;;;;;;;;500:1829:14:o;2334:180::-;2393:6;2446:2;2434:9;2425:7;2421:23;2417:32;2414:2;;;2462:1;2459;2452:12;2414:2;-1:-1:-1;2485:23:14;;2404:110;-1:-1:-1;2404:110:14:o;2519:274::-;2648:3;2686:6;2680:13;2702:53;2748:6;2743:3;2736:4;2728:6;2724:17;2702:53;:::i;:::-;2771:16;;;;;2656:137;-1:-1:-1;;2656:137:14:o;3370:1070::-;3558:4;3606:2;3595:9;3591:18;3636:6;3625:9;3618:25;3662:2;3700;3695;3684:9;3680:18;3673:30;3723:6;3758;3752:13;3789:6;3781;3774:22;3827:2;3816:9;3812:18;3805:25;;3889:2;3879:6;3876:1;3872:14;3861:9;3857:30;3853:39;3839:53;;3927:2;3919:6;3915:15;3948:1;3958:453;3972:6;3969:1;3966:13;3958:453;;;4037:22;;;-1:-1:-1;;4033:36:14;4021:49;;4093:13;;4135:9;;4157:24;;;4194:61;4135:9;4229:15;;;4216:11;;;4194:61;:::i;:::-;4321:2;4298:17;-1:-1:-1;;4294:31:14;4282:44;;;;4278:53;;;-1:-1:-1;4389:12:14;;;;4354:15;;;;3994:1;3987:9;3958:453;;;-1:-1:-1;4428:6:14;;3567:873;-1:-1:-1;;;;;;;;3567:873:14:o;4445:257::-;4517:4;4511:11;;;4549:17;;4596:18;4581:34;;4617:22;;;4578:62;4575:2;;;4643:18;;:::i;:::-;4679:4;4672:24;4491:211;:::o;4707:275::-;4778:2;4772:9;4843:2;4824:13;;-1:-1:-1;;4820:27:14;4808:40;;4878:18;4863:34;;4899:22;;;4860:62;4857:2;;;4925:18;;:::i;:::-;4961:2;4954:22;4752:230;;-1:-1:-1;4752:230:14:o;4987:125::-;5027:4;5055:1;5052;5049:8;5046:2;;;5060:18;;:::i;:::-;-1:-1:-1;5097:9:14;;5036:76::o;5117:258::-;5189:1;5199:113;5213:6;5210:1;5207:13;5199:113;;;5289:11;;;5283:18;5270:11;;;5263:39;5235:2;5228:10;5199:113;;;5330:6;5327:1;5324:13;5321:2;;;5365:1;5356:6;5351:3;5347:16;5340:27;5321:2;;5170:205;;;:::o;5380:135::-;5419:3;-1:-1:-1;;5440:17:14;;5437:2;;;5460:18;;:::i;:::-;-1:-1:-1;5507:1:14;5496:13;;5427:88::o;5520:127::-;5581:10;5576:3;5572:20;5569:1;5562:31;5612:4;5609:1;5602:15;5636:4;5633:1;5626:15;5652:127;5713:10;5708:3;5704:20;5701:1;5694:31;5744:4;5741:1;5734:15;5768:4;5765:1;5758:15;5784:127;5845:10;5840:3;5836:20;5833:1;5826:31;5876:4;5873:1;5866:15;5900:4;5897:1;5890:15"},"gasEstimates":{"creation":{"codeDepositCost":"303600","executionCost":"343","totalCost":"303943"},"external":{"aggregate((address,bytes)[])":"infinite","getBlockHash(uint256)":"344","getCurrentBlockCoinbase()":"220","getCurrentBlockDifficulty()":"180","getCurrentBlockGasLimit()":"202","getCurrentBlockTimestamp()":"170","getEthBalance(address)":"3024","getLastBlockHash()":"332"}},"methodIdentifiers":{"aggregate((address,bytes)[])":"252dba42","getBlockHash(uint256)":"ee82ac5e","getCurrentBlockCoinbase()":"a8b0574e","getCurrentBlockDifficulty()":"72425d9d","getCurrentBlockGasLimit()":"86d516e8","getCurrentBlockTimestamp()":"0f28c97d","getEthBalance(address)":"4d2301cc","getLastBlockHash()":"27e86d6e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Multicall - Aggregate results from multiple read-only function calls\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\npragma experimental ABIEncoderV2;\\n\\n/// @title Multicall - Aggregate results from multiple read-only function calls\\n/// @author Michael Elliot <mike@makerdao.com>\\n/// @author Joshua Levine <joshua@makerdao.com>\\n/// @author Nick Johnson <arachnid@notdot.net>\\n\\ncontract Multicall {\\n    struct Call {\\n        address target;\\n        bytes callData;\\n    }\\n\\n    function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new bytes[](calls.length);\\n        for (uint256 i = 0; i < calls.length; i++) {\\n            (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);\\n            require(success);\\n            returnData[i] = ret;\\n        }\\n    }\\n\\n    // Helper functions\\n    function getEthBalance(address addr) public view returns (uint256 balance) {\\n        balance = addr.balance;\\n    }\\n\\n    function getBlockHash(uint256 blockNumber) public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(blockNumber);\\n    }\\n\\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(block.number - 1);\\n    }\\n\\n    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {\\n        timestamp = block.timestamp;\\n    }\\n\\n    function getCurrentBlockDifficulty() public view returns (uint256 difficulty) {\\n        difficulty = block.difficulty;\\n    }\\n\\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\\n        gaslimit = block.gaslimit;\\n    }\\n\\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\\n        coinbase = block.coinbase;\\n    }\\n}\\n\",\"keccak256\":\"0x8d427c1c16cdb42bc70ea153195df259b0c8f86c628c45b8e4dcf74312d959b5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/TestErc20.sol":{"TestErc20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"_supply","type":"uint256"},{"internalType":"address","name":"holder","type":"address"},{"internalType":"uint8","name":"decimals_","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2778":{"entryPoint":null,"id":2778,"parameterSlots":5,"returnSlots":0},"@_afterTokenTransfer_3300":{"entryPoint":null,"id":3300,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_3290":{"entryPoint":null,"id":3290,"parameterSlots":3,"returnSlots":0},"@_mint_3123":{"entryPoint":134,"id":3123,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_uint8_fromMemory":{"entryPoint":715,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":893,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":932,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":993,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3145:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"78:821:14","statements":[{"body":{"nodeType":"YulBlock","src":"127:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"136:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"139:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"129:6:14"},"nodeType":"YulFunctionCall","src":"129:12:14"},"nodeType":"YulExpressionStatement","src":"129:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"106:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"114:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"102:3:14"},"nodeType":"YulFunctionCall","src":"102:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"121:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"98:3:14"},"nodeType":"YulFunctionCall","src":"98:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"91:6:14"},"nodeType":"YulFunctionCall","src":"91:35:14"},"nodeType":"YulIf","src":"88:2:14"},{"nodeType":"YulVariableDeclaration","src":"152:23:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"168:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"162:5:14"},"nodeType":"YulFunctionCall","src":"162:13:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"156:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"184:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"202:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"206:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"198:3:14"},"nodeType":"YulFunctionCall","src":"198:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"210:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"194:3:14"},"nodeType":"YulFunctionCall","src":"194:18:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"188:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"235:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"237:16:14"},"nodeType":"YulFunctionCall","src":"237:18:14"},"nodeType":"YulExpressionStatement","src":"237:18:14"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"227:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"231:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"224:2:14"},"nodeType":"YulFunctionCall","src":"224:10:14"},"nodeType":"YulIf","src":"221:2:14"},{"nodeType":"YulVariableDeclaration","src":"266:17:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"280:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"276:3:14"},"nodeType":"YulFunctionCall","src":"276:7:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"270:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"292:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"312:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"306:5:14"},"nodeType":"YulFunctionCall","src":"306:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"296:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"324:71:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"346:6:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"370:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"374:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"366:3:14"},"nodeType":"YulFunctionCall","src":"366:13:14"},{"name":"_3","nodeType":"YulIdentifier","src":"381:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"362:3:14"},"nodeType":"YulFunctionCall","src":"362:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:14","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"358:3:14"},"nodeType":"YulFunctionCall","src":"358:31:14"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"354:3:14"},"nodeType":"YulFunctionCall","src":"354:40:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"342:3:14"},"nodeType":"YulFunctionCall","src":"342:53:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"328:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"454:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"456:16:14"},"nodeType":"YulFunctionCall","src":"456:18:14"},"nodeType":"YulExpressionStatement","src":"456:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"413:10:14"},{"name":"_2","nodeType":"YulIdentifier","src":"425:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"410:2:14"},"nodeType":"YulFunctionCall","src":"410:18:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"433:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"445:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"430:2:14"},"nodeType":"YulFunctionCall","src":"430:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"407:2:14"},"nodeType":"YulFunctionCall","src":"407:46:14"},"nodeType":"YulIf","src":"404:2:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"496:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"485:6:14"},"nodeType":"YulFunctionCall","src":"485:22:14"},"nodeType":"YulExpressionStatement","src":"485:22:14"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"523:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"531:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"516:6:14"},"nodeType":"YulFunctionCall","src":"516:18:14"},"nodeType":"YulExpressionStatement","src":"516:18:14"},{"nodeType":"YulVariableDeclaration","src":"543:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"553:4:14","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"547:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"603:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"612:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"615:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"605:6:14"},"nodeType":"YulFunctionCall","src":"605:12:14"},"nodeType":"YulExpressionStatement","src":"605:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"580:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"588:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"576:3:14"},"nodeType":"YulFunctionCall","src":"576:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"593:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"572:3:14"},"nodeType":"YulFunctionCall","src":"572:24:14"},{"name":"end","nodeType":"YulIdentifier","src":"598:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"569:2:14"},"nodeType":"YulFunctionCall","src":"569:33:14"},"nodeType":"YulIf","src":"566:2:14"},{"nodeType":"YulVariableDeclaration","src":"628:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"637:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"632:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"722:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"730:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:14"},"nodeType":"YulFunctionCall","src":"718:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"734:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:14"},"nodeType":"YulFunctionCall","src":"714:23:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"753:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"761:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"749:3:14"},"nodeType":"YulFunctionCall","src":"749:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"765:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:14"},"nodeType":"YulFunctionCall","src":"745:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"739:5:14"},"nodeType":"YulFunctionCall","src":"739:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"707:6:14"},"nodeType":"YulFunctionCall","src":"707:63:14"},"nodeType":"YulExpressionStatement","src":"707:63:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"658:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"661:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"655:2:14"},"nodeType":"YulFunctionCall","src":"655:9:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"665:19:14","statements":[{"nodeType":"YulAssignment","src":"667:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"676:1:14"},{"name":"_4","nodeType":"YulIdentifier","src":"679:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:14"},"nodeType":"YulFunctionCall","src":"672:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"667:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"651:3:14","statements":[]},"src":"647:133:14"},{"body":{"nodeType":"YulBlock","src":"810:59:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"839:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"847:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:14"},"nodeType":"YulFunctionCall","src":"835:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"852:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:14"},"nodeType":"YulFunctionCall","src":"831:24:14"},{"kind":"number","nodeType":"YulLiteral","src":"857:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"824:6:14"},"nodeType":"YulFunctionCall","src":"824:35:14"},"nodeType":"YulExpressionStatement","src":"824:35:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"795:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"798:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"792:2:14"},"nodeType":"YulFunctionCall","src":"792:9:14"},"nodeType":"YulIf","src":"789:2:14"},{"nodeType":"YulAssignment","src":"878:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"887:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"878:5:14"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"60:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"68:5:14","type":""}],"src":"14:885:14"},{"body":{"nodeType":"YulBlock","src":"1071:783:14","statements":[{"body":{"nodeType":"YulBlock","src":"1118:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1130:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1120:6:14"},"nodeType":"YulFunctionCall","src":"1120:12:14"},"nodeType":"YulExpressionStatement","src":"1120:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1092:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1088:3:14"},"nodeType":"YulFunctionCall","src":"1088:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1113:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1084:3:14"},"nodeType":"YulFunctionCall","src":"1084:33:14"},"nodeType":"YulIf","src":"1081:2:14"},{"nodeType":"YulVariableDeclaration","src":"1143:30:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1157:5:14"},"nodeType":"YulFunctionCall","src":"1157:16:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1147:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1182:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1200:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1204:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1196:3:14"},"nodeType":"YulFunctionCall","src":"1196:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1192:3:14"},"nodeType":"YulFunctionCall","src":"1192:18:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1186:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1237:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1239:6:14"},"nodeType":"YulFunctionCall","src":"1239:12:14"},"nodeType":"YulExpressionStatement","src":"1239:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1225:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1233:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1222:2:14"},"nodeType":"YulFunctionCall","src":"1222:14:14"},"nodeType":"YulIf","src":"1219:2:14"},{"nodeType":"YulAssignment","src":"1262:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1305:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1316:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1301:3:14"},"nodeType":"YulFunctionCall","src":"1301:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1325:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1272:28:14"},"nodeType":"YulFunctionCall","src":"1272:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1262:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1342:41:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:14"},"nodeType":"YulFunctionCall","src":"1364:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1358:5:14"},"nodeType":"YulFunctionCall","src":"1358:25:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1346:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1412:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1421:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1424:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1414:6:14"},"nodeType":"YulFunctionCall","src":"1414:12:14"},"nodeType":"YulExpressionStatement","src":"1414:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1398:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1408:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1395:2:14"},"nodeType":"YulFunctionCall","src":"1395:16:14"},"nodeType":"YulIf","src":"1392:2:14"},{"nodeType":"YulAssignment","src":"1437:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1480:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1491:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1476:3:14"},"nodeType":"YulFunctionCall","src":"1476:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1502:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1447:28:14"},"nodeType":"YulFunctionCall","src":"1447:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1437:6:14"}]},{"nodeType":"YulAssignment","src":"1519:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1539:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1550:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1535:3:14"},"nodeType":"YulFunctionCall","src":"1535:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1529:5:14"},"nodeType":"YulFunctionCall","src":"1529:25:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1519:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1563:38:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1586:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1597:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1576:5:14"},"nodeType":"YulFunctionCall","src":"1576:25:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1567:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1664:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1673:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1676:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1666:6:14"},"nodeType":"YulFunctionCall","src":"1666:12:14"},"nodeType":"YulExpressionStatement","src":"1666:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1623:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1634:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1649:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1654:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1645:3:14"},"nodeType":"YulFunctionCall","src":"1645:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1658:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1641:3:14"},"nodeType":"YulFunctionCall","src":"1641:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1630:3:14"},"nodeType":"YulFunctionCall","src":"1630:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1620:2:14"},"nodeType":"YulFunctionCall","src":"1620:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1613:6:14"},"nodeType":"YulFunctionCall","src":"1613:50:14"},"nodeType":"YulIf","src":"1610:2:14"},{"nodeType":"YulAssignment","src":"1689:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1699:5:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1689:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1713:41:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1738:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1749:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1734:3:14"},"nodeType":"YulFunctionCall","src":"1734:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1728:5:14"},"nodeType":"YulFunctionCall","src":"1728:26:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1717:7:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1806:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1818:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1808:6:14"},"nodeType":"YulFunctionCall","src":"1808:12:14"},"nodeType":"YulExpressionStatement","src":"1808:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1776:7:14"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1789:7:14"},{"kind":"number","nodeType":"YulLiteral","src":"1798:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1785:3:14"},"nodeType":"YulFunctionCall","src":"1785:18:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1773:2:14"},"nodeType":"YulFunctionCall","src":"1773:31:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1766:6:14"},"nodeType":"YulFunctionCall","src":"1766:39:14"},"nodeType":"YulIf","src":"1763:2:14"},{"nodeType":"YulAssignment","src":"1831:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1841:7:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1831:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1005:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1016:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1028:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1036:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1044:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1052:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1060:6:14","type":""}],"src":"904:950:14"},{"body":{"nodeType":"YulBlock","src":"2033:181:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2050:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2043:6:14"},"nodeType":"YulFunctionCall","src":"2043:21:14"},"nodeType":"YulExpressionStatement","src":"2043:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2084:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2095:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2080:3:14"},"nodeType":"YulFunctionCall","src":"2080:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"2100:2:14","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2073:6:14"},"nodeType":"YulFunctionCall","src":"2073:30:14"},"nodeType":"YulExpressionStatement","src":"2073:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2134:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2119:3:14"},"nodeType":"YulFunctionCall","src":"2119:18:14"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"2139:33:14","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:14"},"nodeType":"YulFunctionCall","src":"2112:61:14"},"nodeType":"YulExpressionStatement","src":"2112:61:14"},{"nodeType":"YulAssignment","src":"2182:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2194:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2205:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2190:3:14"},"nodeType":"YulFunctionCall","src":"2190:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2182:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2010:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2024:4:14","type":""}],"src":"1859:355:14"},{"body":{"nodeType":"YulBlock","src":"2320:76:14","statements":[{"nodeType":"YulAssignment","src":"2330:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2342:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2353:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2338:3:14"},"nodeType":"YulFunctionCall","src":"2338:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2330:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2372:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"2383:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2365:6:14"},"nodeType":"YulFunctionCall","src":"2365:25:14"},"nodeType":"YulExpressionStatement","src":"2365:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2289:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2300:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2311:4:14","type":""}],"src":"2219:177:14"},{"body":{"nodeType":"YulBlock","src":"2449:177:14","statements":[{"body":{"nodeType":"YulBlock","src":"2484:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2505:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2512:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2517:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2508:3:14"},"nodeType":"YulFunctionCall","src":"2508:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2498:6:14"},"nodeType":"YulFunctionCall","src":"2498:31:14"},"nodeType":"YulExpressionStatement","src":"2498:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2549:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2552:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2542:6:14"},"nodeType":"YulFunctionCall","src":"2542:15:14"},"nodeType":"YulExpressionStatement","src":"2542:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2577:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2580:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2570:6:14"},"nodeType":"YulFunctionCall","src":"2570:15:14"},"nodeType":"YulExpressionStatement","src":"2570:15:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2465:1:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2472:1:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2468:3:14"},"nodeType":"YulFunctionCall","src":"2468:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2462:2:14"},"nodeType":"YulFunctionCall","src":"2462:13:14"},"nodeType":"YulIf","src":"2459:2:14"},{"nodeType":"YulAssignment","src":"2604:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2615:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2618:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2611:3:14"},"nodeType":"YulFunctionCall","src":"2611:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2604:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2432:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"2435:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2441:3:14","type":""}],"src":"2401:225:14"},{"body":{"nodeType":"YulBlock","src":"2686:325:14","statements":[{"nodeType":"YulAssignment","src":"2696:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2710:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2713:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2706:3:14"},"nodeType":"YulFunctionCall","src":"2706:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2696:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2727:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2757:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2763:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2753:3:14"},"nodeType":"YulFunctionCall","src":"2753:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2731:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2804:31:14","statements":[{"nodeType":"YulAssignment","src":"2806:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2820:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2828:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2816:3:14"},"nodeType":"YulFunctionCall","src":"2816:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2806:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2784:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2777:6:14"},"nodeType":"YulFunctionCall","src":"2777:26:14"},"nodeType":"YulIf","src":"2774:2:14"},{"body":{"nodeType":"YulBlock","src":"2894:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2915:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2927:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2918:3:14"},"nodeType":"YulFunctionCall","src":"2918:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2908:6:14"},"nodeType":"YulFunctionCall","src":"2908:31:14"},"nodeType":"YulExpressionStatement","src":"2908:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2959:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2962:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2952:6:14"},"nodeType":"YulFunctionCall","src":"2952:15:14"},"nodeType":"YulExpressionStatement","src":"2952:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2987:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2990:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2980:6:14"},"nodeType":"YulFunctionCall","src":"2980:15:14"},"nodeType":"YulExpressionStatement","src":"2980:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2850:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2873:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2870:2:14"},"nodeType":"YulFunctionCall","src":"2870:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2847:2:14"},"nodeType":"YulFunctionCall","src":"2847:38:14"},"nodeType":"YulIf","src":"2844:2:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2666:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2675:6:14","type":""}],"src":"2631:380:14"},{"body":{"nodeType":"YulBlock","src":"3048:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3065:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3072:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3077:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3068:3:14"},"nodeType":"YulFunctionCall","src":"3068:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3058:6:14"},"nodeType":"YulFunctionCall","src":"3058:31:14"},"nodeType":"YulExpressionStatement","src":"3058:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3105:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3108:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3098:6:14"},"nodeType":"YulFunctionCall","src":"3098:15:14"},"nodeType":"YulExpressionStatement","src":"3098:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3129:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3132:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3122:6:14"},"nodeType":"YulFunctionCall","src":"3122:15:14"},"nodeType":"YulExpressionStatement","src":"3122:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3016:127:14"}]},"contents":"{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value\n        let value_1 := mload(add(headStart, 128))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000c9438038062000c948339810160408190526200003491620002cb565b8451620000499060039060208801906200016e565b5083516200005f9060049060208701906200016e565b506005805460ff191660ff83161790556200007b828462000086565b5050505050620003f7565b6001600160a01b038216620000e15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f591906200037d565b90915550506001600160a01b03821660009081526020819052604081208054839290620001249084906200037d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200017c90620003a4565b90600052602060002090601f016020900481019282620001a05760008555620001eb565b82601f10620001bb57805160ff1916838001178555620001eb565b82800160010185558215620001eb579182015b82811115620001eb578251825591602001919060010190620001ce565b50620001f9929150620001fd565b5090565b5b80821115620001f95760008155600101620001fe565b600082601f8301126200022657600080fd5b81516001600160401b0380821115620002435762000243620003e1565b604051601f8301601f19908116603f011681019082821181831017156200026e576200026e620003e1565b816040528381526020925086838588010111156200028b57600080fd5b600091505b83821015620002af578582018301518183018401529082019062000290565b83821115620002c15760008385830101525b9695505050505050565b600080600080600060a08688031215620002e457600080fd5b85516001600160401b0380821115620002fc57600080fd5b6200030a89838a0162000214565b965060208801519150808211156200032157600080fd5b50620003308882890162000214565b60408801516060890151919650945090506001600160a01b03811681146200035757600080fd5b608087015190925060ff811681146200036f57600080fd5b809150509295509295909350565b600082198211156200039f57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003b957607f821691505b60208210811415620003db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61088d80620004076000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b4114610165578063a457c2d71461016d578063a9059cbb14610180578063dd62ed3e1461019357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a6565b6040516100c391906107a1565b60405180910390f35b6100df6100da366004610777565b610238565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461073b565b610250565b60055460405160ff90911681526020016100c3565b6100df610137366004610777565b610274565b6100f361014a3660046106e6565b6001600160a01b031660009081526020819052604090205490565b6100b6610296565b6100df61017b366004610777565b6102a5565b6100df61018e366004610777565b610325565b6100f36101a1366004610708565b610333565b6060600380546101b59061081c565b80601f01602080910402602001604051908101604052809291908181526020018280546101e19061081c565b801561022e5780601f106102035761010080835404028352916020019161022e565b820191906000526020600020905b81548152906001019060200180831161021157829003601f168201915b5050505050905090565b60003361024681858561035e565b5060019392505050565b60003361025e858285610482565b6102698585856104fc565b506001949350505050565b6000336102468185856102878383610333565b61029191906107f6565b61035e565b6060600480546101b59061081c565b600033816102b38286610333565b9050838110156103185760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610269828686840361035e565b6000336102468185856104fc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103c05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030f565b6001600160a01b0382166104215760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048e8484610333565b905060001981146104f657818110156104e95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030f565b6104f6848484840361035e565b50505050565b6001600160a01b0383166105605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030f565b6001600160a01b0382166105c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030f565b6001600160a01b0383166000908152602081905260409020548181101561063a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030f565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106719084906107f6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106bd91815260200190565b60405180910390a36104f6565b80356001600160a01b03811681146106e157600080fd5b919050565b6000602082840312156106f857600080fd5b610701826106ca565b9392505050565b6000806040838503121561071b57600080fd5b610724836106ca565b9150610732602084016106ca565b90509250929050565b60008060006060848603121561075057600080fd5b610759846106ca565b9250610767602085016106ca565b9150604084013590509250925092565b6000806040838503121561078a57600080fd5b610793836106ca565b946020939093013593505050565b600060208083528351808285015260005b818110156107ce578581018301518582016040015282016107b2565b818111156107e0576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061083057607f821691505b6020821081141561085157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220991b13ebcc2b2f550ccbfc911a9dedcaa73f2de2ccaa0aa20cae09bd48aacdf864736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC94 CODESIZE SUB DUP1 PUSH3 0xC94 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2CB JUMP JUMPDEST DUP5 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP9 ADD SWAP1 PUSH3 0x16E JUMP JUMPDEST POP DUP4 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH3 0x16E JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH3 0x7B DUP3 DUP5 PUSH3 0x86 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x3F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xF5 SWAP2 SWAP1 PUSH3 0x37D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x124 SWAP1 DUP5 SWAP1 PUSH3 0x37D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x17C SWAP1 PUSH3 0x3A4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1A0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1EB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1BB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1EB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1EB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1EB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1CE JUMP JUMPDEST POP PUSH3 0x1F9 SWAP3 SWAP2 POP PUSH3 0x1FD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x243 JUMPI PUSH3 0x243 PUSH3 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x26E JUMPI PUSH3 0x26E PUSH3 0x3E1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2AF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x290 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2C1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x30A DUP10 DUP4 DUP11 ADD PUSH3 0x214 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x330 DUP9 DUP3 DUP10 ADD PUSH3 0x214 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP2 SWAP7 POP SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x39F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x88D DUP1 PUSH3 0x407 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x296 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B5 SWAP1 PUSH2 0x81C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E1 SWAP1 PUSH2 0x81C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x246 DUP2 DUP6 DUP6 PUSH2 0x35E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25E DUP6 DUP3 DUP6 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x269 DUP6 DUP6 DUP6 PUSH2 0x4FC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x246 DUP2 DUP6 DUP6 PUSH2 0x287 DUP4 DUP4 PUSH2 0x333 JUMP JUMPDEST PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B5 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2B3 DUP3 DUP7 PUSH2 0x333 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x269 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x246 DUP2 DUP6 DUP6 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E DUP5 DUP5 PUSH2 0x333 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH2 0x4F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x671 SWAP1 DUP5 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x701 DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x724 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP2 POP PUSH2 0x732 PUSH1 0x20 DUP5 ADD PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x759 DUP5 PUSH2 0x6CA JUMP JUMPDEST SWAP3 POP PUSH2 0x767 PUSH1 0x20 DUP6 ADD PUSH2 0x6CA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7CE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7B2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x817 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x830 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x851 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SHL SGT 0xEB 0xCC 0x2B 0x2F SSTORE 0xC 0xCB 0xFC SWAP2 BYTE SWAP14 0xED 0xCA 0xA7 EXTCODEHASH 0x2D 0xE2 0xCC 0xAA EXP LOG2 0xC 0xAE MULMOD 0xBD 0x48 0xAA 0xCD 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"244:5367:13:-:0;;;549:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;711:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;734:17:13;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;761:9:13;:21;;-1:-1:-1;;761:21:13;;;;;;;793:22;799:6;807:7;793:5;:22::i;:::-;549:273;;;;;244:5367;;3562:389;-1:-1:-1;;;;;3645:21:13;;3637:65;;;;-1:-1:-1;;;3637:65:13;;2061:2:14;3637:65:13;;;2043:21:14;2100:2;2080:18;;;2073:30;2139:33;2119:18;;;2112:61;2190:18;;3637:65:13;;;;;;;;3789:6;3773:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3805:18:13;;:9;:18;;;;;;;;;;:28;;3827:6;;3805:9;:28;;3827:6;;3805:28;:::i;:::-;;;;-1:-1:-1;;3848:37:13;;2365:25:14;;;-1:-1:-1;;;;;3848:37:13;;;3865:1;;3848:37;;2353:2:14;2338:18;3848:37:13;;;;;;;3562:389;;:::o;244:5367::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;244:5367:13;;;-1:-1:-1;244:5367:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:14;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:14;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:14;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:14:o;904:950::-;1028:6;1036;1044;1052;1060;1113:3;1101:9;1092:7;1088:23;1084:33;1081:2;;;1130:1;1127;1120:12;1081:2;1157:16;;-1:-1:-1;;;;;1222:14:14;;;1219:2;;;1249:1;1246;1239:12;1219:2;1272:61;1325:7;1316:6;1305:9;1301:22;1272:61;:::i;:::-;1262:71;;1379:2;1368:9;1364:18;1358:25;1342:41;;1408:2;1398:8;1395:16;1392:2;;;1424:1;1421;1414:12;1392:2;;1447:63;1502:7;1491:8;1480:9;1476:24;1447:63;:::i;:::-;1550:2;1535:18;;1529:25;1597:2;1582:18;;1576:25;1437:73;;-1:-1:-1;1529:25:14;-1:-1:-1;1576:25:14;-1:-1:-1;;;;;;1630:31:14;;1620:42;;1610:2;;1676:1;1673;1666:12;1610:2;1749:3;1734:19;;1728:26;1699:5;;-1:-1:-1;1798:4:14;1785:18;;1773:31;;1763:2;;1818:1;1815;1808:12;1763:2;1841:7;1831:17;;;1071:783;;;;;;;;:::o;2401:225::-;2441:3;2472:1;2468:6;2465:1;2462:13;2459:2;;;2517:10;2512:3;2508:20;2505:1;2498:31;2552:4;2549:1;2542:15;2580:4;2577:1;2570:15;2459:2;-1:-1:-1;2611:9:14;;2449:177::o;2631:380::-;2710:1;2706:12;;;;2753;;;2774:2;;2828:4;2820:6;2816:17;2806:27;;2774:2;2881;2873:6;2870:14;2850:18;2847:38;2844:2;;;2927:10;2922:3;2918:20;2915:1;2908:31;2962:4;2959:1;2952:15;2990:4;2987:1;2980:15;2844:2;;2686:325;;;:::o;3016:127::-;3077:10;3072:3;3068:20;3065:1;3058:31;3108:4;3105:1;3098:15;3132:4;3129:1;3122:15;3048:95;244:5367:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_3300":{"entryPoint":null,"id":3300,"parameterSlots":3,"returnSlots":0},"@_approve_3238":{"entryPoint":862,"id":3238,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_3290":{"entryPoint":null,"id":3290,"parameterSlots":3,"returnSlots":0},"@_msgSender_997":{"entryPoint":null,"id":997,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_3280":{"entryPoint":1154,"id":3280,"parameterSlots":3,"returnSlots":0},"@_transfer_3068":{"entryPoint":1276,"id":3068,"parameterSlots":3,"returnSlots":0},"@allowance_2868":{"entryPoint":819,"id":2868,"parameterSlots":2,"returnSlots":1},"@approve_2892":{"entryPoint":568,"id":2892,"parameterSlots":2,"returnSlots":1},"@balanceOf_2827":{"entryPoint":null,"id":2827,"parameterSlots":1,"returnSlots":1},"@decimals_2805":{"entryPoint":null,"id":2805,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2992":{"entryPoint":677,"id":2992,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2952":{"entryPoint":628,"id":2952,"parameterSlots":2,"returnSlots":1},"@name_2787":{"entryPoint":422,"id":2787,"parameterSlots":0,"returnSlots":1},"@symbol_2796":{"entryPoint":662,"id":2796,"parameterSlots":0,"returnSlots":1},"@totalSupply_2814":{"entryPoint":null,"id":2814,"parameterSlots":0,"returnSlots":1},"@transferFrom_2924":{"entryPoint":592,"id":2924,"parameterSlots":3,"returnSlots":1},"@transfer_2851":{"entryPoint":805,"id":2851,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1738,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1800,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1851,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1911,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2038,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2076,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5806:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:14","statements":[{"nodeType":"YulAssignment","src":"73:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:14"},"nodeType":"YulFunctionCall","src":"82:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"}]},{"body":{"nodeType":"YulBlock","src":"165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:14"},"nodeType":"YulFunctionCall","src":"167:12:14"},"nodeType":"YulExpressionStatement","src":"167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:14"},"nodeType":"YulFunctionCall","src":"142:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:14"},"nodeType":"YulFunctionCall","src":"131:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:14"},"nodeType":"YulFunctionCall","src":"121:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:14"},"nodeType":"YulFunctionCall","src":"114:50:14"},"nodeType":"YulIf","src":"111:2:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:14","type":""}],"src":"14:173:14"},{"body":{"nodeType":"YulBlock","src":"262:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:14"},"nodeType":"YulFunctionCall","src":"279:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:14"},"nodeType":"YulFunctionCall","src":"275:32:14"},"nodeType":"YulIf","src":"272:2:14"},{"nodeType":"YulAssignment","src":"333:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:14"},"nodeType":"YulFunctionCall","src":"343:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:14","type":""}],"src":"192:186:14"},{"body":{"nodeType":"YulBlock","src":"470:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:14"},"nodeType":"YulFunctionCall","src":"518:12:14"},"nodeType":"YulExpressionStatement","src":"518:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:14"},"nodeType":"YulFunctionCall","src":"487:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:14"},"nodeType":"YulFunctionCall","src":"483:32:14"},"nodeType":"YulIf","src":"480:2:14"},{"nodeType":"YulAssignment","src":"541:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:14"},"nodeType":"YulFunctionCall","src":"551:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:14"}]},{"nodeType":"YulAssignment","src":"589:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:14"},"nodeType":"YulFunctionCall","src":"618:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:14"},"nodeType":"YulFunctionCall","src":"599:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:14","type":""}],"src":"383:260:14"},{"body":{"nodeType":"YulBlock","src":"752:224:14","statements":[{"body":{"nodeType":"YulBlock","src":"798:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:14"},"nodeType":"YulFunctionCall","src":"800:12:14"},"nodeType":"YulExpressionStatement","src":"800:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"773:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"769:3:14"},"nodeType":"YulFunctionCall","src":"769:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"794:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"765:3:14"},"nodeType":"YulFunctionCall","src":"765:32:14"},"nodeType":"YulIf","src":"762:2:14"},{"nodeType":"YulAssignment","src":"823:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"833:18:14"},"nodeType":"YulFunctionCall","src":"833:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:14"}]},{"nodeType":"YulAssignment","src":"871:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"904:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"915:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"900:3:14"},"nodeType":"YulFunctionCall","src":"900:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"881:18:14"},"nodeType":"YulFunctionCall","src":"881:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"871:6:14"}]},{"nodeType":"YulAssignment","src":"928:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:14"},"nodeType":"YulFunctionCall","src":"951:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:14"},"nodeType":"YulFunctionCall","src":"938:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"928:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"702:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"713:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"725:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"733:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"741:6:14","type":""}],"src":"648:328:14"},{"body":{"nodeType":"YulBlock","src":"1068:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"1114:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1123:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1126:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1116:6:14"},"nodeType":"YulFunctionCall","src":"1116:12:14"},"nodeType":"YulExpressionStatement","src":"1116:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1089:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1098:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1085:3:14"},"nodeType":"YulFunctionCall","src":"1085:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1081:3:14"},"nodeType":"YulFunctionCall","src":"1081:32:14"},"nodeType":"YulIf","src":"1078:2:14"},{"nodeType":"YulAssignment","src":"1139:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1149:18:14"},"nodeType":"YulFunctionCall","src":"1149:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1139:6:14"}]},{"nodeType":"YulAssignment","src":"1187:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1225:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:14"},"nodeType":"YulFunctionCall","src":"1210:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:14"},"nodeType":"YulFunctionCall","src":"1197:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1187:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1026:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1037:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1049:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1057:6:14","type":""}],"src":"981:254:14"},{"body":{"nodeType":"YulBlock","src":"1335:92:14","statements":[{"nodeType":"YulAssignment","src":"1345:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1368:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:14"},"nodeType":"YulFunctionCall","src":"1353:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1345:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1412:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1405:6:14"},"nodeType":"YulFunctionCall","src":"1405:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1398:6:14"},"nodeType":"YulFunctionCall","src":"1398:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1380:6:14"},"nodeType":"YulFunctionCall","src":"1380:41:14"},"nodeType":"YulExpressionStatement","src":"1380:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1304:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1315:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1326:4:14","type":""}],"src":"1240:187:14"},{"body":{"nodeType":"YulBlock","src":"1553:476:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1563:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1573:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1567:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1602:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1584:6:14"},"nodeType":"YulFunctionCall","src":"1584:21:14"},"nodeType":"YulExpressionStatement","src":"1584:21:14"},{"nodeType":"YulVariableDeclaration","src":"1614:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1634:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1628:5:14"},"nodeType":"YulFunctionCall","src":"1628:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1618:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1661:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1672:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:14"},"nodeType":"YulFunctionCall","src":"1657:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"1677:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:14"},"nodeType":"YulFunctionCall","src":"1650:34:14"},"nodeType":"YulExpressionStatement","src":"1650:34:14"},{"nodeType":"YulVariableDeclaration","src":"1693:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1702:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1697:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1762:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1791:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"1802:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1787:3:14"},"nodeType":"YulFunctionCall","src":"1787:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"1806:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:14"},"nodeType":"YulFunctionCall","src":"1783:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1825:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"1833:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:14"},"nodeType":"YulFunctionCall","src":"1821:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1837:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1817:3:14"},"nodeType":"YulFunctionCall","src":"1817:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1811:5:14"},"nodeType":"YulFunctionCall","src":"1811:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1776:6:14"},"nodeType":"YulFunctionCall","src":"1776:66:14"},"nodeType":"YulExpressionStatement","src":"1776:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1723:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1726:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1720:2:14"},"nodeType":"YulFunctionCall","src":"1720:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1734:19:14","statements":[{"nodeType":"YulAssignment","src":"1736:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1745:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1748:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1741:3:14"},"nodeType":"YulFunctionCall","src":"1741:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1736:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1716:3:14","statements":[]},"src":"1712:140:14"},{"body":{"nodeType":"YulBlock","src":"1886:66:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1915:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"1926:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:14"},"nodeType":"YulFunctionCall","src":"1911:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"1935:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1907:3:14"},"nodeType":"YulFunctionCall","src":"1907:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"1940:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1900:6:14"},"nodeType":"YulFunctionCall","src":"1900:42:14"},"nodeType":"YulExpressionStatement","src":"1900:42:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1864:2:14"},"nodeType":"YulFunctionCall","src":"1864:13:14"},"nodeType":"YulIf","src":"1861:2:14"},{"nodeType":"YulAssignment","src":"1961:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1977:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1996:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2004:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1992:3:14"},"nodeType":"YulFunctionCall","src":"1992:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2013:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2009:3:14"},"nodeType":"YulFunctionCall","src":"2009:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1988:3:14"},"nodeType":"YulFunctionCall","src":"1988:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1973:3:14"},"nodeType":"YulFunctionCall","src":"1973:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"2020:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1969:3:14"},"nodeType":"YulFunctionCall","src":"1969:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1961:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1522:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1533:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1544:4:14","type":""}],"src":"1432:597:14"},{"body":{"nodeType":"YulBlock","src":"2208:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2225:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2218:6:14"},"nodeType":"YulFunctionCall","src":"2218:21:14"},"nodeType":"YulExpressionStatement","src":"2218:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2259:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2270:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2255:3:14"},"nodeType":"YulFunctionCall","src":"2255:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"2275:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2248:6:14"},"nodeType":"YulFunctionCall","src":"2248:30:14"},"nodeType":"YulExpressionStatement","src":"2248:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2298:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2309:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:14"},"nodeType":"YulFunctionCall","src":"2294:18:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"2314:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2287:6:14"},"nodeType":"YulFunctionCall","src":"2287:62:14"},"nodeType":"YulExpressionStatement","src":"2287:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2369:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:14"},"nodeType":"YulFunctionCall","src":"2365:18:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"2385:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2358:6:14"},"nodeType":"YulFunctionCall","src":"2358:33:14"},"nodeType":"YulExpressionStatement","src":"2358:33:14"},{"nodeType":"YulAssignment","src":"2400:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2423:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:14"},"nodeType":"YulFunctionCall","src":"2408:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2400:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2199:4:14","type":""}],"src":"2034:399:14"},{"body":{"nodeType":"YulBlock","src":"2612:224:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2629:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2640:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2622:6:14"},"nodeType":"YulFunctionCall","src":"2622:21:14"},"nodeType":"YulExpressionStatement","src":"2622:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2663:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2674:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2659:3:14"},"nodeType":"YulFunctionCall","src":"2659:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"2679:2:14","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2652:6:14"},"nodeType":"YulFunctionCall","src":"2652:30:14"},"nodeType":"YulExpressionStatement","src":"2652:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2702:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2713:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2698:3:14"},"nodeType":"YulFunctionCall","src":"2698:18:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"2718:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2691:6:14"},"nodeType":"YulFunctionCall","src":"2691:62:14"},"nodeType":"YulExpressionStatement","src":"2691:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2773:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2784:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2769:3:14"},"nodeType":"YulFunctionCall","src":"2769:18:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"2789:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2762:6:14"},"nodeType":"YulFunctionCall","src":"2762:32:14"},"nodeType":"YulExpressionStatement","src":"2762:32:14"},{"nodeType":"YulAssignment","src":"2803:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2815:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2826:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:14"},"nodeType":"YulFunctionCall","src":"2811:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2803:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2589:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2603:4:14","type":""}],"src":"2438:398:14"},{"body":{"nodeType":"YulBlock","src":"3015:179:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3032:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3043:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3025:6:14"},"nodeType":"YulFunctionCall","src":"3025:21:14"},"nodeType":"YulExpressionStatement","src":"3025:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3066:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3077:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3062:3:14"},"nodeType":"YulFunctionCall","src":"3062:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3082:2:14","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3055:6:14"},"nodeType":"YulFunctionCall","src":"3055:30:14"},"nodeType":"YulExpressionStatement","src":"3055:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3116:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:14"},"nodeType":"YulFunctionCall","src":"3101:18:14"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"3121:31:14","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3094:6:14"},"nodeType":"YulFunctionCall","src":"3094:59:14"},"nodeType":"YulExpressionStatement","src":"3094:59:14"},{"nodeType":"YulAssignment","src":"3162:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3174:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3185:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3170:3:14"},"nodeType":"YulFunctionCall","src":"3170:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3162:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2992:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3006:4:14","type":""}],"src":"2841:353:14"},{"body":{"nodeType":"YulBlock","src":"3373:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3390:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3401:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3383:6:14"},"nodeType":"YulFunctionCall","src":"3383:21:14"},"nodeType":"YulExpressionStatement","src":"3383:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3435:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3420:3:14"},"nodeType":"YulFunctionCall","src":"3420:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3440:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:14"},"nodeType":"YulFunctionCall","src":"3413:30:14"},"nodeType":"YulExpressionStatement","src":"3413:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3463:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3474:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:14"},"nodeType":"YulFunctionCall","src":"3459:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"3479:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3452:6:14"},"nodeType":"YulFunctionCall","src":"3452:62:14"},"nodeType":"YulExpressionStatement","src":"3452:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:14"},"nodeType":"YulFunctionCall","src":"3530:18:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"3550:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:14"},"nodeType":"YulFunctionCall","src":"3523:36:14"},"nodeType":"YulExpressionStatement","src":"3523:36:14"},{"nodeType":"YulAssignment","src":"3568:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3580:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3591:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3576:3:14"},"nodeType":"YulFunctionCall","src":"3576:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3568:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3350:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3364:4:14","type":""}],"src":"3199:402:14"},{"body":{"nodeType":"YulBlock","src":"3780:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3797:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3808:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3790:6:14"},"nodeType":"YulFunctionCall","src":"3790:21:14"},"nodeType":"YulExpressionStatement","src":"3790:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3831:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3842:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3827:3:14"},"nodeType":"YulFunctionCall","src":"3827:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3847:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3820:6:14"},"nodeType":"YulFunctionCall","src":"3820:30:14"},"nodeType":"YulExpressionStatement","src":"3820:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3870:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3881:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3866:3:14"},"nodeType":"YulFunctionCall","src":"3866:18:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"3886:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:14"},"nodeType":"YulFunctionCall","src":"3859:62:14"},"nodeType":"YulExpressionStatement","src":"3859:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3941:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3952:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:14"},"nodeType":"YulFunctionCall","src":"3937:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"3957:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3930:6:14"},"nodeType":"YulFunctionCall","src":"3930:35:14"},"nodeType":"YulExpressionStatement","src":"3930:35:14"},{"nodeType":"YulAssignment","src":"3974:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3986:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3997:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3982:3:14"},"nodeType":"YulFunctionCall","src":"3982:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3974:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3757:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3771:4:14","type":""}],"src":"3606:401:14"},{"body":{"nodeType":"YulBlock","src":"4186:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4196:6:14"},"nodeType":"YulFunctionCall","src":"4196:21:14"},"nodeType":"YulExpressionStatement","src":"4196:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4237:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4248:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4233:3:14"},"nodeType":"YulFunctionCall","src":"4233:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4253:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4226:6:14"},"nodeType":"YulFunctionCall","src":"4226:30:14"},"nodeType":"YulExpressionStatement","src":"4226:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4276:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4287:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4272:3:14"},"nodeType":"YulFunctionCall","src":"4272:18:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"4292:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:14"},"nodeType":"YulFunctionCall","src":"4265:62:14"},"nodeType":"YulExpressionStatement","src":"4265:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4347:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4358:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4343:3:14"},"nodeType":"YulFunctionCall","src":"4343:18:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"4363:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4336:6:14"},"nodeType":"YulFunctionCall","src":"4336:34:14"},"nodeType":"YulExpressionStatement","src":"4336:34:14"},{"nodeType":"YulAssignment","src":"4379:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4391:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4402:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4387:3:14"},"nodeType":"YulFunctionCall","src":"4387:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4379:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4163:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4177:4:14","type":""}],"src":"4012:400:14"},{"body":{"nodeType":"YulBlock","src":"4591:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4608:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4619:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4601:6:14"},"nodeType":"YulFunctionCall","src":"4601:21:14"},"nodeType":"YulExpressionStatement","src":"4601:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4642:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4653:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4638:3:14"},"nodeType":"YulFunctionCall","src":"4638:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4658:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4631:6:14"},"nodeType":"YulFunctionCall","src":"4631:30:14"},"nodeType":"YulExpressionStatement","src":"4631:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4681:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4692:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4677:3:14"},"nodeType":"YulFunctionCall","src":"4677:18:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"4697:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4670:6:14"},"nodeType":"YulFunctionCall","src":"4670:62:14"},"nodeType":"YulExpressionStatement","src":"4670:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4752:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4763:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4748:3:14"},"nodeType":"YulFunctionCall","src":"4748:18:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"4768:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4741:6:14"},"nodeType":"YulFunctionCall","src":"4741:35:14"},"nodeType":"YulExpressionStatement","src":"4741:35:14"},{"nodeType":"YulAssignment","src":"4785:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4808:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:14"},"nodeType":"YulFunctionCall","src":"4793:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4568:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4582:4:14","type":""}],"src":"4417:401:14"},{"body":{"nodeType":"YulBlock","src":"4924:76:14","statements":[{"nodeType":"YulAssignment","src":"4934:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4957:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:14"},"nodeType":"YulFunctionCall","src":"4942:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4934:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4976:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"4987:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4969:6:14"},"nodeType":"YulFunctionCall","src":"4969:25:14"},"nodeType":"YulExpressionStatement","src":"4969:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4893:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4904:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4915:4:14","type":""}],"src":"4823:177:14"},{"body":{"nodeType":"YulBlock","src":"5102:87:14","statements":[{"nodeType":"YulAssignment","src":"5112:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5135:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:14"},"nodeType":"YulFunctionCall","src":"5120:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5112:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5154:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5169:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5165:3:14"},"nodeType":"YulFunctionCall","src":"5165:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5147:6:14"},"nodeType":"YulFunctionCall","src":"5147:36:14"},"nodeType":"YulExpressionStatement","src":"5147:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5071:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5082:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5093:4:14","type":""}],"src":"5005:184:14"},{"body":{"nodeType":"YulBlock","src":"5242:177:14","statements":[{"body":{"nodeType":"YulBlock","src":"5277:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5298:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5305:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5310:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5301:3:14"},"nodeType":"YulFunctionCall","src":"5301:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5291:6:14"},"nodeType":"YulFunctionCall","src":"5291:31:14"},"nodeType":"YulExpressionStatement","src":"5291:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5342:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5345:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5335:6:14"},"nodeType":"YulFunctionCall","src":"5335:15:14"},"nodeType":"YulExpressionStatement","src":"5335:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5370:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5373:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5363:6:14"},"nodeType":"YulFunctionCall","src":"5363:15:14"},"nodeType":"YulExpressionStatement","src":"5363:15:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5258:1:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5265:1:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5261:3:14"},"nodeType":"YulFunctionCall","src":"5261:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5255:2:14"},"nodeType":"YulFunctionCall","src":"5255:13:14"},"nodeType":"YulIf","src":"5252:2:14"},{"nodeType":"YulAssignment","src":"5397:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5408:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"5411:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5404:3:14"},"nodeType":"YulFunctionCall","src":"5404:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5397:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5225:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"5228:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5234:3:14","type":""}],"src":"5194:225:14"},{"body":{"nodeType":"YulBlock","src":"5479:325:14","statements":[{"nodeType":"YulAssignment","src":"5489:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5503:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5506:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5499:3:14"},"nodeType":"YulFunctionCall","src":"5499:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5489:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"5520:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5550:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"5556:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5546:3:14"},"nodeType":"YulFunctionCall","src":"5546:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5524:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5597:31:14","statements":[{"nodeType":"YulAssignment","src":"5599:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5613:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5621:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5609:3:14"},"nodeType":"YulFunctionCall","src":"5609:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5599:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5577:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5570:6:14"},"nodeType":"YulFunctionCall","src":"5570:26:14"},"nodeType":"YulIf","src":"5567:2:14"},{"body":{"nodeType":"YulBlock","src":"5687:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5708:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5715:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5720:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5711:3:14"},"nodeType":"YulFunctionCall","src":"5711:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5701:6:14"},"nodeType":"YulFunctionCall","src":"5701:31:14"},"nodeType":"YulExpressionStatement","src":"5701:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5752:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5755:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5745:6:14"},"nodeType":"YulFunctionCall","src":"5745:15:14"},"nodeType":"YulExpressionStatement","src":"5745:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5780:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5773:6:14"},"nodeType":"YulFunctionCall","src":"5773:15:14"},"nodeType":"YulExpressionStatement","src":"5773:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5643:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5666:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5674:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5663:2:14"},"nodeType":"YulFunctionCall","src":"5663:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5640:2:14"},"nodeType":"YulFunctionCall","src":"5640:38:14"},"nodeType":"YulIf","src":"5637:2:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5459:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5468:6:14","type":""}],"src":"5424:380:14"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b4114610165578063a457c2d71461016d578063a9059cbb14610180578063dd62ed3e1461019357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a6565b6040516100c391906107a1565b60405180910390f35b6100df6100da366004610777565b610238565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461073b565b610250565b60055460405160ff90911681526020016100c3565b6100df610137366004610777565b610274565b6100f361014a3660046106e6565b6001600160a01b031660009081526020819052604090205490565b6100b6610296565b6100df61017b366004610777565b6102a5565b6100df61018e366004610777565b610325565b6100f36101a1366004610708565b610333565b6060600380546101b59061081c565b80601f01602080910402602001604051908101604052809291908181526020018280546101e19061081c565b801561022e5780601f106102035761010080835404028352916020019161022e565b820191906000526020600020905b81548152906001019060200180831161021157829003601f168201915b5050505050905090565b60003361024681858561035e565b5060019392505050565b60003361025e858285610482565b6102698585856104fc565b506001949350505050565b6000336102468185856102878383610333565b61029191906107f6565b61035e565b6060600480546101b59061081c565b600033816102b38286610333565b9050838110156103185760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610269828686840361035e565b6000336102468185856104fc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103c05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030f565b6001600160a01b0382166104215760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048e8484610333565b905060001981146104f657818110156104e95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030f565b6104f6848484840361035e565b50505050565b6001600160a01b0383166105605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030f565b6001600160a01b0382166105c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030f565b6001600160a01b0383166000908152602081905260409020548181101561063a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030f565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106719084906107f6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106bd91815260200190565b60405180910390a36104f6565b80356001600160a01b03811681146106e157600080fd5b919050565b6000602082840312156106f857600080fd5b610701826106ca565b9392505050565b6000806040838503121561071b57600080fd5b610724836106ca565b9150610732602084016106ca565b90509250929050565b60008060006060848603121561075057600080fd5b610759846106ca565b9250610767602085016106ca565b9150604084013590509250925092565b6000806040838503121561078a57600080fd5b610793836106ca565b946020939093013593505050565b600060208083528351808285015260005b818110156107ce578581018301518582016040015282016107b2565b818111156107e0576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061083057607f821691505b6020821081141561085157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220991b13ebcc2b2f550ccbfc911a9dedcaa73f2de2ccaa0aa20cae09bd48aacdf864736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x296 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B5 SWAP1 PUSH2 0x81C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E1 SWAP1 PUSH2 0x81C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x246 DUP2 DUP6 DUP6 PUSH2 0x35E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25E DUP6 DUP3 DUP6 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x269 DUP6 DUP6 DUP6 PUSH2 0x4FC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x246 DUP2 DUP6 DUP6 PUSH2 0x287 DUP4 DUP4 PUSH2 0x333 JUMP JUMPDEST PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B5 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2B3 DUP3 DUP7 PUSH2 0x333 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x269 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x246 DUP2 DUP6 DUP6 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E DUP5 DUP5 PUSH2 0x333 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH2 0x4F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x671 SWAP1 DUP5 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x701 DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x724 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP2 POP PUSH2 0x732 PUSH1 0x20 DUP5 ADD PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x759 DUP5 PUSH2 0x6CA JUMP JUMPDEST SWAP3 POP PUSH2 0x767 PUSH1 0x20 DUP6 ADD PUSH2 0x6CA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7CE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7B2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x817 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x830 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x851 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SHL SGT 0xEB 0xCC 0x2B 0x2F SSTORE 0xC 0xCB 0xFC SWAP2 BYTE SWAP14 0xED 0xCA 0xA7 EXTCODEHASH 0x2D 0xE2 0xCC 0xAA EXP LOG2 0xC 0xAE MULMOD 0xBD 0x48 0xAA 0xCD 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"244:5367:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1737:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:14;;1398:22;1380:41;;1368:2;1353:18;1737:197:13;1335:92:14;1144:106:13;1231:12;;1144:106;;;4969:25:14;;;4957:2;4942:18;1144:106:13;4924:76:14;1940:286:13;;;;;;:::i;:::-;;:::i;1040:98::-;1122:9;;1040:98;;1122:9;;;;5147:36:14;;5135:2;5120:18;1040:98:13;5102:87:14;2232:234:13;;;;;;:::i;:::-;;:::i;1256:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1356:18:13;1330:7;1356:18;;;;;;;;;;;;1256:125;932:102;;;:::i;2472:427::-;;;;;;:::i;:::-;;:::i;1387:189::-;;;;;;:::i;:::-;;:::i;1582:149::-;;;;;;:::i;:::-;;:::i;828:98::-;882:13;914:5;907:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:98;:::o;1737:197::-;1820:4;719:10:8;1874:32:13;719:10:8;1890:7:13;1899:6;1874:8;:32::i;:::-;-1:-1:-1;1923:4:13;;1737:197;-1:-1:-1;;;1737:197:13:o;1940:286::-;2067:4;719:10:8;2123:38:13;2139:4;719:10:8;2154:6:13;2123:15;:38::i;:::-;2171:27;2181:4;2187:2;2191:6;2171:9;:27::i;:::-;-1:-1:-1;2215:4:13;;1940:286;-1:-1:-1;;;;1940:286:13:o;2232:234::-;2320:4;719:10:8;2374:64:13;719:10:8;2390:7:13;2427:10;2399:25;719:10:8;2390:7:13;2399:9;:25::i;:::-;:38;;;;:::i;:::-;2374:8;:64::i;932:102::-;988:13;1020:7;1013:14;;;;;:::i;2472:427::-;2565:4;719:10:8;2565:4:13;2646:25;719:10:8;2663:7:13;2646:9;:25::i;:::-;2619:52;;2709:15;2689:16;:35;;2681:85;;;;-1:-1:-1;;;2681:85:13;;4619:2:14;2681:85:13;;;4601:21:14;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:14;;;4741:35;4793:19;;2681:85:13;;;;;;;;;2800:60;2809:5;2816:7;2844:15;2825:16;:34;2800:8;:60::i;1387:189::-;1466:4;719:10:8;1520:28:13;719:10:8;1537:2:13;1541:6;1520:9;:28::i;1582:149::-;-1:-1:-1;;;;;1697:18:13;;;1671:7;1697:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;1582:149::o;4539:370::-;-1:-1:-1;;;;;4670:19:13;;4662:68;;;;-1:-1:-1;;;4662:68:13;;4214:2:14;4662:68:13;;;4196:21:14;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:14;;;4336:34;4387:19;;4662:68:13;4186:226:14;4662:68:13;-1:-1:-1;;;;;4748:21:13;;4740:68;;;;-1:-1:-1;;;4740:68:13;;2640:2:14;4740:68:13;;;2622:21:14;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:14;;;2762:32;2811:19;;4740:68:13;2612:224:14;4740:68:13;-1:-1:-1;;;;;4819:18:13;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;4870:32;;4969:25:14;;;4870:32:13;;4942:18:14;4870:32:13;;;;;;;4539:370;;;:::o;4915:441::-;5045:24;5072:25;5082:5;5089:7;5072:9;:25::i;:::-;5045:52;;-1:-1:-1;;5111:16:13;:37;5107:243;;5192:6;5172:16;:26;;5164:68;;;;-1:-1:-1;;;5164:68:13;;3043:2:14;5164:68:13;;;3025:21:14;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;5164:68:13;3015:179:14;5164:68:13;5274:51;5283:5;5290:7;5318:6;5299:16;:25;5274:8;:51::i;:::-;5035:321;4915:441;;;:::o;2905:651::-;-1:-1:-1;;;;;3031:18:13;;3023:68;;;;-1:-1:-1;;;3023:68:13;;3808:2:14;3023:68:13;;;3790:21:14;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:14;;;3930:35;3982:19;;3023:68:13;3780:227:14;3023:68:13;-1:-1:-1;;;;;3109:16:13;;3101:64;;;;-1:-1:-1;;;3101:64:13;;2236:2:14;3101:64:13;;;2218:21:14;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:14;;;2358:33;2408:19;;3101:64:13;2208:225:14;3101:64:13;-1:-1:-1;;;;;3247:15:13;;3225:19;3247:15;;;;;;;;;;;3280:21;;;;3272:72;;;;-1:-1:-1;;;3272:72:13;;3401:2:14;3272:72:13;;;3383:21:14;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:14;;;3523:36;3576:19;;3272:72:13;3373:228:14;3272:72:13;-1:-1:-1;;;;;3378:15:13;;;:9;:15;;;;;;;;;;;3396:20;;;3378:38;;3436:13;;;;;;;;:23;;3410:6;;3378:9;3436:23;;3410:6;;3436:23;:::i;:::-;;;;;;;;3490:2;-1:-1:-1;;;;;3475:26:13;3484:4;-1:-1:-1;;;;;3475:26:13;;3494:6;3475:26;;;;4969:25:14;;4957:2;4942:18;;4924:76;3475:26:13;;;;;;;;3512:37;5362:121;14:173:14;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:14:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:14:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:2;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:2;-1:-1:-1;2013:2:14;1992:15;-1:-1:-1;;1988:29:14;1973:45;;;;2020:2;1969:54;;1553:476;-1:-1:-1;;;1553:476:14:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:2;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:2;-1:-1:-1;5404:9:14;;5242:177::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:2;;5621:4;5613:6;5609:17;5599:27;;5567:2;5674;5666:6;5663:14;5643:18;5640:38;5637:2;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:2;;5479:325;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"437800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24624","balanceOf(address)":"2562","decimals()":"2378","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"26978","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51270","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestErc20.sol\":\"TestErc20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/test/TestErc20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\ncontract TestErc20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 _supply,\\n        address holder,\\n        uint8 decimals_\\n    ) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = decimals_;\\n\\n        _mint(holder, _supply);\\n    }\\n\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function decimals() public view virtual override returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x1f6118f4296b5ad27961dfd27e007a9efd514175e0cd7466baa696b6bb40ae9d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2733,"contract":"contracts/test/TestErc20.sol:TestErc20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":2739,"contract":"contracts/test/TestErc20.sol:TestErc20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2741,"contract":"contracts/test/TestErc20.sol:TestErc20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":2743,"contract":"contracts/test/TestErc20.sol:TestErc20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2745,"contract":"contracts/test/TestErc20.sol:TestErc20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2747,"contract":"contracts/test/TestErc20.sol:TestErc20","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}